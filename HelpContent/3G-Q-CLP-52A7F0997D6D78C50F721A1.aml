
<topic id="52A7F0997D6D78C50F721A19A47761A1" revisionNumber="1">

<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">

<introduction>

<para>
Previous section: <link xlink:href="ACDF493F583131AAA215E511C0353C67">Create a surface plot</link></para>
<autoOutline />
<markup><hr/></markup>

<para>
A 3D line plot is, as is already suggested by the name, a plot of a line in 3D space. As such, in order to plot a line, we need a sequence of points in 3D space, that becomes connected then by a line. Each point consists of 3 values: x, y, and z.
</para>
</introduction>

<section address="73C317019BF315D2ABFBC53A01160307">
<title>Create some data (or use your own)
</title>
<content>

<para>
Knots are nice examples of lines in 3D space. We visit the <externalLink><linkText>web site of Paul Bourke</linkText><linkUri>http://paulbourke.net/geometry/knots/</linkUri></externalLink> to find out the formulas that are necessary to model knots in 3D space. In particular, we use the Knot2 from this web site for our example.
</para>

<para>
The x, y, and z values in this example are varied according to the following equations:
</para>
<markup><a href="ACAC6A80-7CE0-4CB9-B36C-B2FB6ACAB027.htm#83737D6EA2F4140DC18CEA76E75AAC4F"><img src="../media/83737D6EA2F4140DC18CEA76E75AAC4F.png" width="159" height="36"></img></a></markup><markup><a href="ACAC6A80-7CE0-4CB9-B36C-B2FB6ACAB027.htm#111F61764EDC2D7F8BD5F1D0E26789A6"><img src="../media/111F61764EDC2D7F8BD5F1D0E26789A6.png" width="156" height="36"></img></a></markup><markup><a href="ACAC6A80-7CE0-4CB9-B36C-B2FB6ACAB027.htm#4DF582BAFE442A0CD0E50CC1BD879282"><img src="../media/4DF582BAFE442A0CD0E50CC1BD879282.png" width="188" height="35"></img></a></markup>

<para>
with <markup><a href="ACAC6A80-7CE0-4CB9-B36C-B2FB6ACAB027.htm#EE08375A8870F8D3299AC5649339033B"><img src="../media/EE08375A8870F8D3299AC5649339033B.png" width="9" height="10" align="bottom"></img></a></markup> ranging from 0 to <markup><a href="ACAC6A80-7CE0-4CB9-B36C-B2FB6ACAB027.htm#9EF04164314A12B785E270B040D368BB"><img src="../media/9EF04164314A12B785E270B040D368BB.png" width="16" height="12" align="middle"></img></a></markup>.
</para>

<para>
Create an empty worksheet, and then open the worksheet script dialog by choosing from the main menu  <codeInline>Worksheet → Worksheet script</codeInline>.
</para>

<para>
We use here the same script as already shown in the advanced example in the <link xlink:href="99E27F5DA0A5611AA26D632399925C2D#2DGraph_Quickstart_DensityPlot">quickstart section of the 2D-density plot</link>.
</para>

<para>
Enter the following script text (you can copy it from here):
</para>

<code>
            col.RemoveColumnsAll();
            var xCol = col.EnsureExistence(&quot;X values&quot;, typeof(DoubleColumn), ColumnKind.X, 0);
            var yCol = col.EnsureExistence(&quot;Y values&quot;, typeof(DoubleColumn), ColumnKind.Y, 0);
            var zCol = col.EnsureExistence(&quot;Z values&quot;, typeof(DoubleColumn), ColumnKind.V, 0);
            for (int i = 0; i &lt;= 1024; ++i) // index of columns
            {
                var mu = (2 * PI * i) / 1024; // range of mu: [0, 2π]
                xCol[i] = (4 * Cos(mu + PI)) / 3 + 2 * Cos(3 * mu);
                yCol[i] = 4 * Sin(mu) / 3 + 2 * Sin(3 * mu);
                zCol[i] = Sin(4 * mu) + Sin(2 * mu) / 2;
            }
</code>

<para>
The first line of the script removes all existing columns from the table. The next 3 lines create the x, y and z column. Then a loop from i=0 to 1024 is started, in which the variable mu varies from 0 to 2π. The values for x, y and z are then set according to the formulas given on <externalLink><linkText>Paul Bourke's web site</linkText><linkUri>http://paulbourke.net/geometry/knots/</linkUri></externalLink> for Knot2.
</para>
</content>
</section>

<section address="58BB206A04E151DFC9E83CC01777838D">
<title>Plot the data
</title>
<content>

<para>
The resulting worksheet should look like this:
</para>

<para>
<mediaLinkInline><image xlink:href="4D0DF8284423095FCA32789ACBFED9E5"></image></mediaLinkInline>
</para>

<para>
In the worksheet above, I have selected the column containing the z values. <legacyBold>Do not select the other columns</legacyBold>, since they are already tagged as x column and y column (see the <codeInline>X0</codeInline> or <codeInline>Y0</codeInline> in the lower right corner of the column header).
</para>

<para>
Now use from the main menu <codeInline>Plot → 3D-Plots → Line</codeInline> to get the line plot, shown in the following graph:
</para>

<para>
<markup><a href="ACAC6A80-7CE0-4CB9-B36C-B2FB6ACAB027.htm#D1F071DEA0BD5DCB23BC4EFD09D91A41"><img src="../media/D1F071DEA0BD5DCB23BC4EFD09D91A41.png" width="567"></img></a></markup>
</para>

<para>
This could look even better when modifiying the line widths to 10 and 2, and playing a little with the light:
</para>

<para>
<markup><a href="ACAC6A80-7CE0-4CB9-B36C-B2FB6ACAB027.htm#B0A5C80BA7C7842780269C1E4795C49B"><img src="../media/B0A5C80BA7C7842780269C1E4795C49B.png" width="567"></img></a></markup>
</para>
</content>
</section>
<markup><hr/></markup>
<section>

<content>

<para>
Next section: <link xlink:href="5B0DC6C5A311694B99B22BE8194FBB1A">Text documents - Markdown in Altaxo</link></para>
</content>
</section>
</developerConceptualDocument>
</topic>
