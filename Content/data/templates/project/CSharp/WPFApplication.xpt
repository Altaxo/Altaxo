<?xml version="1.0"?>
<Template originator   = "Mathias Simmack"
          created      = "26/10/2005"
          lastModified = "11/01/2006">
	
	<!-- Template Header -->
	<TemplateConfiguration>
		<Name>${res:Templates.Project.WinFXApplication.Name}</Name>
		<Category>C#</Category>
		<Subcategory>WinFX</Subcategory>
		<Icon>C#.Project.Form</Icon>
		<LanguageName>C#</LanguageName>
		<Description>${res:Templates.Project.WinFXApplication.Description}</Description>
	</TemplateConfiguration>
	
	<!-- Actions -->
	<Actions>
	</Actions>
	
	<Combine name = "${ProjectName}" directory = ".">
		<Options>
			<StartupProject>${ProjectName}</StartupProject>
		</Options>
		
		<Project name = "${ProjectName}" directory = ".">
			<Options OutputType = "WinExe" />

			<ProjectItems>
				<Reference Include="System" />
				<Reference Include="System.Data" />
				<Reference Include="System.Printing"/>
				<Reference Include="System.Runtime.Serialization"/>
				<Reference Include="System.Security.Authorization"/>
				<!-- Reference Include="System.ServiceModel"/ -->
				<Reference Include="System.Xml" />
				<Reference Include="WindowsBase" />
				<Reference Include="PresentationCore" />
				<Reference Include="PresentationFramework" />
				<Reference Include="ReachFramework" />
				<Reference Include="UIAutomationProvider" />
				<Reference Include="UIAutomationTypes" />
			</ProjectItems>

			<Imports>
				<Import Project="$(MSBuildBinPath)\Microsoft.WinFX.targets" />
			</Imports>
			
			<Files>
				<File name="MyApp.xaml" buildAction="ApplicationDefinition" language="XML"><![CDATA[<Application x:Class="${StandardNamespace}.MyApp"
    xmlns="http://schemas.microsoft.com/winfx/avalon/2005"
    xmlns:x="http://schemas.microsoft.com/winfx/xaml/2005"
    Startup="AppStartup"
    >
    <Application.Resources>
         
    </Application.Resources>
</Application>]]></File>
				<File name="MyApp.xaml.cs" subType="Code" dependentUpon="MyApp.xaml"><![CDATA[using System;
using System.Windows;
using System.Data;
using System.Xml;
using System.Configuration;

namespace ${StandardNamespace}
{
    /// <summary>
    /// Interaction logic for MyApp.xaml
    /// </summary>

    public partial class MyApp : Application
    {

        void AppStartup(object sender, StartupEventArgs args)
        {
            Window1 mainWindow = new Window1();
            mainWindow.Show();
        }

    }
}]]></File>
				<File name="Window1.xaml" buildAction="Page" language="XML"><![CDATA[<Window x:Class="${StandardNamespace}.Window1"
    xmlns="http://schemas.microsoft.com/winfx/avalon/2005"
    xmlns:x="http://schemas.microsoft.com/winfx/xaml/2005"
    Title="Window1"
    >
    <Grid>
        
    </Grid>
</Window>]]></File>
				<File name="Window1.xaml.cs" subType="Code" dependentUpon="Window1.xaml"><![CDATA[using System;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Media;
using System.Windows.Shapes;


namespace ${StandardNamespace}
{
    /// <summary>
    /// Interaction logic for Window1.xaml
    /// </summary>

    public partial class Window1 : Window
    {
        public Window1()
        {
            InitializeComponent();
        }

        // To use Loaded event put Loaded="WindowLoaded" attribute in root element of .xaml file.
        // private void WindowLoaded(object sender, RoutedEventArgs e) {}

        // Sample event handler:  
        // private void ButtonClick(object sender, RoutedEventArgs e) {}

    }
}]]></File>
				<File name="AssemblyInfo.cs"><![CDATA[#region Using directives

using System.Reflection;
using System.Runtime.CompilerServices;
using System.Resources;
using System.Globalization;
using System.Windows;
using System.Runtime.InteropServices;

#endregion

// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
[assembly: AssemblyTitle("${ProjectName}")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("${USER}")]
[assembly: AssemblyProduct("${ProjectName}")]
[assembly: AssemblyCopyright("Copyright @ ${USER} ${DATE}")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
[assembly: ComVisible(false)]

//In order to begin building localizable applications, set 
//<UICulture>CultureYouAreCodingWith</UICulture> in your .csproj file
//inside a <PropertyGroup>.  For example, if you are using US english
//in your source files, set the <UICulture> to en-US.  Then uncomment
//the NeutralResourceLanguage attribute below.  Update the "en-US" in
//the line below to match the UICulture setting in the project file.

//[assembly: NeutralResourcesLanguage("en-US", UltimateResourceFallbackLocation.Satellite)]


[assembly: ThemeInfo(
    ResourceDictionaryLocation.None, //where theme specific resource dictionaries are located
    //(used if a resource is not found in the page, 
    // or application resource dictionaries)
    ResourceDictionaryLocation.SourceAssembly //where the generic resource dictionary is located
    //(used if a resource is not found in the page, 
    // app, or any theme specific resource dictionaries)
)]


// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:
[assembly: AssemblyVersion("1.0.*")]]]></File>
			</Files>
		</Project>
	</Combine>
</Template>
