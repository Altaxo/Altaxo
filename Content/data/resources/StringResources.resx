<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddInManager.About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AddInManager.ActionCancelDeinstallation" xml:space="preserve">
    <value>Cancel deinstallation</value>
  </data>
  <data name="AddInManager.ActionCancelInstallation" xml:space="preserve">
    <value>Cancel installation</value>
  </data>
  <data name="AddInManager.ActionCancelUpdate" xml:space="preserve">
    <value>Cancel update</value>
  </data>
  <data name="AddInManager.ActionDisable" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="AddInManager.ActionEnable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="AddInManager.ActionInstall" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="AddInManager.ActionUninstall" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="AddInManager.ActionUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="AddInManager.AddInDependencyFailed" xml:space="preserve">
    <value>A dependency for this AddIn was not found. Install it to enable this AddIn.</value>
  </data>
  <data name="AddInManager.AddInDisabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="AddInManager.AddInEnabled" xml:space="preserve">
    <value>AddIn will be enabled after restarting SharpDevelop</value>
  </data>
  <data name="AddInManager.AddInInstalled" xml:space="preserve">
    <value>AddIn will be installed after restarting SharpDevelop</value>
  </data>
  <data name="AddInManager.AddInInstalledTwice" xml:space="preserve">
    <value>This AddIns is installed twice. Please uninstall one  copy.</value>
  </data>
  <data name="AddInManager.AddInMustHaveIdentity" xml:space="preserve">
    <value>The AddIn must have an &lt;Identity&gt; for use with the AddIn-Manager.</value>
  </data>
  <data name="AddInManager.AddInRemoved" xml:space="preserve">
    <value>AddIn will be removed after restarting SharpDevelop</value>
  </data>
  <data name="AddInManager.AddInUpdated" xml:space="preserve">
    <value>AddIn will be updated after restarting SharpDevelop</value>
  </data>
  <data name="AddInManager.AddInWillBeDisabled" xml:space="preserve">
    <value>AddIn will be disabled after restarting SharpDevelop</value>
  </data>
  <data name="AddInManager.CannotDisableAddInManager" xml:space="preserve">
    <value>You cannot disable the AddInManager because you need it to re-enable AddIns!</value>
  </data>
  <data name="AddInManager.CannotInstallIntoApplicationDirectory" xml:space="preserve">
    <value>You cannot install AddIns inside the ${ProductName} directory, they will be picked up as pre-installed AddIns automatically.</value>
  </data>
  <data name="AddInManager.DescriptionCancelDeinstallation" xml:space="preserve">
    <value>Aborts the deinstallation of the selected AddIn(s).</value>
  </data>
  <data name="AddInManager.DescriptionCancelInstall" xml:space="preserve">
    <value>Aborts the installation of the selected AddIn(s).</value>
  </data>
  <data name="AddInManager.DescriptionCancelUpdate" xml:space="preserve">
    <value>Aborts the update of the selected AddIn(s).</value>
  </data>
  <data name="AddInManager.DescriptionDisable" xml:space="preserve">
    <value>Disables the selected AddIn(s).</value>
  </data>
  <data name="AddInManager.DescriptionEnable" xml:space="preserve">
    <value>Enables the selected AddIn(s).</value>
  </data>
  <data name="AddInManager.DescriptionInconsistentSelection" xml:space="preserve">
    <value>The selection is inconsistent, please select only AddIns with the same status.</value>
  </data>
  <data name="AddInManager.FileAssociation" xml:space="preserve">
    <value>AddIn Installation Package</value>
  </data>
  <data name="AddInManager.FileFilter" xml:space="preserve">
    <value>SharpDevelop AddIns|*.addin;*.sdaddin|All files|*.*</value>
  </data>
  <data name="AddInManager.InstallButton" xml:space="preserve">
    <value>&amp;Install AddIn</value>
  </data>
  <data name="AddInManager.NoAddInsInstalled" xml:space="preserve">
    <value>You don't have any AddIns installed.
Download an AddIn from the Internet, then click 'Install AddIn' and choose the downloaded file to install it.</value>
  </data>
  <data name="AddInManager.OpenWebsite" xml:space="preserve">
    <value>Open Website</value>
  </data>
  <data name="AddInManager.Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="AddInManager.RequiredBy" xml:space="preserve">
    <value>AddIns are required by:</value>
  </data>
  <data name="AddInManager.RequiredDependencies" xml:space="preserve">
    <value>Required dependencies:</value>
  </data>
  <data name="AddInManager.ShowPreinstalledAddIns" xml:space="preserve">
    <value>Show preinstalled AddIns</value>
  </data>
  <data name="AddInManager.Title" xml:space="preserve">
    <value>AddIn Manager</value>
  </data>
  <data name="AddInManager.UnknownFileFormat" xml:space="preserve">
    <value>Unknown file format:</value>
  </data>
  <data name="AddIns.ClassDiagram.ShowClassDiagram" xml:space="preserve">
    <value>Show Class Diagram</value>
  </data>
  <data name="AddIns.Git.TortoiseGitRequired" xml:space="preserve">
    <value>TortoiseGit needs to be installed to execute this action.</value>
    <comment>Error message when executing git command but TortoiseGit cannot be found</comment>
  </data>
  <data name="AddIns.HelpViewer.ContentsPadTitle" xml:space="preserve">
    <value>Contents</value>
  </data>
  <data name="AddIns.HelpViewer.DisplayContentsCommand" xml:space="preserve">
    <value>Display Contents</value>
  </data>
  <data name="AddIns.HelpViewer.DisplaySearchCommand" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="AddIns.HelpViewer.HelpLibraryRootTitle" xml:space="preserve">
    <value>Help Library</value>
  </data>
  <data name="AddIns.HelpViewer.HelpModeLabel" xml:space="preserve">
    <value>Help Mode</value>
  </data>
  <data name="AddIns.HelpViewer.InstalledHelpCatalogsLabel" xml:space="preserve">
    <value>Installed Help Catalogs</value>
  </data>
  <data name="AddIns.HelpViewer.MicrosoftHelpViewerTitle" xml:space="preserve">
    <value>Microsoft Help Viewer</value>
  </data>
  <data name="AddIns.HelpViewer.OfflineFeatureRequestMsg" xml:space="preserve">
    <value>You requested an offline feature in the online help mode. You have to change the mode in order to use this feature.</value>
  </data>
  <data name="AddIns.HelpViewer.SearchDoSearchButton" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="AddIns.HelpViewer.SearchLookForLabel" xml:space="preserve">
    <value>Look for:</value>
  </data>
  <data name="AddIns.HelpViewer.SearchPadTitle" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="AddIns.HelpViewer.ShowErrorHelpTitle" xml:space="preserve">
    <value>Show Help</value>
  </data>
  <data name="AddIns.HelpViewer.UseExternalHelp" xml:space="preserve">
    <value>Use external help</value>
  </data>
  <data name="AddIns.HelpViewer.UseOfflineHelpLabel" xml:space="preserve">
    <value>I want to use local help</value>
  </data>
  <data name="AddIns.HelpViewer.UseOnlineHelpLabel" xml:space="preserve">
    <value>I want to use online help</value>
  </data>
  <data name="AddIns.HexEditor.DefaultBytesPerLine" xml:space="preserve">
    <value>Number of bytes per line</value>
    <comment>hex editor option (number of bytes displayed in one line)</comment>
  </data>
  <data name="AddIns.HexEditor.Display" xml:space="preserve">
    <value>Display</value>
    <comment>'display' group box in hex editor options</comment>
  </data>
  <data name="AddIns.HexEditor.Display.Elements" xml:space="preserve">
    <value>Elements</value>
    <comment>Elements that can be configured in hex editor options</comment>
  </data>
  <data name="AddIns.HexEditor.Display.Elements.Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="AddIns.HexEditor.Display.Elements.Offset" xml:space="preserve">
    <value>Offset</value>
  </data>
  <data name="AddIns.HexEditor.NumeralSystem" xml:space="preserve">
    <value>Numeral system</value>
  </data>
  <data name="AddIns.HexEditor.SizeToFit" xml:space="preserve">
    <value>Resize to fit current width</value>
    <comment>Used for the HexEditor's full width display button in the left corner of the display.</comment>
  </data>
  <data name="AddIns.HtmlHelp2.AddToFavorites" xml:space="preserve">
    <value>Add to Help Favorites</value>
  </data>
  <data name="AddIns.HtmlHelp2.Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="AddIns.HtmlHelp2.Contents" xml:space="preserve">
    <value>Contents</value>
  </data>
  <data name="AddIns.HtmlHelp2.DefaultEmptyFilter" xml:space="preserve">
    <value>(no filter)</value>
  </data>
  <data name="AddIns.HtmlHelp2.Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="AddIns.HtmlHelp2.DynamicHelp" xml:space="preserve">
    <value>Dynamic Help</value>
  </data>
  <data name="AddIns.HtmlHelp2.EnterURL" xml:space="preserve">
    <value>Enter URL</value>
  </data>
  <data name="AddIns.HtmlHelp2.Environment" xml:space="preserve">
    <value>Help 2.0 Environment</value>
  </data>
  <data name="AddIns.HtmlHelp2.Favorites" xml:space="preserve">
    <value>Help Favorites</value>
  </data>
  <data name="AddIns.HtmlHelp2.FilteredBy" xml:space="preserve">
    <value>Filtered by:</value>
  </data>
  <data name="AddIns.HtmlHelp2.Forward" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="AddIns.HtmlHelp2.HelpCollectionMayBeEmpty" xml:space="preserve">
    <value>The Help 2.0 system seems to be installed, but either the selected collection has no content or its content is unavailable.</value>
  </data>
  <data name="AddIns.HtmlHelp2.HelpSearchCaption" xml:space="preserve">
    <value>Searching</value>
  </data>
  <data name="AddIns.HtmlHelp2.HelpSearchInProgress" xml:space="preserve">
    <value>Searching for "${0}" ...</value>
  </data>
  <data name="AddIns.HtmlHelp2.HelpSystemNotAvailable" xml:space="preserve">
    <value>The help system is not available.
You need to install the .NET Framework SDK to get the help system.</value>
  </data>
  <data name="AddIns.HtmlHelp2.HelpUpdateCaption" xml:space="preserve">
    <value>Help Update in Progress</value>
  </data>
  <data name="AddIns.HtmlHelp2.HelpUpdateInProgress" xml:space="preserve">
    <value>Help is updating to reflect your recent changes.  This may take several minutes.</value>
  </data>
  <data name="AddIns.HtmlHelp2.HighlightMatches" xml:space="preserve">
    <value>Highlight matches</value>
  </data>
  <data name="AddIns.HtmlHelp2.Homepage" xml:space="preserve">
    <value>Homepage</value>
  </data>
  <data name="AddIns.HtmlHelp2.Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="AddIns.HtmlHelp2.IndexResults" xml:space="preserve">
    <value>Index results</value>
  </data>
  <data name="AddIns.HtmlHelp2.Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="AddIns.HtmlHelp2.LookFor" xml:space="preserve">
    <value>Look for:</value>
  </data>
  <data name="AddIns.HtmlHelp2.LookForSimilarWords" xml:space="preserve">
    <value>Look for similiar words</value>
  </data>
  <data name="AddIns.HtmlHelp2.MultiTopic" xml:space="preserve">
    <value>topics</value>
  </data>
  <data name="AddIns.HtmlHelp2.NewWindow" xml:space="preserve">
    <value>New Window</value>
  </data>
  <data name="AddIns.HtmlHelp2.NextTopic" xml:space="preserve">
    <value>Next topic</value>
  </data>
  <data name="AddIns.HtmlHelp2.NoDataIsAvailableForDynamicHelp" xml:space="preserve">
    <value>No data is available for the current selection.</value>
  </data>
  <data name="AddIns.HtmlHelp2.Options.AdditionOptions" xml:space="preserve">
    <value>Additional Options</value>
  </data>
  <data name="AddIns.HtmlHelp2.Options.Groupbox" xml:space="preserve">
    <value>Help Collection</value>
  </data>
  <data name="AddIns.HtmlHelp2.Options.Label" xml:space="preserve">
    <value>Please select the help collection that you want to use in SharpDevelop.</value>
  </data>
  <data name="AddIns.HtmlHelp2.Options.Reregister" xml:space="preserve">
    <value>Reregister SharpDevelop help</value>
  </data>
  <data name="AddIns.HtmlHelp2.Options.ShowTocPictures" xml:space="preserve">
    <value>Show pictures in the content</value>
  </data>
  <data name="AddIns.HtmlHelp2.PreviousTopic" xml:space="preserve">
    <value>Previous topic</value>
  </data>
  <data name="AddIns.HtmlHelp2.PrintSubtopics" xml:space="preserve">
    <value>Print Subtopics ...</value>
  </data>
  <data name="AddIns.HtmlHelp2.PrintTopic" xml:space="preserve">
    <value>Print Topic ...</value>
  </data>
  <data name="AddIns.HtmlHelp2.PrintTopicAndSubtopics" xml:space="preserve">
    <value>Print Topic and Subtopics ...</value>
  </data>
  <data name="AddIns.HtmlHelp2.Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="AddIns.HtmlHelp2.Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="AddIns.HtmlHelp2.RemoveFavorite" xml:space="preserve">
    <value>Are you sure you want to remove "${0}" from favorites?</value>
  </data>
  <data name="AddIns.HtmlHelp2.Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="AddIns.HtmlHelp2.ResultsOfIndexResults" xml:space="preserve">
    <value>Index results for ${0} - found ${1} ${2}</value>
  </data>
  <data name="AddIns.HtmlHelp2.ResultsOfSearchResults" xml:space="preserve">
    <value>Search results for ${0} - found ${1} ${2}</value>
  </data>
  <data name="AddIns.HtmlHelp2.Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="AddIns.HtmlHelp2.SearchCommand" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="AddIns.HtmlHelp2.SearchInPreviouslyFoundTopics" xml:space="preserve">
    <value>Search in previously found topics only</value>
  </data>
  <data name="AddIns.HtmlHelp2.SearchInTitlesOnly" xml:space="preserve">
    <value>Search in titles only</value>
  </data>
  <data name="AddIns.HtmlHelp2.SearchOnline" xml:space="preserve">
    <value>Search online</value>
  </data>
  <data name="AddIns.HtmlHelp2.SearchResults" xml:space="preserve">
    <value>Search results</value>
  </data>
  <data name="AddIns.HtmlHelp2.SingleTopic" xml:space="preserve">
    <value>topic</value>
  </data>
  <data name="AddIns.HtmlHelp2.Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="AddIns.HtmlHelp2.SyncTOC" xml:space="preserve">
    <value>Synchronize TOC</value>
  </data>
  <data name="AddIns.HtmlHelp2.TextZoom" xml:space="preserve">
    <value>Text zoom</value>
  </data>
  <data name="AddIns.HtmlHelp2.Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="AddIns.HtmlHelp2.UseCurrentProjectLanguageForSearch" xml:space="preserve">
    <value>Use current Project language</value>
  </data>
  <data name="AddIns.Profiler.Commands.FindCallsOfSelected.TabTitle" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="AddIns.Profiler.Commands.SetAsRoot.TabTitle" xml:space="preserve">
    <value>Merged Nodes</value>
  </data>
  <data name="AddIns.Profiler.Commands.ShowFunctions.TabTitle" xml:space="preserve">
    <value>All functions for {0}</value>
  </data>
  <data name="AddIns.Profiler.DatabaseTooNewError" xml:space="preserve">
    <value>The selected SharpDevelop profiling session was created by a newer version of SharpDevelop and thus cannot be opened.</value>
  </data>
  <data name="AddIns.Profiler.FileExtensionDescription" xml:space="preserve">
    <value>SharpDevelop Profiling Session</value>
  </data>
  <data name="AddIns.Profiler.Messages.FileNotFound" xml:space="preserve">
    <value>This project cannot be started because the executable file was not found, please ensure that the project and all its depencies are built correctly!
</value>
  </data>
  <data name="AddIns.Profiler.Messages.NoStartableProjectFound" xml:space="preserve">
    <value>No startable project was found. Aborting ...</value>
  </data>
  <data name="AddIns.Profiler.Messages.NoStartableProjectWantToProfileStartupProject" xml:space="preserve">
    <value>This project cannot be started. Do you want to profile the solution's StartUp project instead?</value>
  </data>
  <data name="AddIns.Profiler.Messages.PreparingForAnalysis" xml:space="preserve">
    <value>Preparing for analysis ...</value>
  </data>
  <data name="AddIns.Profiler.Messages.RegisterFailed" xml:space="preserve">
    <value>Could not register the profiler into COM Registry. Cannot start profiling!</value>
  </data>
  <data name="AddIns.Profiler.Messages.UnregisterFailed" xml:space="preserve">
    <value>Could not unregister the profiler from COM Registry!</value>
  </data>
  <data name="AddIns.Profiler.MessageViewCategory" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.CombineRecursiveCalls" xml:space="preserve">
    <value>Combine recursive calls.</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.DoNotProfileNetInternals" xml:space="preserve">
    <value>Do not profile .NET internal calls.</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.EnableDC" xml:space="preserve">
    <value>Collect data at the end of the session only.</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.EnableDCAtStartup" xml:space="preserve">
    <value>Start to collect data immediately after the session started.</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.Header" xml:space="preserve">
    <value>Data Collection</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.SizeOfStorageDescription" xml:space="preserve">
    <value>Size of temporary storage file:</value>
  </data>
  <data name="AddIns.Profiler.Options.General.DataCollection.TrackEvents" xml:space="preserve">
    <value>Trace events</value>
  </data>
  <data name="AddIns.Profiler.Options.General.Title" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="AddIns.Profiler.Options.Title" xml:space="preserve">
    <value>Profiling</value>
  </data>
  <data name="AddIns.Profiler.ProfileCurrentProject" xml:space="preserve">
    <value>Profile current project</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutable" xml:space="preserve">
    <value>Select executable to profile</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutable.ErrorMessage" xml:space="preserve">
    <value>Invalid data, please try again!</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.CmdLineArgsText" xml:space="preserve">
    <value>Command line arguments:</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.DescriptionText" xml:space="preserve">
    <value>Select the path of the executable you want to profile.
Optionally you can specify a working directory and command line arguments.
</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.ExePathText" xml:space="preserve">
    <value>Executable path:</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.StartText" xml:space="preserve">
    <value>Start profiling</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.Title" xml:space="preserve">
    <value>Profile Executable</value>
  </data>
  <data name="AddIns.Profiler.ProfileExecutableForm.WorkingDirText" xml:space="preserve">
    <value>Working directory:</value>
  </data>
  <data name="AddIns.Profiler.ProfilerControlWindow.CollectData" xml:space="preserve">
    <value>Collect data</value>
  </data>
  <data name="AddIns.Profiler.ProfilerControlWindow.Shutdown" xml:space="preserve">
    <value>Shutdown</value>
  </data>
  <data name="AddIns.Profiler.ProfilerControlWindow.Title" xml:space="preserve">
    <value>Profiler control window</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.CallCountColumnText" xml:space="preserve">
    <value>Call count</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.CallsText" xml:space="preserve">
    <value>Calls:</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ClearQueryHistoryText" xml:space="preserve">
    <value>Clear query history</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.CopySelectedData" xml:space="preserve">
    <value>Copy selected data</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.CopyStacktrace" xml:space="preserve">
    <value>Copy stacktrace</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.FindCallsOfSelected" xml:space="preserve">
    <value>Find calls of selected functions</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.GoToDefinition" xml:space="preserve">
    <value>Go to definition</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.SetAsRoot" xml:space="preserve">
    <value>Set as root/Merge</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ContextMenu.ShowFunctions" xml:space="preserve">
    <value>Show functions</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.CpuCyclesText" xml:space="preserve">
    <value>CPU cycles:</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ExecuteQueryText" xml:space="preserve">
    <value>Execute query</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ExpandHotPathSubtreeText" xml:space="preserve">
    <value>Expand selected hot path</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.NameColumnText" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.OverviewTabText" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.QueryHistoryText" xml:space="preserve">
    <value>Query History</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.SearchLabelText" xml:space="preserve">
    <value>Search:</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.ShowQueryBarText" xml:space="preserve">
    <value>Show query bar</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimePercentageOfParentColumnText" xml:space="preserve">
    <value>% of parent</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeSpentColumnText" xml:space="preserve">
    <value>Time spent</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeSpentPerCallColumnText" xml:space="preserve">
    <value>Time spent/call</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeSpentSelfColumnText" xml:space="preserve">
    <value>Time spent (self)</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeSpentSelfPerCallColumnText" xml:space="preserve">
    <value>Time spent (self)/call</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.TimeText" xml:space="preserve">
    <value>Time:</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.Title" xml:space="preserve">
    <value>Profiling Session Analyzer</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.Top20TabText" xml:space="preserve">
    <value>Top 20</value>
  </data>
  <data name="AddIns.Profiler.ProfilingView.WaitBarText" xml:space="preserve">
    <value>Refreshing view, please wait ...</value>
  </data>
  <data name="AddIns.Profiler.UnitTests.RunWithProfiler" xml:space="preserve">
    <value>Run with profiler</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod" xml:space="preserve">
    <value>Extract method</value>
    <comment>Text of the "Extract Method" refactoring menu command.</comment>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.ContainsBreakError" xml:space="preserve">
    <value>The selected code contains a break statement without the enclosing loop. Please change the selection!</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.ContainsContinueError" xml:space="preserve">
    <value>The selected code contains a continue statement without the enclosing loop. Please change the selection!</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.ContainsGotoError" xml:space="preserve">
    <value>The selected code contains a goto statement without the label. Please change the selection!</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.EnterName" xml:space="preserve">
    <value>Enter a name for the new method</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.InvalidSelection" xml:space="preserve">
    <value>Invalid selection! Please select a valid range.</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethod.ParseErrors" xml:space="preserve">
    <value>Errors occured during parsing! Cannot extract a new method.</value>
  </data>
  <data name="AddIns.SharpRefactoring.ExtractMethodNotSupported" xml:space="preserve">
    <value>Extracting methods in {0} is currently not supported!</value>
    <comment>Used to notify the user that the MethodExtractor can not extract the code in the current programming language.

{0} is the value from ProjectService.CurrentProject.Language</comment>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor" xml:space="preserve">
    <value>Insert constructor</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor.AddCheckForNullLabel" xml:space="preserve">
    <value>Add check for null</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor.AddRangeCheckLabel" xml:space="preserve">
    <value>Add range check</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor.Description" xml:space="preserve">
    <value>Select all fields you want to create a constructor with:</value>
  </data>
  <data name="AddIns.SharpRefactoring.InsertCtor.VariableLabel" xml:space="preserve">
    <value>Variable</value>
  </data>
  <data name="AddIns.SharpRefactoring.IntroduceMethod" xml:space="preserve">
    <value>Introduce method {0} in {1}</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods" xml:space="preserve">
    <value>Override Equals() and GetHashCode()</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods.AddInterface" xml:space="preserve">
    <value>Add interface {0}</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods.AddOperatorOverloads" xml:space="preserve">
    <value>Add operator overloads</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods.AddOtherMethod" xml:space="preserve">
    <value>Add ${otherMethod} override</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideEqualsGetHashCodeMethods.SurroundWithRegion" xml:space="preserve">
    <value>Surround with #region</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideToStringMethod" xml:space="preserve">
    <value>Override ToString()</value>
  </data>
  <data name="AddIns.SharpRefactoring.OverrideToStringMethod.Description" xml:space="preserve">
    <value>Select the fields you want to use in the ToString() implementation:</value>
  </data>
  <data name="AddIns.SharpRefactoring.ResolveAttribute" xml:space="preserve">
    <value>Resolve attribute: {0}</value>
  </data>
  <data name="AddIns.SharpRefactoring.ResolveExtensionMethod" xml:space="preserve">
    <value>Resolve extension method {0}</value>
  </data>
  <data name="AddIns.SourceAnalysis.CheckWithStyleCop" xml:space="preserve">
    <value>Check with StyleCop</value>
  </data>
  <data name="AddIns.SourceAnalysis.Title" xml:space="preserve">
    <value>Source Analysis</value>
  </data>
  <data name="AddIns.Subversion.AddToIgnoreList" xml:space="preserve">
    <value>Add to ignore list</value>
  </data>
  <data name="AddIns.Subversion.Blame" xml:space="preserve">
    <value>Blame</value>
    <comment>blame/praise/annotate- show author for each line of code in the file</comment>
  </data>
  <data name="AddIns.Subversion.BranchOrTag" xml:space="preserve">
    <value>Branch/tag</value>
    <comment>Shows the dialog for branching/tagging</comment>
  </data>
  <data name="AddIns.Subversion.CannotCopyError" xml:space="preserve">
    <value>The file/directory cannot be copied because it is in subversion status '{0}'.</value>
  </data>
  <data name="AddIns.Subversion.CannotMoveError" xml:space="preserve">
    <value>The file/directory cannot be moved because it is in subversion status '{0}'.</value>
  </data>
  <data name="AddIns.Subversion.CannotRemoveError" xml:space="preserve">
    <value>The file/directory cannot be removed because it is in subversion status '{0}'.</value>
  </data>
  <data name="AddIns.Subversion.CheckForModifications" xml:space="preserve">
    <value>Check for modifications</value>
    <comment>Command to check a directory for modifications (both local and remote)</comment>
  </data>
  <data name="AddIns.Subversion.Checkout" xml:space="preserve">
    <value>Checkout</value>
    <comment>Download source code from the version control server</comment>
  </data>
  <data name="AddIns.Subversion.CleanUp" xml:space="preserve">
    <value>Clean up</value>
    <comment>Runs svn cleanup, fixing problems in the working copy</comment>
  </data>
  <data name="AddIns.Subversion.Commit" xml:space="preserve">
    <value>Commit</value>
    <comment>Command to upload local changes to version control system</comment>
  </data>
  <data name="AddIns.Subversion.CreatePatch" xml:space="preserve">
    <value>Create patch</value>
    <comment>Create a patch file containing the local modifications</comment>
  </data>
  <data name="AddIns.Subversion.DeleteDirectory" xml:space="preserve">
    <value>Delete directory</value>
  </data>
  <data name="AddIns.Subversion.Diff" xml:space="preserve">
    <value>Diff</value>
    <comment>Command to show local modifications done to a file</comment>
  </data>
  <data name="AddIns.Subversion.EditConflicts" xml:space="preserve">
    <value>Edit conflicts</value>
    <comment>Command to edit version-control conflicts in a file</comment>
  </data>
  <data name="AddIns.Subversion.ErrorDelete" xml:space="preserve">
    <value>Error deleting ${File}</value>
    <comment>Message shown when a file or directory cannot be deleted</comment>
  </data>
  <data name="AddIns.Subversion.Export" xml:space="preserve">
    <value>Export</value>
    <comment>Export files from the local working copy</comment>
  </data>
  <data name="AddIns.Subversion.ForceDelete" xml:space="preserve">
    <value>Force delete</value>
  </data>
  <data name="AddIns.Subversion.History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="AddIns.Subversion.ItemRemovedFromIgnoreList" xml:space="preserve">
    <value>'{0}' was removed from the ignore list.</value>
  </data>
  <data name="AddIns.Subversion.KeepOldSolution" xml:space="preserve">
    <value>Keep old solution open</value>
    <comment>Button text to keep old solution open</comment>
  </data>
  <data name="AddIns.Subversion.Lock" xml:space="preserve">
    <value>Get lock</value>
  </data>
  <data name="AddIns.Subversion.MarkConflictsAsResolved" xml:space="preserve">
    <value>Mark conflicts as resolved</value>
    <comment>Command to tell version-control system that conflicts were resolved</comment>
  </data>
  <data name="AddIns.Subversion.Merge" xml:space="preserve">
    <value>Merge</value>
    <comment>Merge changes from another branch to this directory</comment>
  </data>
  <data name="AddIns.Subversion.Options.AutoAdd" xml:space="preserve">
    <value>Automatically &amp;add new files</value>
  </data>
  <data name="AddIns.Subversion.Options.AutoDelete" xml:space="preserve">
    <value>Automatically &amp;delete removed files</value>
  </data>
  <data name="AddIns.Subversion.Options.ReloadProjectAfterChanges" xml:space="preserve">
    <value>&amp;Re-load project after changes to project file(s)</value>
  </data>
  <data name="AddIns.Subversion.Options.RenameInsideSubversion" xml:space="preserve">
    <value>&amp;Rename files inside Subversion (keeps history)</value>
  </data>
  <data name="AddIns.Subversion.Options.Title" xml:space="preserve">
    <value>Subversion Options</value>
    <comment>Title of the subversion options panel</comment>
  </data>
  <data name="AddIns.Subversion.Options.UseHistoryDisplayBinding" xml:space="preserve">
    <value>Show &amp;history tab for version-controlled files</value>
    <comment>Show tab page History for each version-controlled file</comment>
  </data>
  <data name="AddIns.Subversion.ReloadSolution" xml:space="preserve">
    <value>Reload solution</value>
    <comment>Button to confirm reloading the solution after project files were changes</comment>
  </data>
  <data name="AddIns.Subversion.ReloadSolutionAfterProjectChanges" xml:space="preserve">
    <value>SharpDevelop detected that the version control operation changed project files.
You should reload the solution.</value>
  </data>
  <data name="AddIns.Subversion.Relocate" xml:space="preserve">
    <value>Relocate</value>
    <comment>Change the URL of the version control server</comment>
  </data>
  <data name="AddIns.Subversion.RemoveFromIgnoreList" xml:space="preserve">
    <value>Remove from ignore list</value>
  </data>
  <data name="AddIns.Subversion.RemoveMovedFile" xml:space="preserve">
    <value>The file has just been moved to this location, do you really want to remove it?</value>
  </data>
  <data name="AddIns.Subversion.RepositoryBrowser" xml:space="preserve">
    <value>Repository browser</value>
    <comment>Launch a tool to view the repository of the version control system</comment>
  </data>
  <data name="AddIns.Subversion.Revert" xml:space="preserve">
    <value>Revert</value>
    <comment>Command to revert local modifications done to a version-controlled file</comment>
  </data>
  <data name="AddIns.Subversion.RevertLocalModifications" xml:space="preserve">
    <value>The file has local modifications. Do you really want to remove it?</value>
  </data>
  <data name="AddIns.Subversion.RevisionGraph" xml:space="preserve">
    <value>Revision graph</value>
    <comment>Show the revision graph for a directory</comment>
  </data>
  <data name="AddIns.Subversion.SaveFiles" xml:space="preserve">
    <value>Save files</value>
    <comment>Button text to confirm saving all open files</comment>
  </data>
  <data name="AddIns.Subversion.ShowLog" xml:space="preserve">
    <value>Show Log</value>
    <comment>Shows the history for the file</comment>
  </data>
  <data name="AddIns.Subversion.SVNRequiresSavingFiles" xml:space="preserve">
    <value>The version control operation would affect files with unsaved modifications.
You have to save those files before running the operation.</value>
  </data>
  <data name="AddIns.Subversion.Switch" xml:space="preserve">
    <value>Switch</value>
    <comment>Switch the working copy to a different branch</comment>
  </data>
  <data name="AddIns.Subversion.TortoiseSVNRequired" xml:space="preserve">
    <value>TortoiseSVN needs to be installed to execute this action.</value>
  </data>
  <data name="AddIns.Subversion.Update" xml:space="preserve">
    <value>Update</value>
    <comment>Command to download changes done by other developers to the working copy</comment>
  </data>
  <data name="AddIns.Subversion.UpdateToRevision" xml:space="preserve">
    <value>Update to revision</value>
    <comment>Command to update a file to a specific version</comment>
  </data>
  <data name="AddIns.UsageDataCollector.AcceptConfirmation" xml:space="preserve">
    <value>Thank you for participating! You can still opt-out later using the SharpDevelop options.</value>
    <comment>text that confirms the user accepted UDC</comment>
  </data>
  <data name="AddIns.UsageDataCollector.AcceptRadioButton" xml:space="preserve">
    <value>I would like to participate - collect and upload usage data</value>
    <comment>Option to start participating in usage data collection</comment>
  </data>
  <data name="AddIns.UsageDataCollector.DeclineConfirmation" xml:space="preserve">
    <value>You can still opt-in later using the SharpDevelop options.</value>
    <comment>Text that confirms the user declined UDC</comment>
  </data>
  <data name="AddIns.UsageDataCollector.DeclineRadioButton" xml:space="preserve">
    <value>I do not want to participate</value>
    <comment>Option for declining to participate in usage data collection</comment>
  </data>
  <data name="AddIns.UsageDataCollector.Introduction" xml:space="preserve">
    <value>We need your help! To improve SharpDevelop in the future, we would like to know which features are used most.
SharpDevelop can collect this information and upload it automatically.</value>
    <comment>introduction to UsageDataCollector, appears on first start of SharpDevelop 4.0</comment>
  </data>
  <data name="AddIns.UsageDataCollector.PrivacyStatement" xml:space="preserve">
    <value>Privacy Statement</value>
    <comment>text for link to privacy statement</comment>
  </data>
  <data name="AddIns.UsageDataCollector.ShowCollectedData" xml:space="preserve">
    <value>Show collected data</value>
    <comment>button for showing the data collected so far</comment>
  </data>
  <data name="AddIns.UsageDataCollector.Title" xml:space="preserve">
    <value>Usage Data Collector</value>
    <comment>title of the usage data collector start page message (only visible on first start of SharpDevelop 4) and name of the corresponding page in the options dialog</comment>
  </data>
  <data name="AddIns.VBNetBinding.CodeCompletion.QuestionmarkEqualsItem.Description" xml:space="preserve">
    <value>Let SharpDevelop figure out the type based on the initializer.</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.EditGridColumnsAndRows" xml:space="preserve">
    <value>Edit grid columns and rows</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle" xml:space="preserve">
    <value>Extract properties as style</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.ErrorNoSelection" xml:space="preserve">
    <value>No valid element selected!</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.PropertyColumn" xml:space="preserve">
    <value>Property/Event Name</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.ReplaceQuestion" xml:space="preserve">
    <value>The selected control has already a style assigned. Do you want to replace the style with the newly created style?</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.StyleName" xml:space="preserve">
    <value>Style name:</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.ExtractPropertiesAsStyle.ValueColumn" xml:space="preserve">
    <value>Property Value</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.GroupInto" xml:space="preserve">
    <value>Group into</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.RemoveMargin" xml:space="preserve">
    <value>Remove margin</value>
  </data>
  <data name="AddIns.XamlBinding.Menu.RemoveUnnecessaryAttributes" xml:space="preserve">
    <value>Remove unnecessary attributes</value>
  </data>
  <data name="AddIns.XamlBinding.NewEventHandlerItem" xml:space="preserve">
    <value>&lt;new event handler&gt;</value>
  </data>
  <data name="AddIns.XamlBinding.Options.CodeCompletionGroupLabel" xml:space="preserve">
    <value>Code completion</value>
  </data>
  <data name="AddIns.XamlBinding.Options.EventColor" xml:space="preserve">
    <value>Event color:</value>
  </data>
  <data name="AddIns.XamlBinding.Options.EventHandlerNamePattern" xml:space="preserve">
    <value>Event handler name pattern:</value>
  </data>
  <data name="AddIns.XamlBinding.Options.HighlightingDescription" xml:space="preserve">
    <value>Select the colors that should be used by the XAML highlighter:</value>
  </data>
  <data name="AddIns.XamlBinding.Options.HighlightingGroupLabel" xml:space="preserve">
    <value>Highlighting</value>
  </data>
  <data name="AddIns.XamlBinding.Options.IgnoredElementColor" xml:space="preserve">
    <value>Ignored element color:</value>
  </data>
  <data name="AddIns.XamlBinding.Options.NamespaceDeclarationColor" xml:space="preserve">
    <value>XML namespace declaration color:</value>
  </data>
  <data name="AddIns.XamlBinding.Options.PropertyColor" xml:space="preserve">
    <value>Property color:</value>
  </data>
  <data name="AddIns.XamlBinding.Options.SwitchToCodeViewAfterInsertion" xml:space="preserve">
    <value>Switch to code after insertion of new event handler</value>
  </data>
  <data name="AddIns.XamlBinding.Options.Title" xml:space="preserve">
    <value>XAML</value>
  </data>
  <data name="AddIns.XamlBinding.Options.UseExtensionCompletion" xml:space="preserve">
    <value>Use markup extension completion</value>
  </data>
  <data name="AddIns.XamlBinding.Options.UseHighlighting" xml:space="preserve">
    <value>Use advanced highlighting</value>
  </data>
  <data name="AvalonEdit.FileEncoding.EncodingCausesDataLoss" xml:space="preserve">
    <value>The file cannot be saved with the current encoding ${encoding} without losing data.</value>
  </data>
  <data name="AvalonEdit.FileEncoding.EncodingCausesDataLoss.Continue" xml:space="preserve">
    <value>Continue</value>
    <comment>continue using the current encoding (may cause data loss)</comment>
  </data>
  <data name="AvalonEdit.FileEncoding.EncodingCausesDataLoss.UseUTF8" xml:space="preserve">
    <value>Save as UTF-8</value>
  </data>
  <data name="BackendBindings.ExecutionManager.CantExecuteDLLError" xml:space="preserve">
    <value>Project is configured as dll and no execution command is specified.
You can specifiy an execution command in the project options.</value>
  </data>
  <data name="BackendBindings.ExecutionManager.NoSingleFileCompilation" xml:space="preserve">
    <value>Compiling single files is not supported, please create a project!</value>
  </data>
  <data name="CompilerResultView.DescriptionText" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="CompilerResultView.FileText" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="CompilerResultView.LineText" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="ComponentInspector.AboutDialog.Title" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ComponentInspector.AboutDialog.VersionLabel" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CastMenuItem" xml:space="preserve">
    <value>Cast</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CopyObjectMenuItem" xml:space="preserve">
    <value>&amp;Copy Object</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CopyTextMenuItem" xml:space="preserve">
    <value>Copy T&amp;ext</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CopyValueTextMenuItem" xml:space="preserve">
    <value>Copy &amp;Value Text</value>
  </data>
  <data name="ComponentInspector.ActionMenu.CutObjectMenuItem" xml:space="preserve">
    <value>Cu&amp;t Object</value>
  </data>
  <data name="ComponentInspector.ActionMenu.EventLoggingMenuItem" xml:space="preserve">
    <value>&amp;Event Logging</value>
  </data>
  <data name="ComponentInspector.ActionMenu.OnDesignSurfaceMenuItem" xml:space="preserve">
    <value>On Design Surface</value>
  </data>
  <data name="ComponentInspector.ActionMenu.PasteObjectMenuItem" xml:space="preserve">
    <value>&amp;Paste Object</value>
  </data>
  <data name="ComponentInspector.ActionMenu.RefreshRunningComObjectsMenuItem" xml:space="preserve">
    <value>Refresh COM Running Objects</value>
  </data>
  <data name="ComponentInspector.ActionMenu.RegisterTypeLibMenuItem" xml:space="preserve">
    <value>Register TypeLib</value>
  </data>
  <data name="ComponentInspector.ActionMenu.RemoveFromFavouritesMenuItem" xml:space="preserve">
    <value>Remove from Favorites</value>
  </data>
  <data name="ComponentInspector.ActionMenu.UnregisterTypeLibMenuItem" xml:space="preserve">
    <value>Unregister TypeLib</value>
  </data>
  <data name="ComponentInspector.AssemblyTreeNode.Text" xml:space="preserve">
    <value>Opened Assemblies</value>
  </data>
  <data name="ComponentInspector.AttachDialog.AttachFailedMessage" xml:space="preserve">
    <value>Error attaching to process {0}.</value>
  </data>
  <data name="ComponentInspector.AttachDialog.ProcessLabel" xml:space="preserve">
    <value>Process</value>
    <comment>Labels a running process</comment>
  </data>
  <data name="ComponentInspector.AttachDialog.Title" xml:space="preserve">
    <value>Attach</value>
  </data>
  <data name="ComponentInspector.CastDialog.CannotFindType" xml:space="preserve">
    <value>Cannot find type</value>
  </data>
  <data name="ComponentInspector.CastDialog.CannotFindTypeInAssembliesMessage" xml:space="preserve">
    <value>Cannot find type {0} in any of the assemblies currently open.</value>
  </data>
  <data name="ComponentInspector.CastDialog.CastForTitle" xml:space="preserve">
    <value>Cast for</value>
  </data>
  <data name="ComponentInspector.CastDialog.CastTitle" xml:space="preserve">
    <value>Cast</value>
  </data>
  <data name="ComponentInspector.CastDialog.CastToLabel" xml:space="preserve">
    <value>Cast to</value>
  </data>
  <data name="ComponentInspector.CastDialog.DetermineTypeOfCastFailedMessage" xml:space="preserve">
    <value>Error determining type of cast.</value>
  </data>
  <data name="ComponentInspector.CastDialog.RememberCastCheckBox" xml:space="preserve">
    <value>Remember cast across sessions?</value>
  </data>
  <data name="ComponentInspector.CastDialog.TypeIncompatibleMessage" xml:space="preserve">
    <value>Cast type incompatible with object's type.</value>
  </data>
  <data name="ComponentInspector.ComCategoryRootTreeNode.Text" xml:space="preserve">
    <value>Component Categories</value>
  </data>
  <data name="ComponentInspector.ComClassRootTreeNode.Text" xml:space="preserve">
    <value>Classes</value>
  </data>
  <data name="ComponentInspector.ComInterfaceRootTreeNode.Text" xml:space="preserve">
    <value>Interfaces</value>
  </data>
  <data name="ComponentInspector.ComRunningObjectsTreeNode.Text" xml:space="preserve">
    <value>COM Running Objects</value>
  </data>
  <data name="ComponentInspector.ComTreeNode.Text" xml:space="preserve">
    <value>Favorite/Recently Accessed Type Libraries</value>
  </data>
  <data name="ComponentInspector.ComTypeLibraryRootTreeNode.Text" xml:space="preserve">
    <value>Type Libraries</value>
  </data>
  <data name="ComponentInspector.ConstructorDialog.Information" xml:space="preserve">
    <value>If you select a constructor with parameters, after you hit OK, please fill in the parameters and then drag the selected constructor to where you want this object to be created.</value>
  </data>
  <data name="ComponentInspector.ConstructorDialog.Title" xml:space="preserve">
    <value>Select a Constructor</value>
  </data>
  <data name="ComponentInspector.ControlsTab" xml:space="preserve">
    <value>Controls</value>
  </data>
  <data name="ComponentInspector.CreateObjectMenuItem" xml:space="preserve">
    <value>Create O&amp;bject</value>
  </data>
  <data name="ComponentInspector.CustDirectoriesPanel.ApplicationWorkingFolder" xml:space="preserve">
    <value>Application Working Directory</value>
  </data>
  <data name="ComponentInspector.CustDirectoriesPanel.ConvertedAssembliesFolder" xml:space="preserve">
    <value>ActiveX Converted Assemblies</value>
  </data>
  <data name="ComponentInspector.CustDirectoriesPanel.Title" xml:space="preserve">
    <value>Directories</value>
  </data>
  <data name="ComponentInspector.CustomActiveXPanel.AutomaticallyGetPropertiesCheckBox" xml:space="preserve">
    <value>Automatically Get COM Properties</value>
  </data>
  <data name="ComponentInspector.CustomActiveXPanel.GetRunningComObjectsCheckBox" xml:space="preserve">
    <value>Get COM Running Objects at Startup</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.OtherLabel" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.ShowBaseClassNamesCheckBox" xml:space="preserve">
    <value>Show base class names</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.ShowLabel" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.ShowObjectAsBaseCheckBox" xml:space="preserve">
    <value>Show Object members in base class category</value>
  </data>
  <data name="ComponentInspector.CustomObjectPanel.ShowPublicMembersCheckBox" xml:space="preserve">
    <value>Public members only</value>
  </data>
  <data name="ComponentInspector.ErrorDialog.LessInformationButton" xml:space="preserve">
    <value>Less Information</value>
  </data>
  <data name="ComponentInspector.ErrorDialog.MoreInformationButton" xml:space="preserve">
    <value>More Information</value>
  </data>
  <data name="ComponentInspector.ErrorDialog.ReportAsBugButton" xml:space="preserve">
    <value>Report as Bug</value>
  </data>
  <data name="ComponentInspector.EventLogList.ClearAllMenuItem" xml:space="preserve">
    <value>Clear &amp;All</value>
  </data>
  <data name="ComponentInspector.EventLogList.ClearMenuItem" xml:space="preserve">
    <value>&amp;Clear</value>
  </data>
  <data name="ComponentInspector.EventLogList.EventColumnHeader" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="ComponentInspector.EventLogList.EventsBeingLoggedTab" xml:space="preserve">
    <value>Events Being Logged</value>
  </data>
  <data name="ComponentInspector.EventLogList.EventsTab" xml:space="preserve">
    <value>Event Log</value>
  </data>
  <data name="ComponentInspector.EventLogList.IncrementColumnHeader" xml:space="preserve">
    <value>Inc</value>
  </data>
  <data name="ComponentInspector.EventLogList.NoEventsBeingLoggedMessage" xml:space="preserve">
    <value>You are not logging any events.

To begin logging events, select an object or an event in the Objects panel, and either right-click or use the Action menu to enable event logging.</value>
  </data>
  <data name="ComponentInspector.EventLogList.ParametersColumnHeader" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="ComponentInspector.EventLogList.StopAllLoggingMenuItem" xml:space="preserve">
    <value>Stop &amp;All Logging</value>
  </data>
  <data name="ComponentInspector.EventLogList.StopLoggingMenuItem" xml:space="preserve">
    <value>&amp;Stop Logging</value>
  </data>
  <data name="ComponentInspector.EventLogList.TimeColumnHeader" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="ComponentInspector.FindDialog.AllLevelsLabel" xml:space="preserve">
    <value>All levels</value>
  </data>
  <data name="ComponentInspector.FindDialog.AssembliesRadioButton" xml:space="preserve">
    <value>Assemblies/Types</value>
  </data>
  <data name="ComponentInspector.FindDialog.ContainsRadioButton" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="ComponentInspector.FindDialog.FindButton" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="ComponentInspector.FindDialog.FindIn" xml:space="preserve">
    <value>Find In</value>
  </data>
  <data name="ComponentInspector.FindDialog.FindWhatLabel" xml:space="preserve">
    <value>Find what:</value>
  </data>
  <data name="ComponentInspector.FindDialog.FoundListColumnHeader" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="ComponentInspector.FindDialog.FullNameLabel" xml:space="preserve">
    <value>Full Name</value>
  </data>
  <data name="ComponentInspector.FindDialog.LevelSelectOnlyDownLabel" xml:space="preserve">
    <value>Only down</value>
  </data>
  <data name="ComponentInspector.FindDialog.LevelsLabel" xml:space="preserve">
    <value>Levels</value>
  </data>
  <data name="ComponentInspector.FindDialog.LookingAtLabel" xml:space="preserve">
    <value>Looking at:</value>
  </data>
  <data name="ComponentInspector.FindDialog.MatchLabel" xml:space="preserve">
    <value>Match</value>
  </data>
  <data name="ComponentInspector.FindDialog.NoItemsFoundMessage" xml:space="preserve">
    <value>No items found</value>
  </data>
  <data name="ComponentInspector.FindDialog.NoTreeNodeSelectedDialogTitle" xml:space="preserve">
    <value>Please Select Tree Node</value>
  </data>
  <data name="ComponentInspector.FindDialog.NoTreeNodeSelectedMessage" xml:space="preserve">
    <value>You must select a node in some tree; the find will begin with that node.</value>
  </data>
  <data name="ComponentInspector.FindDialog.ObjectTreeNameCheckBox" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ComponentInspector.FindDialog.ObjectTreeRadioButtonText" xml:space="preserve">
    <value>Object Tree</value>
  </data>
  <data name="ComponentInspector.FindDialog.ObjectTreeValueCheckBox" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ComponentInspector.FindDialog.SelectNameOrValueDialogTitle" xml:space="preserve">
    <value>Please Select Name/Value</value>
  </data>
  <data name="ComponentInspector.FindDialog.SelectNameOrValueMessage" xml:space="preserve">
    <value>Please select one or both of Name or Value when searching the Object tree.</value>
  </data>
  <data name="ComponentInspector.FindDialog.SelectNodeInTreeNameMessage" xml:space="preserve">
    <value>You must select a node in the {0} tree; the find will begin with that node.</value>
  </data>
  <data name="ComponentInspector.FindDialog.ShowItemMenuItem" xml:space="preserve">
    <value>Show Item</value>
  </data>
  <data name="ComponentInspector.FindDialog.StartingWithLabel" xml:space="preserve">
    <value>Starting with:</value>
  </data>
  <data name="ComponentInspector.FindDialog.StartsWithRadioButton" xml:space="preserve">
    <value>Starts With</value>
  </data>
  <data name="ComponentInspector.FindDialog.Title" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="ComponentInspector.GacList.CultureColumn" xml:space="preserve">
    <value>Culture</value>
  </data>
  <data name="ComponentInspector.GacList.GlobalAssemblyNameColumn" xml:space="preserve">
    <value>Global Assembly Name</value>
  </data>
  <data name="ComponentInspector.GacList.OpenMenuItem" xml:space="preserve">
    <value>&amp;Open</value>
  </data>
  <data name="ComponentInspector.GacList.PublicKeyTokenColumn" xml:space="preserve">
    <value>Public Key Token</value>
  </data>
  <data name="ComponentInspector.GacList.VersionColumn" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.AutomaticallyGetComPropertiesCheckBox" xml:space="preserve">
    <value>Automatically get COM properties</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.GetRunningComObjectsAtStartupCheckBox" xml:space="preserve">
    <value>Get COM running objects at startup</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.PanelsGroupBox" xml:space="preserve">
    <value>Panels</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.ShowAssemblyPanelCheckBox" xml:space="preserve">
    <value>Show Assembly Panel</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.ShowControlsPanelCheckBox" xml:space="preserve">
    <value>Show Controls Panel</value>
  </data>
  <data name="ComponentInspector.GeneralOptionsPanel.ShowGacPanelCheckBox" xml:space="preserve">
    <value>Show GAC Panel</value>
  </data>
  <data name="ComponentInspector.GetPropertyMenuItem" xml:space="preserve">
    <value>&amp;Get Property</value>
  </data>
  <data name="ComponentInspector.GettingStartedDialog.Information" xml:space="preserve">
    <value>The Inspector can view or manipulate any ActiveX/COM object.

Browse the COM running objects using the object tree at the left.  Right click a member of the object tree to invoke a method.

Browse through the installed COM components in the ActiveX/COM tab.

Open a type library or control file using the Open menu.

To create/manipulate a ActiveX/COM object, drag a class within a TypeLib/Control to the object tree or design surface.</value>
  </data>
  <data name="ComponentInspector.GettingStartedDialog.ShowThisDialogCheckBox" xml:space="preserve">
    <value>Show this Dialog</value>
  </data>
  <data name="ComponentInspector.GettingStartedDialog.Title" xml:space="preserve">
    <value>Getting Started</value>
  </data>
  <data name="ComponentInspector.ImagePanel.ControlDesignSurfaceLabel" xml:space="preserve">
    <value>Control Design Surface</value>
  </data>
  <data name="ComponentInspector.ImagePanel.DesignModeLabel" xml:space="preserve">
    <value>Design Mode</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.CloseAssembly" xml:space="preserve">
    <value>Close &amp;Assembly...</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.Find" xml:space="preserve">
    <value>&amp;Find...</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.ObjectTreeOptionsPanel.Title" xml:space="preserve">
    <value>Object Tree</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.OpenAssembly" xml:space="preserve">
    <value>&amp;Open Assembly...</value>
  </data>
  <data name="ComponentInspector.InspectorMenu.TypeHandlerOptionsPanel.Title" xml:space="preserve">
    <value>Type Handlers</value>
  </data>
  <data name="ComponentInspector.InvokeMethodMenuItem" xml:space="preserve">
    <value>Invoke &amp;Method</value>
  </data>
  <data name="ComponentInspector.MainMenu.InspectorMenu" xml:space="preserve">
    <value>&amp;Inspector</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.ObjectsTreePanel" xml:space="preserve">
    <value>Objects</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.OutputTab" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.ParametersPanel" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.TopLevelObjects" xml:space="preserve">
    <value>Top Level Objects</value>
  </data>
  <data name="ComponentInspector.ObjectBrowser.ValueColumnHeader" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.ActionMenuItem" xml:space="preserve">
    <value>&amp;Action</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.ActiveXFilesFilterName" xml:space="preserve">
    <value>ActiveX Files</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.AssemblyFilesFilterName" xml:space="preserve">
    <value>Assembly Files</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.AttachMenuItem" xml:space="preserve">
    <value>&amp;Tracing...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.DirectoriesMenuItem" xml:space="preserve">
    <value>&amp;Directories...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.ObjectTreeMenuItem" xml:space="preserve">
    <value>&amp;Object Tree...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.OpenFileDialogTitle" xml:space="preserve">
    <value>Select a File to Open</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.OptionsMenuItem" xml:space="preserve">
    <value>&amp;Options</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.PanelsMenuItem" xml:space="preserve">
    <value>&amp;Panels...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.ShowHelpMenuItem" xml:space="preserve">
    <value>&amp;Help...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.TracingMenuItem" xml:space="preserve">
    <value>&amp;Tracing...</value>
  </data>
  <data name="ComponentInspector.ObjectBrowserForm.TypeHandlersMenuItem" xml:space="preserve">
    <value>&amp;Type Handlers...</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.CategoriesGroupBox" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.CategoryCountLabel" xml:space="preserve">
    <value>When number of members exceeds</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.DisplayIntegersInHexCheckBox" xml:space="preserve">
    <value>Integers in hex</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowBaseClassCategoryCheckBox" xml:space="preserve">
    <value>Show base class categories</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowBaseClassMembersCheckBox" xml:space="preserve">
    <value>Base class members</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowBaseClassNamesCheckBox" xml:space="preserve">
    <value>Base class names</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowEventsCheckBox" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowFieldsCheckBox" xml:space="preserve">
    <value>Fields</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowGroupBox" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowMemberCategoriesCheckBox" xml:space="preserve">
    <value>Show member categories</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowMembersGroupBox" xml:space="preserve">
    <value>Show Members</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowMethodsCheckBox" xml:space="preserve">
    <value>Methods</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowObjectAsBaseClassCheckBox" xml:space="preserve">
    <value>Show Object members in base class category</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowPropertiesCheckBox" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowPropertyAccessorsMethodsCheckBox" xml:space="preserve">
    <value>Property/Event accessor methods</value>
  </data>
  <data name="ComponentInspector.ObjectTreeOptionsPanel.ShowPublicMembersOnlyCheckBox" xml:space="preserve">
    <value>Public members only</value>
  </data>
  <data name="ComponentInspector.OutputList.OutputColumnHeader" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="ComponentInspector.ParamControlInfo.SelectObjectLabel" xml:space="preserve">
    <value>select object</value>
  </data>
  <data name="ComponentInspector.ParamControlInfo.SeparateStringsWithSpaces" xml:space="preserve">
    <value>(separate strings with spaces)</value>
  </data>
  <data name="ComponentInspector.ParamControlInfo.ValueLabel" xml:space="preserve">
    <value>value</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.AddingRunningComObjectsDialogTitle" xml:space="preserve">
    <value>Adding COM Running Objects</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.AddingRunningComObjectsMessage" xml:space="preserve">
    <value>Please wait while I add COM running objects</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.GettingInformationDialogTitle" xml:space="preserve">
    <value>Getting {0} Information</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.GettingInformationMessage" xml:space="preserve">
    <value>Please wait while I get the {0} information</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.LoadingPreviouslyOpenedAssembliesDialogTitle" xml:space="preserve">
    <value>Loading Remembered Assemblies</value>
  </data>
  <data name="ComponentInspector.ProgressDialog.LoadingPreviouslyOpenedAssembliesMessage" xml:space="preserve">
    <value>Please wait while I load the previously opened assemblies.</value>
  </data>
  <data name="ComponentInspector.Registry.Text" xml:space="preserve">
    <value>Registry</value>
  </data>
  <data name="ComponentInspector.SetFieldMenuItem" xml:space="preserve">
    <value>Set &amp;Field</value>
  </data>
  <data name="ComponentInspector.SetPropertyMenuItem" xml:space="preserve">
    <value>&amp;Set Property</value>
  </data>
  <data name="ComponentInspector.ToolsMenu.ShowComponentInspectorMenuItem" xml:space="preserve">
    <value>Component Inspector</value>
  </data>
  <data name="ComponentInspector.TracingDialog.Title" xml:space="preserve">
    <value>Set Trace Level</value>
  </data>
  <data name="ComponentInspector.TracingDialog.TraceLevelLabel" xml:space="preserve">
    <value>Trace Level</value>
  </data>
  <data name="ComponentInspector.TreeListPanel.HeaderPanel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ComponentInspector.TypeHandlerOptionsPanel.InformationLabel" xml:space="preserve">
    <value>Type handlers present the classes marked below in a more convenient manner, suppressing unnecessary details.</value>
  </data>
  <data name="ComponentInspector.WaitingForAppDialog.Information" xml:space="preserve">
    <value>Waiting for application to start. If the application fails to start (or you become tired of waiting), you may cancel by pressing Cancel.</value>
  </data>
  <data name="ComponentInspector.WaitingForAppDialog.Title" xml:space="preserve">
    <value>Waiting for Application to Start</value>
  </data>
  <data name="CSharpBinding.GenerateNewHandlerInstructions" xml:space="preserve">
    <value>Insert reference to explicit method; press tab or enter again to insert a new method stub.</value>
  </data>
  <data name="CSharpBinding.InsertAnonymousMethod" xml:space="preserve">
    <value>Insert anonymous method without parameters.</value>
  </data>
  <data name="CSharpBinding.InsertAnonymousMethodWithParameters" xml:space="preserve">
    <value>Insert anonymous method with parameters.</value>
  </data>
  <data name="Dialog.About.ChangeLogTabName" xml:space="preserve">
    <value>ChangeLog</value>
  </data>
  <data name="Dialog.About.DialogName" xml:space="preserve">
    <value>About SharpDevelop</value>
  </data>
  <data name="Dialog.About.label1Text" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Dialog.About.label2Text" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="Dialog.About.License" xml:space="preserve">
    <value>Released under the terms of the ${License}.</value>
  </data>
  <data name="Dialog.About.ThrowExceptionButton" xml:space="preserve">
    <value>&amp;Throw Exception</value>
  </data>
  <data name="Dialog.About.VersionInfoTabName" xml:space="preserve">
    <value>Version Info</value>
  </data>
  <data name="Dialog.About.VersionInfoTabName.CopyButton" xml:space="preserve">
    <value>&amp;Copy</value>
  </data>
  <data name="Dialog.About.VersionInfoTabName.VersionColumn" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Dialog.Componnents.RichMenuItem.LoadFileDescription" xml:space="preserve">
    <value>load file ${File}</value>
  </data>
  <data name="Dialog.Componnents.RichMenuItem.LoadProjectDescription" xml:space="preserve">
    <value>load project ${Project}</value>
  </data>
  <data name="Dialog.Componnents.RichMenuItem.NoRecentFilesString" xml:space="preserve">
    <value>recent files</value>
  </data>
  <data name="Dialog.Componnents.RichMenuItem.NoRecentProjectsString" xml:space="preserve">
    <value>recent projects</value>
  </data>
  <data name="Dialog.DirtyFiles.DialogName" xml:space="preserve">
    <value>Save dirty files?</value>
  </data>
  <data name="Dialog.DirtyFiles.DirtyFiles" xml:space="preserve">
    <value>Dirty Files</value>
  </data>
  <data name="Dialog.DirtyFiles.DiscardAllButton" xml:space="preserve">
    <value>&amp;Discard all</value>
  </data>
  <data name="Dialog.DirtyFiles.Files" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="Dialog.DirtyFiles.SaveAllButton" xml:space="preserve">
    <value>Save &amp;all</value>
  </data>
  <data name="Dialog.DirtyFiles.SaveButton" xml:space="preserve">
    <value>&amp;Save</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.AddProjectConfiguration" xml:space="preserve">
    <value>Add Project Configuration</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.AddProjectPlatform" xml:space="preserve">
    <value>Add Project Platform</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.AddSolutionConfiguration" xml:space="preserve">
    <value>Add Solution Configuration</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.AddSolutionPlatform" xml:space="preserve">
    <value>Add Solution Platform</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.CannotDeleteAllConfigurationsOrPlatforms" xml:space="preserve">
    <value>You cannot delete all configurations/platforms.</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.ConfirmRemoveConfigurationOrPlatform" xml:space="preserve">
    <value>Do you really want to remove '{0}'?</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.CopySettingsFrom" xml:space="preserve">
    <value>Copy &amp;settings from:</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.CreateConfigurationInAllProjects" xml:space="preserve">
    <value>&amp;Create this configuration in all projects</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.DuplicateName" xml:space="preserve">
    <value>Duplicate name.</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EditProjectConfigurations" xml:space="preserve">
    <value>Edit Project Configurations</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EditProjectPlatforms" xml:space="preserve">
    <value>Edit Project Platforms</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EditSolutionConfigurations" xml:space="preserve">
    <value>Edit Solution Configurations</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EditSolutionPlatforms" xml:space="preserve">
    <value>Edit Solution Platforms</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EmptyItem" xml:space="preserve">
    <value>&lt;Empty&gt;</value>
    <comment>Copy from empty item</comment>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.EnterNewName" xml:space="preserve">
    <value>Enter the new name:</value>
  </data>
  <data name="Dialog.EditAvailableConfigurationsDialog.InvalidName" xml:space="preserve">
    <value>The name was invalid.</value>
  </data>
  <data name="Dialog.ExportProjectToHtml.DialogName" xml:space="preserve">
    <value>Export to Html</value>
  </data>
  <data name="Dialog.ExportProjectToHtml.FolderLabel" xml:space="preserve">
    <value>Folder:</value>
  </data>
  <data name="Dialog.ExportProjectToHtml.SelectTargetDirInfo" xml:space="preserve">
    <value>Select target directory.</value>
  </data>
  <data name="Dialog.Goto.DialogName" xml:space="preserve">
    <value>Go to</value>
    <comment>Title of the "go to" dialog window</comment>
  </data>
  <data name="Dialog.Goto.GotoLine" xml:space="preserve">
    <value>Go to line</value>
  </data>
  <data name="Dialog.Goto.IntroText" xml:space="preserve">
    <value>Please enter an expression to jump to.
You can enter line number, class names and file names.
Examples: "120", "MainClass", "Main.cs, 120".</value>
  </data>
  <data name="Dialog.HighlightingEditor.Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Dialog.HighlightingEditor.Change" xml:space="preserve">
    <value>Change...</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Background" xml:space="preserve">
    <value>Background color</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Bold" xml:space="preserve">
    <value>Bold</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Caption" xml:space="preserve">
    <value>Here you can edit the selected highlighting color.</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Foreground" xml:space="preserve">
    <value>Foreground color</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Italic" xml:space="preserve">
    <value>Italic</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.NoColor" xml:space="preserve">
    <value>No color specified (use default)</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.SystemColor" xml:space="preserve">
    <value>System color:</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.Title" xml:space="preserve">
    <value>Edit color</value>
  </data>
  <data name="Dialog.HighlightingEditor.ColorDlg.UserDefined" xml:space="preserve">
    <value>User-defined color:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Digits.Explanation" xml:space="preserve">
    <value>This option lets you set the coloring of digits in your file.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Digits.Sample" xml:space="preserve">
    <value>Digit color sample:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Edit" xml:space="preserve">
    <value>Edit...</value>
  </data>
  <data name="Dialog.HighlightingEditor.EditDlg.Title" xml:space="preserve">
    <value>Edit scheme</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnterText" xml:space="preserve">
    <value>Enter text</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.BookMarks" xml:space="preserve">
    <value>Bookmarks</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.CaretLine" xml:space="preserve">
    <value>Caret Line</value>
    <comment>Name for the vertical line showing the caret position</comment>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.CaretMarker" xml:space="preserve">
    <value>Caret marker</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.Cursor" xml:space="preserve">
    <value>Cursor</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.Default" xml:space="preserve">
    <value>Default text/background</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.EOLMarkers" xml:space="preserve">
    <value>EOL Markers</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.FoldLine" xml:space="preserve">
    <value>Folding line</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.FoldMarker" xml:space="preserve">
    <value>Folding marker</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.InvalidLines" xml:space="preserve">
    <value>Invalid lines</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.LineNumbers" xml:space="preserve">
    <value>Line numbers</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.SelectedFoldLine" xml:space="preserve">
    <value>Selected folding line</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.Selection" xml:space="preserve">
    <value>Selection</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.SpaceMarkers" xml:space="preserve">
    <value>Space markers</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.TabMarkers" xml:space="preserve">
    <value>Tab markers</value>
  </data>
  <data name="Dialog.HighlightingEditor.EnvColors.VRuler" xml:space="preserve">
    <value>Vertical ruler</value>
  </data>
  <data name="Dialog.HighlightingEditor.Environment.Colors" xml:space="preserve">
    <value>Environment colors:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Environment.Explanation" xml:space="preserve">
    <value>Here you can define your highlight colors for different general environment items of the text editor.

Select an entry in the list and click "Edit" to make a change.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Explanation" xml:space="preserve">
    <value>Explanation:</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordList.ColorSample" xml:space="preserve">
    <value>Used highlighting color sample:</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordList.EnterName" xml:space="preserve">
    <value>Enter name of new keyword:</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordList.Explanation" xml:space="preserve">
    <value>Every keyword in the list is colored with the selected highlighting color.</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordList.Keywords" xml:space="preserve">
    <value>Keywords in this list:</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordList.ListName" xml:space="preserve">
    <value>List name:</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordList.NameEmpty" xml:space="preserve">
    <value>The keyword list must have a name.</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordLists.EnterName" xml:space="preserve">
    <value>Enter name of new keyword list:</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordLists.Explanation" xml:space="preserve">
    <value>Each keyword list can have an individual highlighting color assigned to it.</value>
  </data>
  <data name="Dialog.HighlightingEditor.KeywordLists.Lists" xml:space="preserve">
    <value>Keyword lists:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Marker.ExplanationNext" xml:space="preserve">
    <value>Enter the key string that will cause the next word to be colored with the selected color.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Marker.ExplanationPrev" xml:space="preserve">
    <value>Enter the key string that will cause the previous word to be colored with the selected color.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Marker.KeyString" xml:space="preserve">
    <value>Key string to recognize:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Marker.MarkMarker" xml:space="preserve">
    <value>Use color for key string, too</value>
  </data>
  <data name="Dialog.HighlightingEditor.Marker.NameEmpty" xml:space="preserve">
    <value>The key string must not be empty.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Marker.SampleColor" xml:space="preserve">
    <value>Sample of highlighting color for previous/following word:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Markers.EnterName" xml:space="preserve">
    <value>Enter new marker key string:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Markers.Explanation" xml:space="preserve">
    <value>Here you can define strings that are not colored themselves, but the previous or following word next to them.

This is useful, for example, for coloring method calls by using ( as a key string.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Markers.KeyString" xml:space="preserve">
    <value>Key string</value>
  </data>
  <data name="Dialog.HighlightingEditor.Markers.Next" xml:space="preserve">
    <value>Next token marker key strings:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Markers.Previous" xml:space="preserve">
    <value>Previous token marker key strings:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Properties.EnterName" xml:space="preserve">
    <value>Enter name of new property:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Properties.EnterValue" xml:space="preserve">
    <value>Enter value of property {0}:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Properties.Explanation" xml:space="preserve">
    <value>Here you can define properties of the scheme.

Properties are name-value pairs that control the behaviour of the editor. Currently, the only supported property is "LineComment", which tells the editor the string to insert at the start of the line when you tell it to comment out a line.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Properties.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Dialog.HighlightingEditor.Properties.Properties" xml:space="preserve">
    <value>Properties:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Properties.Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Dialog.HighlightingEditor.Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSet.Delimiters" xml:space="preserve">
    <value>Delimiters:</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSet.Explanation" xml:space="preserve">
    <value>These are the general properties of the rule set.

The delimiters string determines which characters are used for word splitting.
If you enter something in "Referenced set", this means that the set will be the root rule set imported from another scheme whose name is the Reference string. All other options of this rule set are discarded. This is useful, for example, for HTML and ASP, which both use JavaScript as an import.</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSet.IgnoreCase" xml:space="preserve">
    <value>Ignore case in rule set</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSet.Name" xml:space="preserve">
    <value>Name of rule set:</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSet.NameEmpty" xml:space="preserve">
    <value>The rule set name must not be empty. Only the root rule set has no name.</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSet.NoEscapeSeq" xml:space="preserve">
    <value>Don't recognize escape sequences in the rule set</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSet.Reference" xml:space="preserve">
    <value>Referenced set:</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSet.SpaceAndTab" xml:space="preserve">
    <value>Space and Tab are added automatically.</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSets.EnterName" xml:space="preserve">
    <value>Enter name of new rule set:</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSets.Explanation" xml:space="preserve">
    <value>Here you can define rule sets for the highlighting scheme.

Rule sets are the heart of SharpDevelop's highlighting engine. Each rule set is a collection of colored keyword lists and spans, which are character sequences between given begin and end symbols, e.g. quotes. 
The root rule set is used for the main file body, the others (named ones) can be used inside of spans.
So there can be several rule sets that apply to different regions of text, such as XML comments or strings.</value>
  </data>
  <data name="Dialog.HighlightingEditor.RuleSets.NamedRuleSets" xml:space="preserve">
    <value>Named rule sets:</value>
  </data>
  <data name="Dialog.HighlightingEditor.SampleText" xml:space="preserve">
    <value>Sample text</value>
  </data>
  <data name="Dialog.HighlightingEditor.Scheme.Explanation" xml:space="preserve">
    <value>Each highlighting scheme must have an unique name that identifies it to the program.
A user-defined scheme that has the same name as a built-in completely replaces the built-in.

The 'Extensions' field is a list of semicolon-separated file extensions that this scheme belongs to, for example '.htm;.html;.asp'. This string must not contain spaces.
When an extension is used by both a built-in and a user-defined scheme, the user-defined scheme has priority.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Scheme.Extensions" xml:space="preserve">
    <value>Extensions:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Scheme.Name" xml:space="preserve">
    <value>Scheme name:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Scheme.NameEmpty" xml:space="preserve">
    <value>The scheme name must not be empty.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.Begin" xml:space="preserve">
    <value>Begin of span:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.BeginCol" xml:space="preserve">
    <value>Begin</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.BeginEmpty" xml:space="preserve">
    <value>The begin string must not be empty.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.BeginSingleWord" xml:space="preserve">
    <value>Begin is single word:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.Colors" xml:space="preserve">
    <value>Colors:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.ContCol" xml:space="preserve">
    <value>Contents</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.End" xml:space="preserve">
    <value>End of span:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.EndCol" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.EndSingleWord" xml:space="preserve">
    <value>End is single word:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.EscChar" xml:space="preserve">
    <value>Escape character:</value>
    <comment>Escape character inside highlighting spans, e.g. \ in C#</comment>
  </data>
  <data name="Dialog.HighlightingEditor.Span.Explanation" xml:space="preserve">
    <value>In "Begin" and "End", @ has a special meaning: @!string@ doesn't match string when searching for the begin/end, and @@ matches a single @.

If no color for begin/end is given, the contents color is used.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.Name" xml:space="preserve">
    <value>Name of Span:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.NameEmpty" xml:space="preserve">
    <value>The span name must not be empty.</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.NoEscSeq" xml:space="preserve">
    <value>Don't recognize escape sequences</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.Ruleset" xml:space="preserve">
    <value>Rule set to use:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.StopEol" xml:space="preserve">
    <value>Span ends at end of line if no end string is found</value>
  </data>
  <data name="Dialog.HighlightingEditor.Span.Use" xml:space="preserve">
    <value>Use</value>
  </data>
  <data name="Dialog.HighlightingEditor.Spans.EnterName" xml:space="preserve">
    <value>Enter new span name:</value>
  </data>
  <data name="Dialog.HighlightingEditor.Spans.Explanation" xml:space="preserve">
    <value>Spans are sequences of characters defined by a beginning string, and optionally an end string (or they can end at end-of-line), that have a separate default highlight color.

Additionally, a span can be assigned a named rule set that allows complex formatting inside (HTML tags or XML comments, for example).</value>
  </data>
  <data name="Dialog.HighlightingEditor.Spans.Spans" xml:space="preserve">
    <value>Defined spans:</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.DigitsColor" xml:space="preserve">
    <value>Digits color</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.EnvironmentColors" xml:space="preserve">
    <value>Environment colors</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.KeywordList" xml:space="preserve">
    <value>Keyword list</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.KeywordLists" xml:space="preserve">
    <value>Keyword lists</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.MarkNextWord" xml:space="preserve">
    <value>Mark next word</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.MarkPreviousWord" xml:space="preserve">
    <value>Mark previous word</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.RootRuleSet" xml:space="preserve">
    <value>Root Rule set</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.RuleSet" xml:space="preserve">
    <value>Rule set</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.RuleSets" xml:space="preserve">
    <value>Rule sets</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.Span" xml:space="preserve">
    <value>Span</value>
  </data>
  <data name="Dialog.HighlightingEditor.TreeView.Spans" xml:space="preserve">
    <value>Spans</value>
  </data>
  <data name="Dialog.HighlightingEditor.ValidationError" xml:space="preserve">
    <value>Please correct the settings you made:</value>
  </data>
  <data name="Dialog.NewFile.AddToProjectQuestion" xml:space="preserve">
    <value>If you want to use the new file in the current project, you need to add it to the project.
Do you want to add the new file to the project ${CurrentProjectName}?</value>
  </data>
  <data name="Dialog.NewFile.AddToProjectQuestionProject" xml:space="preserve">
    <value>Create file inside project</value>
    <comment>Answer 1</comment>
  </data>
  <data name="Dialog.NewFile.AddToProjectQuestionStandalone" xml:space="preserve">
    <value>Create standalone file</value>
    <comment>Answer 2</comment>
  </data>
  <data name="Dialog.NewFile.AddToProjectQuestionTitle" xml:space="preserve">
    <value>Add file to project?</value>
  </data>
  <data name="Dialog.NewFile.CategoryText" xml:space="preserve">
    <value>&amp;Categories:</value>
  </data>
  <data name="Dialog.NewFile.DialogName" xml:space="preserve">
    <value>New File</value>
  </data>
  <data name="Dialog.NewFile.FileNameLabel" xml:space="preserve">
    <value>&amp;File Name</value>
  </data>
  <data name="Dialog.NewFile.FillOutFirstCaption" xml:space="preserve">
    <value>Fill out properties first</value>
  </data>
  <data name="Dialog.NewFile.FillOutFirstMessage" xml:space="preserve">
    <value>To create this file you need to specify some property values first.</value>
  </data>
  <data name="Dialog.NewFile.ReadOnlyProjectWarning" xml:space="preserve">
    <value>Currently selected project file {0} has the readonly attribute set. The new file will not be added to the project.</value>
  </data>
  <data name="Dialog.NewFile.TemplateText" xml:space="preserve">
    <value>&amp;Templates:</value>
  </data>
  <data name="Dialog.NewProject.autoCreateSubDirCheckBox" xml:space="preserve">
    <value>&amp;Auto create project subdir</value>
  </data>
  <data name="Dialog.NewProject.checkBox1Text" xml:space="preserve">
    <value>Create &amp;directory for Sources</value>
  </data>
  <data name="Dialog.NewProject.CreateDirectoryForSolution" xml:space="preserve">
    <value>Create &amp;directory for solution</value>
  </data>
  <data name="Dialog.NewProject.DialogName" xml:space="preserve">
    <value>New Project</value>
  </data>
  <data name="Dialog.NewProject.EmptyProjectFieldWarning" xml:space="preserve">
    <value>The project or source TextBox is empty, can't create project.</value>
  </data>
  <data name="Dialog.NewProject.LocationLabelText" xml:space="preserve">
    <value>&amp;Location:</value>
  </data>
  <data name="Dialog.NewProject.NameLabelText" xml:space="preserve">
    <value>&amp;Name:</value>
  </data>
  <data name="Dialog.NewProject.NewSolutionLabelText" xml:space="preserve">
    <value>New &amp;Project Name:</value>
  </data>
  <data name="Dialog.NewProject.ProjectAtDescription" xml:space="preserve">
    <value>Project will be created at</value>
  </data>
  <data name="Dialog.NewProject.ProjectTypeLabelText" xml:space="preserve">
    <value>&amp;Categories:</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ErrorParsingRegex" xml:space="preserve">
    <value>Error parsing regular expression:</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindAll" xml:space="preserve">
    <value>Find &amp;all</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindButton" xml:space="preserve">
    <value>&amp;Find</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindDialogName" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindNextButton" xml:space="preserve">
    <value>&amp;Find next</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.FindWhat" xml:space="preserve">
    <value>Fi&amp;nd what:</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.IncludeSubFolders" xml:space="preserve">
    <value>Include su&amp;b-folders</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookAtFileTypes" xml:space="preserve">
    <value>Look at these file &amp;types:</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.AllOpenDocuments" xml:space="preserve">
    <value>all open documents</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.CurrentDocument" xml:space="preserve">
    <value>current document</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.CurrentSelection" xml:space="preserve">
    <value>current selection</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.DirectoryNotFound" xml:space="preserve">
    <value>The directory '{0}' does not exist.</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.SelectDirectory" xml:space="preserve">
    <value>Select directory to search in</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.WholeProject" xml:space="preserve">
    <value>whole project</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.LookIn.WholeSolution" xml:space="preserve">
    <value>whole solution</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.MarkAllButton" xml:space="preserve">
    <value>&amp;Bookmark All</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.MatchCase" xml:space="preserve">
    <value>Match &amp;case</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.MatchWholeWord" xml:space="preserve">
    <value>Match &amp;whole word</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ReplaceAllButton" xml:space="preserve">
    <value>Replace &amp;all</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ReplaceButton" xml:space="preserve">
    <value>&amp;Replace</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ReplaceDialogName" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.ReplaceWith" xml:space="preserve">
    <value>Replace with:</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchIn" xml:space="preserve">
    <value>&amp;Look in:</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStrategy.RegexSearch" xml:space="preserve">
    <value>Regular expressions</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStrategy.Standard" xml:space="preserve">
    <value>Standard search</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStrategy.WildcardSearch" xml:space="preserve">
    <value>Wildcards</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStringNotFound" xml:space="preserve">
    <value>Search string not found!</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.SearchStringNotFound.Title" xml:space="preserve">
    <value>Not found</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.Title" xml:space="preserve">
    <value>Search and Replace</value>
  </data>
  <data name="Dialog.NewProject.SearchReplace.UseMethodLabel" xml:space="preserve">
    <value>Us&amp;e:</value>
  </data>
  <data name="Dialog.NewProject.SelectDirectoryForProject" xml:space="preserve">
    <value>Select the directory in which the project will be created.</value>
  </data>
  <data name="Dialog.NewProject.SolutionName" xml:space="preserve">
    <value>Solution Na&amp;me:</value>
  </data>
  <data name="Dialog.NewProject.TemplateLabelText" xml:space="preserve">
    <value>&amp;Templates:</value>
  </data>
  <data name="Dialog.Options.BufferOptions" xml:space="preserve">
    <value>Buffer Options</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.AddGroupLabel" xml:space="preserve">
    <value>A&amp;dd new Group</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditGroupDialog.Text" xml:space="preserve">
    <value>Please enter the list of file extensions as a semicolon-separated list. (Example: .h;.c;.cpp)</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditGroupLabel" xml:space="preserve">
    <value>&amp;Edit extensions</value>
    <comment>Edits the list of file extensions associated with a code snippet group</comment>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditTemplateDialog.DescriptionLabel" xml:space="preserve">
    <value>&amp;Description</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditTemplateDialog.DialogName" xml:space="preserve">
    <value>Edit Template</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.EditTemplateDialog.TemplateLabel" xml:space="preserve">
    <value>&amp;Template</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.ExtensionsLabel" xml:space="preserve">
    <value>E&amp;xtensions</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.Keyword" xml:space="preserve">
    <value>Keyword mapping</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.PressTabToInsertTemplate" xml:space="preserve">
    <value>Press Tab to insert this code template.</value>
    <comment>Appears in description box in template completion.</comment>
  </data>
  <data name="Dialog.Options.CodeTemplate.RemoveGroupLabel" xml:space="preserve">
    <value>Re&amp;move Group</value>
  </data>
  <data name="Dialog.Options.CodeTemplate.Template" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="Dialog.Options.CodeTemplatesText" xml:space="preserve">
    <value>Code Templates</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.BuildCheckBox" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.BuildColumnHeader" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.CombineConfigLabel" xml:space="preserve">
    <value>Combine configuration</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.ConfigurationColumnHeader" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.ConfigurationEditor" xml:space="preserve">
    <value>Configuration Editor</value>
    <comment>Title of the solution configuration editor dialog</comment>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.ConfigurationEditor.EditItem" xml:space="preserve">
    <value>&lt;Edit&gt;</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.ConfigurationManagerButton" xml:space="preserve">
    <value>Configuration Manager</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.EntriesGroupBox" xml:space="preserve">
    <value>Entries</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.EntryColumnHeader" xml:space="preserve">
    <value>Entry</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.EntryConfigurationLabel" xml:space="preserve">
    <value>Entry configuration</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.PlatformColumnHeader" xml:space="preserve">
    <value>Platform</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.ProjectNameColumnHeader" xml:space="preserve">
    <value>Project Name</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Configurations.SolutionConfiguration" xml:space="preserve">
    <value>&amp;Solution configuration:</value>
    <comment>label in front of combo box where the build configuration (Debug/Release) of the solution can be chosen</comment>
  </data>
  <data name="Dialog.Options.CombineOptions.Dependencies.DependsOnLabel" xml:space="preserve">
    <value>Depends on:</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Dependencies.EntryLabel" xml:space="preserve">
    <value>Entry:</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Startup.Action.Execute" xml:space="preserve">
    <value>Execute</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Startup.Action.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Startup.ActionColumnHeader" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Startup.ActionLabel" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Startup.EntryColumnHeader" xml:space="preserve">
    <value>Entry</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Startup.MultipleStartupRadioButton" xml:space="preserve">
    <value>&amp;Multiple Startup Project</value>
  </data>
  <data name="Dialog.Options.CombineOptions.Startup.SingleStartupRadioButton" xml:space="preserve">
    <value>&amp;Single Startup Project</value>
  </data>
  <data name="Dialog.Options.ExternalTool.ArgumentLabel" xml:space="preserve">
    <value>&amp;Arguments</value>
  </data>
  <data name="Dialog.Options.ExternalTool.CommandLabel" xml:space="preserve">
    <value>&amp;Command</value>
  </data>
  <data name="Dialog.Options.ExternalTool.PromptForArgsCheckBox" xml:space="preserve">
    <value>&amp;Prompt for Arguments</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CombineDirectory" xml:space="preserve">
    <value>&amp;Solution directory</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CombineFileName" xml:space="preserve">
    <value>Solution file name</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CurrentColumn" xml:space="preserve">
    <value>Current column</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CurrentLine" xml:space="preserve">
    <value>Current line</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.CurrentText" xml:space="preserve">
    <value>Current text</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.FullItemDirectory" xml:space="preserve">
    <value>&amp;Item directory</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.FullItemPath" xml:space="preserve">
    <value>Item Path</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.FullTargetPath" xml:space="preserve">
    <value>Target Path</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.ItemExtension" xml:space="preserve">
    <value>Item extension</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.ItemFileName" xml:space="preserve">
    <value>Item file name</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.ProjectDirectory" xml:space="preserve">
    <value>&amp;Project directory</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.ProjectFileName" xml:space="preserve">
    <value>Project file name</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.SharpDevelopStartupPath" xml:space="preserve">
    <value>#Develop Startup Directory</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.TargetDirectory" xml:space="preserve">
    <value>&amp;Target directory</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.TargetExtension" xml:space="preserve">
    <value>Target extension</value>
  </data>
  <data name="Dialog.Options.ExternalTool.QuickInsertMenu.TargetName" xml:space="preserve">
    <value>Target Name</value>
  </data>
  <data name="Dialog.Options.ExternalTool.TitleLabel" xml:space="preserve">
    <value>&amp;Title</value>
  </data>
  <data name="Dialog.Options.ExternalTool.ToolsLabel" xml:space="preserve">
    <value>&amp;Tools</value>
  </data>
  <data name="Dialog.Options.ExternalTool.UseOutputWindow" xml:space="preserve">
    <value>Use &amp;Output Window</value>
  </data>
  <data name="Dialog.Options.ExternalTool.WorkingDirLabel" xml:space="preserve">
    <value>&amp;Working dir</value>
  </data>
  <data name="Dialog.Options.ExternalToolsText" xml:space="preserve">
    <value>External Tools</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.GreyOut" xml:space="preserve">
    <value>Grey out</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.Hide" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.InternalMembers" xml:space="preserve">
    <value>Internal members:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.InternalTypes" xml:space="preserve">
    <value>Internal types:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.MembersGroupBox" xml:space="preserve">
    <value>Selection of members in the tree</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.OtherGroupBox" xml:space="preserve">
    <value>Other options</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.PanelName" xml:space="preserve">
    <value>Assembly Scout</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.PrivateMembers" xml:space="preserve">
    <value>Private members:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.PrivateTypes" xml:space="preserve">
    <value>Private types:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.ShowResourcePreviewBox" xml:space="preserve">
    <value>Show resource previews</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.ShowReturnTypesBox" xml:space="preserve">
    <value>Show return types of members in the tree</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.ShowSpecialMethods" xml:space="preserve">
    <value>Show "special" methods</value>
  </data>
  <data name="Dialog.Options.IDEOptions.AssemblyScout.TypesGroupBox" xml:space="preserve">
    <value>Selection of types in the tree</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.ClearCache" xml:space="preserve">
    <value>Clear cache</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.CompleteWhenTyping" xml:space="preserve">
    <value>Show completion list after a character is typed</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.DetailSettings" xml:space="preserve">
    <value>Code completion detail settings</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.LanguageDependend" xml:space="preserve">
    <value>The following options are language-dependend, some options are not available in some programming languages.</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.MainOption" xml:space="preserve">
    <value>Use the following option to turn code completion completely off:</value>
    <comment>Text in label above the "Enable Code Completion" checkbox.</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.RefreshInsightOnComma" xml:space="preserve">
    <value>Re-open tooltip with better overload when pressing comma</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.SaveItemCountAfterNumber" xml:space="preserve">
    <value>items</value>
    <comment>Save *inputbox* items</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.SaveItemCountBeforeNumber" xml:space="preserve">
    <value>Save</value>
    <comment>Save *inputbox* items</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseDataUsageCache" xml:space="preserve">
    <value>Pre-select recently used members</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseDebugTooltipsOnly" xml:space="preserve">
    <value>Only in debug mode</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseInsight" xml:space="preserve">
    <value>Show tooltip when writing method calls</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseKeywordCompletion" xml:space="preserve">
    <value>Trigger code completion after keywords</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeCompletion.UseTooltips" xml:space="preserve">
    <value>Show tooltip when moving mouse over expression</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.BlankLinesBetweenMembersCheckBox" xml:space="preserve">
    <value>&amp;Insert blank lines between members</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.CodeGenerationOptionsGroupBox" xml:space="preserve">
    <value>Code generation options</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.CommentGenerationOptionsGroupBox" xml:space="preserve">
    <value>Comment generation options</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.ElseOnClosingCheckBox" xml:space="preserve">
    <value>&amp;Else on same line as closing bracket</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.GenerateAdditionalCommentsCheckBox" xml:space="preserve">
    <value>Generate &amp;additional comments</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.GenerateDocCommentsCheckBox" xml:space="preserve">
    <value>Generate &amp;documentation comments</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.StartBlockOnTheSameLineCheckBox" xml:space="preserve">
    <value>&amp;Start code block on the same line</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.Title" xml:space="preserve">
    <value>Code Generation</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.UseFullTypeNamesCheckBox" xml:space="preserve">
    <value>&amp;Use full type names</value>
  </data>
  <data name="Dialog.Options.IDEOptions.CodingOptionsText" xml:space="preserve">
    <value>Coding</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging" xml:space="preserve">
    <value>Debugging</value>
    <comment>The root node in the options dialog</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping" xml:space="preserve">
    <value>Stepping</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.EnableJustMyCode" xml:space="preserve">
    <value>Use 'Just My Code' feature for stepping</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverAllProperties" xml:space="preserve">
    <value>Step over all properties</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverDebuggerAttributes" xml:space="preserve">
    <value>Step over code marked with debugger attributes</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverFieldAccessProperties" xml:space="preserve">
    <value>Step over field access properties</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverNoSymbols" xml:space="preserve">
    <value>Step over code without symbols</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Stepping.StepOverSingleLineProperties" xml:space="preserve">
    <value>Step over single-line properties</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Symbols" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Debugging.Symbols.ListCaption" xml:space="preserve">
    <value>Symbol and source code paths:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.EditStandardHeaderPanel.HeaderLabel" xml:space="preserve">
    <value>&amp;Header</value>
  </data>
  <data name="Dialog.Options.IDEOptions.EditStandardHeaderPanel.LanguageLabel" xml:space="preserve">
    <value>&amp;Language</value>
  </data>
  <data name="Dialog.Options.IDEOptions.EditStandardHeaderPanel.Title" xml:space="preserve">
    <value>Edit Standard Headers</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.DescriptionLabel" xml:space="preserve">
    <value>When SharpDevelop is in fullscreen mode:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.HideHorizontalScrollbar" xml:space="preserve">
    <value>Hide horizontal scrollbar of text editor</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.HideMainMenu" xml:space="preserve">
    <value>Hide main menu</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.HideStatusBar" xml:space="preserve">
    <value>Hide status bar</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.HideTabs" xml:space="preserve">
    <value>Hide tabs</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.HideToolbars" xml:space="preserve">
    <value>Hide toolbars</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.HideVerticalScrollbar" xml:space="preserve">
    <value>Hide vertical scrollbar of text editor</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.HideWindowsTaskbar" xml:space="preserve">
    <value>Hide Windows Taskbar</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.ShowMainMenuOnMouseHover" xml:space="preserve">
    <value>Show when cursor moves over it</value>
  </data>
  <data name="Dialog.Options.IDEOptions.FullScreen.Title" xml:space="preserve">
    <value>Fullscreen</value>
  </data>
  <data name="Dialog.Options.IDEOptions.General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.AutoLoadExternalChanges" xml:space="preserve">
    <value>&amp;Auto-load changes if saved</value>
    <comment>(checkbox) automatically load externally changed files if there are no unsaved modifications in SharpDevelop</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.CreateBackupCopyCheckBox" xml:space="preserve">
    <value>Use &amp;temporary file for saving</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.DefaultFileEncoding" xml:space="preserve">
    <value>Default file &amp;encoding:</value>
    <comment>Default encoding used for new files</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.DetectExternalChanges" xml:space="preserve">
    <value>&amp;Detect external changes to files</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.LineTerminatorStyleGroupBox" xml:space="preserve">
    <value>L&amp;ine terminator style</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.LoadLabel" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.LoadUserDataCheckBox" xml:space="preserve">
    <value>&amp;Load user-specific settings with the document</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.MacintoshRadioButton" xml:space="preserve">
    <value>Macintosh (CR)</value>
    <comment>Line terminator style for the MacOS. I think this doesn't need translation.</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.PanelName" xml:space="preserve">
    <value>Load/Save</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.SaveLabel" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.UnixRadioButton" xml:space="preserve">
    <value>Unix (LF)</value>
    <comment>LF = line feed
Line terminator style for 'unix' like oprating
systems. I don't think that this needs translation.</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.UseRecycleBin" xml:space="preserve">
    <value>Use &amp;recycle bin when deleting files</value>
  </data>
  <data name="Dialog.Options.IDEOptions.LoadSaveOptions.WindowsRadioButton" xml:space="preserve">
    <value>Windows (CRLF)</value>
    <comment>CRLF = carriage return, line feed
line terminator style for the 'Windows' operating 
system. I don't think that it needs translation.</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.OutputPanel.Format" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="Dialog.Options.IDEOptions.OutputPanel.Title" xml:space="preserve">
    <value>Output Window</value>
  </data>
  <data name="Dialog.Options.IDEOptions.OutputPanel.WordWrap" xml:space="preserve">
    <value>Word wrap</value>
  </data>
  <data name="Dialog.Options.IDEOptions.Profiling" xml:space="preserve">
    <value>Profiler</value>
    <comment>option page of the performance profiler</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.BuildAndRunGroupBox" xml:space="preserve">
    <value>Build and Run options</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.InvalidProjectPathSpecified" xml:space="preserve">
    <value>Invalid project path specified.</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.LoadPrevProjectCheckBox" xml:space="preserve">
    <value>Load previous solution on startup</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.PanelName" xml:space="preserve">
    <value>Projects and Solutions</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.ParallelBuild" xml:space="preserve">
    <value>Number of projects to build in parallel:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.ProjectLocationLabel" xml:space="preserve">
    <value>Default project location:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.SelectDefaultProjectLocationDialog.Title" xml:space="preserve">
    <value>Select default project location</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.SettingsGroupBox" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.ShowErrorListPadCheckBox" xml:space="preserve">
    <value>Show error list pad if build finishes with errors</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning" xml:space="preserve">
    <value>When running:</value>
    <comment>option that specifies how to build when running the project</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning.BuildModifiedAndDependent" xml:space="preserve">
    <value>Build modified projects and projects depending on them</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning.BuildOnlyModified" xml:space="preserve">
    <value>Build modified projects only</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning.DoNotBuild" xml:space="preserve">
    <value>Do not build</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ProjectAndSolutionOptions.WhenRunning.RegularBuild" xml:space="preserve">
    <value>Build all projects</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectCulture.CurrentUILanguageLabel" xml:space="preserve">
    <value>Current UI language:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectCulture.DescriptionText" xml:space="preserve">
    <value>Click on an icon to choose language.</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectCulture.PanelName" xml:space="preserve">
    <value>UI Language</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectCulture.UILanguageSetToLabel" xml:space="preserve">
    <value>UI language set to:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.SelectAmbienceLabel" xml:space="preserve">
    <value>Select your preferred &amp;ambience:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.ShowExtensionsCheckBox" xml:space="preserve">
    <value>Show file &amp;extensions in the project scout</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.ShowStatusBarCheckBox" xml:space="preserve">
    <value>&amp;Show status bar</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.ShowToolBarCheckBox" xml:space="preserve">
    <value>Show &amp;tool bar</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.UseProfessionalStyleCheckBox" xml:space="preserve">
    <value>Use blue style (Office 2003-like) for menus and toolbars.</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.UseProjectAmbience" xml:space="preserve">
    <value>Prefer project's ambience if possible</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectStyle.VisualStyleGroupBox" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="Dialog.Options.IDEOptions.SelectVisualStyle.PanelName" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TaskListOptions.CommentTagsGroupBox" xml:space="preserve">
    <value>Comment Tags</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TaskListOptions.NameLabel" xml:space="preserve">
    <value>&amp;Name</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TaskListOptions.PanelName" xml:space="preserve">
    <value>Task list</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TaskListOptions.TokenListLabel" xml:space="preserve">
    <value>&amp;Token list</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.BehaviourGroupBox" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.BehindEOLCheckBox" xml:space="preserve">
    <value>&amp;Can move caret behind EOL</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.ConvertTabsToSpacesCheckBox" xml:space="preserve">
    <value>C&amp;onvert Tabs to Spaces</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.CtrlClickGotoDefinition" xml:space="preserve">
    <value>Use Ctrl+Click for "Go to Definition"</value>
    <comment>Checkbox for enabling Ctrl+Leftclick as shortcut for 'go to definition'</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.CurlyBracketCheckBox" xml:space="preserve">
    <value>A&amp;uto insert curly braces</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.CutCopyWholeLine" xml:space="preserve">
    <value>Cut or Copy entire line when nothing is selected</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.HideMouseCheckBox" xml:space="preserve">
    <value>&amp;Hide mouse cursor while typing</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentLabel" xml:space="preserve">
    <value>I&amp;ndentation</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentSizeLabel" xml:space="preserve">
    <value>&amp;Indentation size</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentStyle.Automatic" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentStyle.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.IndentStyle.Smart" xml:space="preserve">
    <value>Smart</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.MouseWhellGroupBox" xml:space="preserve">
    <value>&amp;Mousewheel direction</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.NormalMouseDirectionRadioButton" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.PanelName" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.ReverseMouseDirectionRadioButton" xml:space="preserve">
    <value>Reverse</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.TabsGroupBox" xml:space="preserve">
    <value>Tabs</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.TabSizeLabel" xml:space="preserve">
    <value>&amp;Tab size</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.TemplateInsertCheckBox" xml:space="preserve">
    <value>&amp;Automatic template insertion</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Behaviour.UseSmartIndent" xml:space="preserve">
    <value>Use smart indentation</value>
    <comment>Checkbox for disabling/enabling smart indentation</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.CodeCompletion.PanelName" xml:space="preserve">
    <value>Code Completion</value>
    <comment>Title of the code completion option panel</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.AntialiasedFontCheckBox" xml:space="preserve">
    <value>&amp;Render font antialiased</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.CodeCompletionCheckBox" xml:space="preserve">
    <value>Enable &amp;code completion</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.DoubleBufferCheckBox" xml:space="preserve">
    <value>Enable &amp;doublebuffering</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FoldingCheckBox" xml:space="preserve">
    <value>Enable &amp;folding</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FontGroupBox" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FontGroupBox.FileEncodingGroupBox" xml:space="preserve">
    <value>File encoding</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FontGroupBox.FileEncodingLabel" xml:space="preserve">
    <value>Choose &amp;encoding:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.FontSizeLabel" xml:space="preserve">
    <value>Size:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.GeneralOptionsGroupBox" xml:space="preserve">
    <value>General Options</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.MouseWheelZoomCheckBoxCheckBox" xml:space="preserve">
    <value>M&amp;ouse wheel zooming</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.ShowQuickClassBrowserCheckBox" xml:space="preserve">
    <value>Show &amp;Quick ClassBrowser Panel</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.General.TextfontLabel" xml:space="preserve">
    <value>Text Font:</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.AtRowLabel" xml:space="preserve">
    <value>at colum&amp;n</value>
    <comment>I've mixed up row and column. Column is right</comment>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.BracketMatchingStyle.AfterCaret" xml:space="preserve">
    <value>After Caret</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.BracketMatchingStyle.BeforeCaret" xml:space="preserve">
    <value>Before Caret</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.CaretCheckBox" xml:space="preserve">
    <value>Show caret line</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.EnableAnimationsCheckBox" xml:space="preserve">
    <value>Enable animations</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.EOLMarkersCheckBox" xml:space="preserve">
    <value>Show &amp;end-of-line markers</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.HighlightSymbolCheckBox" xml:space="preserve">
    <value>Highlight symbols</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.HiglightBracketCheckBox" xml:space="preserve">
    <value>Highlight &amp;matching bracket</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.HorizontalRulerCheckBox" xml:space="preserve">
    <value>Show &amp;horizontal ruler</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.InvalidLinesCheckBox" xml:space="preserve">
    <value>Show &amp;invalid lines</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.LineMarkerLabel" xml:space="preserve">
    <value>Line m&amp;arker style</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.LineNumberCheckBox" xml:space="preserve">
    <value>Show &amp;line numbers</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.LineViewerStyle.FullRow" xml:space="preserve">
    <value>Full Row</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.LineViewerStyle.None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.MarkersGroupBox" xml:space="preserve">
    <value>Markers and Rulers</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.PanelName" xml:space="preserve">
    <value>Markers and Rulers</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.ShowHiddenDefinitionsCheckBox" xml:space="preserve">
    <value>Show &amp;hidden definitions (brackets only)</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.SpacesCheckBox" xml:space="preserve">
    <value>Show &amp;spaces</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.TabsCheckBox" xml:space="preserve">
    <value>Show &amp;tabs</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.UnderLineErrorsCheckBox" xml:space="preserve">
    <value>&amp;Underline errors</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.Markers.VerticalRulerCheckBox" xml:space="preserve">
    <value>Show &amp;column ruler</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.VB.EnableCasingCheckBox" xml:space="preserve">
    <value>Enable automatic casing of keywords</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.VB.EnableEndConstructsCheckBox" xml:space="preserve">
    <value>Enable automatic insertion of end constructs</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.VB.FormattingGroupBox" xml:space="preserve">
    <value>Code formatting</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditor.VB.PanelName" xml:space="preserve">
    <value>VB specific options</value>
  </data>
  <data name="Dialog.Options.IDEOptions.TextEditorOptionsText" xml:space="preserve">
    <value>Text Editor</value>
  </data>
  <data name="Dialog.Options.IDEOptions.ToolsOptionsText" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.CompileTarget.Exe" xml:space="preserve">
    <value>Console Application</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.CompileTarget.Library" xml:space="preserve">
    <value>Class Library</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.CompileTarget.Module" xml:space="preserve">
    <value>.Net Module</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.CompileTarget.WinExe" xml:space="preserve">
    <value>Windows Application</value>
  </data>
  <data name="Dialog.Options.PrjOptions.Configuration.FolderBrowserDescription" xml:space="preserve">
    <value>Select the directory in which the assembly will be created.</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.BuiltinLabel" xml:space="preserve">
    <value>Built-in:</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.CaptionLabel" xml:space="preserve">
    <value>Available highlighting schemes:</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.CopyButton" xml:space="preserve">
    <value>Copy to user-defined</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.CopyError" xml:space="preserve">
    <value>Could not copy the file.</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.DeleteButton" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.DeleteConfirm" xml:space="preserve">
    <value>Do you really want to delete this user-defined scheme?</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.DeleteError" xml:space="preserve">
    <value>Unable to delete the file.</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.DescLabel" xml:space="preserve">
    <value>The user-defined schemes have precedence over the built-in.
A change in the highlighting schemes is visible upon the next restart of #Develop.</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.LoadError" xml:space="preserve">
    <value>Could not load mode definition file.</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.ModifyButton" xml:space="preserve">
    <value>Modify</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.Title" xml:space="preserve">
    <value>Highlighting</value>
  </data>
  <data name="Dialog.Options.TextEditorOptions.EditHighlighting.UserLabel" xml:space="preserve">
    <value>User-defined:</value>
  </data>
  <data name="Dialog.Options.TreeViewOptions.DialogName" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Dialog.Options.TreeViewOptions.SharpDevelopOptionsText" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.ApplicationIcon" xml:space="preserve">
    <value>Application i&amp;con:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.AssemblyName" xml:space="preserve">
    <value>Assembly &amp;name:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.InvalidIconFile" xml:space="preserve">
    <value>{0} is not a valid icon file.</value>
    <comment>Error message displayed when the user tries to set the application's icon to a file that is not an icon.</comment>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.LocalizedStringFileLabel" xml:space="preserve">
    <value>Localized string file:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Manifest" xml:space="preserve">
    <value>Application &amp;manifest:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Manifest.DoNotEmbedManifest" xml:space="preserve">
    <value>Do not embed manifest</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Manifest.EmbedDefault" xml:space="preserve">
    <value>Embed default manifest</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Manifest.ManifestFiles" xml:space="preserve">
    <value>Manifest files</value>
    <comment>File filter description for *.manifest files</comment>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.OutputName" xml:space="preserve">
    <value>Output name:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.OutputType" xml:space="preserve">
    <value>&amp;Output type:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.ProjectFile" xml:space="preserve">
    <value>Project &amp;file:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.ProjectFolder" xml:space="preserve">
    <value>Project folder:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.ProjectInformation" xml:space="preserve">
    <value>Project Information</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.RootNamespace" xml:space="preserve">
    <value>&amp;Root namespace:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.StartupObject" xml:space="preserve">
    <value>&amp;Startup object:</value>
  </data>
  <data name="Dialog.ProjectOptions.ApplicationSettings.Win32Resource" xml:space="preserve">
    <value>Win32 R&amp;esource File:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.Advanced" xml:space="preserve">
    <value>Advanced</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.Auto" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.BaseIntermediateOutputPath" xml:space="preserve">
    <value>Base Intermediate Output Path:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.DebugInfo" xml:space="preserve">
    <value>Debug &amp;Info:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.DLLBaseAddress" xml:space="preserve">
    <value>DLL Base Address:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.ErrorsAndWarnings" xml:space="preserve">
    <value>Errors and Warnings</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.FileAlignment" xml:space="preserve">
    <value>&amp;File Alignment:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.GenerateSerializationAssembly" xml:space="preserve">
    <value>&amp;Generate serialization assembly:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.IntermediateOutputPath" xml:space="preserve">
    <value>Intermediate Output Path:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.OutputPath" xml:space="preserve">
    <value>&amp;Output Path:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.RegisterForCOM" xml:space="preserve">
    <value>&amp;Register for COM Interop</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.SuppressWarnings" xml:space="preserve">
    <value>&amp;Suppress Warnings:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU" xml:space="preserve">
    <value>&amp;Target CPU:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.Any" xml:space="preserve">
    <value>Any processor</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.Itanium" xml:space="preserve">
    <value>Intel 64-bit Itanium processor</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.x64" xml:space="preserve">
    <value>AMD 64-bit processor</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetCPU.x86" xml:space="preserve">
    <value>32-bit Intel-compatible processor</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TargetFramework" xml:space="preserve">
    <value>Target Framework:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TreatWarningsAsErrors" xml:space="preserve">
    <value>Treat Warnings as Errors</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TreatWarningsAsErrors.All" xml:space="preserve">
    <value>A&amp;ll</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TreatWarningsAsErrors.None" xml:space="preserve">
    <value>&amp;None</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.TreatWarningsAsErrors.Specific" xml:space="preserve">
    <value>Sp&amp;ecific Warnings:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.WarningLevel" xml:space="preserve">
    <value>&amp;Warning Level:</value>
  </data>
  <data name="Dialog.ProjectOptions.Build.XmlDocumentationFile" xml:space="preserve">
    <value>&amp;XML documentation:</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildEvents" xml:space="preserve">
    <value>Build Events</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildEvents.PostBuild" xml:space="preserve">
    <value>P&amp;ost-build event command line:</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildEvents.PreBuild" xml:space="preserve">
    <value>P&amp;re-build event command line:</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildEvents.RunPostBuild" xml:space="preserve">
    <value>&amp;Run the post-build event:</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions" xml:space="preserve">
    <value>Compiling</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.AllowUnsafeCode" xml:space="preserve">
    <value>Allow &amp;Unsafe code</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.CheckForOverflow" xml:space="preserve">
    <value>&amp;Check for arithmetic overflow/underflow</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.ConditionalSymbols" xml:space="preserve">
    <value>Con&amp;ditional Compilation Symbols:</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.NoCorlib" xml:space="preserve">
    <value>Do not reference &amp;mscorlib.dll</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.OptimizeCode" xml:space="preserve">
    <value>O&amp;ptimize code</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.RemoveOverflowChecks" xml:space="preserve">
    <value>Remove integer overflow &amp;checks</value>
  </data>
  <data name="Dialog.ProjectOptions.BuildOptions.VBOptionsDefaultValues" xml:space="preserve">
    <value>Default values for VB Options:</value>
  </data>
  <data name="Dialog.ProjectOptions.Configuration" xml:space="preserve">
    <value>&amp;Configuration</value>
  </data>
  <data name="Dialog.ProjectOptions.ConfigurationSpecific" xml:space="preserve">
    <value>Configuration-specific</value>
  </data>
  <data name="Dialog.ProjectOptions.ContinueSwitchConfiguration" xml:space="preserve">
    <value>Changing the configuration will save the current values. Continue?</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.Arguments" xml:space="preserve">
    <value>Co&amp;mmand line arguments:</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartAction" xml:space="preserve">
    <value>Start Action</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartBrowser" xml:space="preserve">
    <value>Start browser in &amp;URL:</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartOptions" xml:space="preserve">
    <value>Start Options</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartProgram" xml:space="preserve">
    <value>Start e&amp;xternal program:</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.StartProject" xml:space="preserve">
    <value>&amp;Start project</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugOptions.WorkingDir" xml:space="preserve">
    <value>&amp;Working directory:</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugSymbolType.Full" xml:space="preserve">
    <value>Full debug information</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugSymbolType.None" xml:space="preserve">
    <value>No debug information</value>
  </data>
  <data name="Dialog.ProjectOptions.DebugSymbolType.PdbOnly" xml:space="preserve">
    <value>Only .pdb files</value>
  </data>
  <data name="Dialog.ProjectOptions.NoPanelsInstalledForProject" xml:space="preserve">
    <value>There are no project options panels installed for this project type.</value>
  </data>
  <data name="Dialog.ProjectOptions.Platform" xml:space="preserve">
    <value>Platform</value>
  </data>
  <data name="Dialog.ProjectOptions.PlatformSpecific" xml:space="preserve">
    <value>Platform-specific</value>
  </data>
  <data name="Dialog.ProjectOptions.PleaseEnterValidNumber" xml:space="preserve">
    <value>Please enter a valid number.</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports" xml:space="preserve">
    <value>Imports</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports.AddImport" xml:space="preserve">
    <value>&amp;Add import</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports.Namespace" xml:space="preserve">
    <value>&amp;Namespace:</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports.RemoveImport" xml:space="preserve">
    <value>&amp;Remove import</value>
  </data>
  <data name="Dialog.ProjectOptions.ProjectImports.Title" xml:space="preserve">
    <value>Project-wide Imports</value>
  </data>
  <data name="Dialog.ProjectOptions.Publish" xml:space="preserve">
    <value>Publish</value>
  </data>
  <data name="Dialog.ProjectOptions.ReferencePaths" xml:space="preserve">
    <value>Reference Paths</value>
  </data>
  <data name="Dialog.ProjectOptions.ReferencePaths.AddPath" xml:space="preserve">
    <value>&amp;Add path</value>
  </data>
  <data name="Dialog.ProjectOptions.RunPostBuildEvent.Always" xml:space="preserve">
    <value>Always</value>
  </data>
  <data name="Dialog.ProjectOptions.RunPostBuildEvent.OnOutputUpdated" xml:space="preserve">
    <value>When the build updates the project output</value>
  </data>
  <data name="Dialog.ProjectOptions.RunPostBuildEvent.OnSuccessfulBuild" xml:space="preserve">
    <value>On successful build</value>
  </data>
  <data name="Dialog.ProjectOptions.SelectFolderTitle" xml:space="preserve">
    <value>Select folder</value>
    <comment>Description for folder selection dialog</comment>
  </data>
  <data name="Dialog.ProjectOptions.Signing" xml:space="preserve">
    <value>Signing</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ChangePassword" xml:space="preserve">
    <value>Change Pass&amp;word...</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ChooseKeyFile" xml:space="preserve">
    <value>Choose a strong name key file:</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ClickOnce" xml:space="preserve">
    <value>ClickOnce signing</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ClickOnceNotSupported" xml:space="preserve">
    <value>ClickOnce signing is currently not supported.</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.ConfirmPassword" xml:space="preserve">
    <value>Con&amp;firm password:</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.EnterPassword" xml:space="preserve">
    <value>&amp;Enter password:</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.KeyName" xml:space="preserve">
    <value>Key file &amp;name:</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.Title" xml:space="preserve">
    <value>Create Strong Name Key</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.CreateKey.UsePassword" xml:space="preserve">
    <value>&amp;Protect my key file with a password</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.DelaySignOnly" xml:space="preserve">
    <value>Dela&amp;y Sign only</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.DelaySignWarning" xml:space="preserve">
    <value>When delay signed, the project will not run or be debuggable.</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.EnterKeyName" xml:space="preserve">
    <value>You have to enter a key name.</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.ErrorCreatingKey" xml:space="preserve">
    <value>There was an error creating the key file.</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.PasswordsDontMatch" xml:space="preserve">
    <value>The entered passwords do not match.</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.PasswordTooShort" xml:space="preserve">
    <value>The password should be at least 6 characters long.</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.SignAssembly" xml:space="preserve">
    <value>Sign the &amp;assembly</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.SNnotFound" xml:space="preserve">
    <value>sn.exe was not found. Make sure the .NET Framework SDK is installed on your computer.</value>
  </data>
  <data name="Dialog.ProjectOptions.Signing.StrongName" xml:space="preserve">
    <value>Strong name signing</value>
  </data>
  <data name="Dialog.ProjectOptions.StorageLocationHelp" xml:space="preserve">
    <value>With the small button in front of each configuration setting, you can choose where a setting is stored.
Configuration-specific means the setting can have a different value in each configuration (Debug/Release).
Platform-specific means the setting can have a different value on each platform.
You can also choose to store the setting in the .user-file instead of the project file, so every developer can use a different value without getting conflicts in source control systems.</value>
  </data>
  <data name="Dialog.ProjectOptions.StoreInUserFile" xml:space="preserve">
    <value>Store in .user-file</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.AddInterfaceToClass" xml:space="preserve">
    <value>Add Interface to Class</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.GeneratedName" xml:space="preserve">
    <value>Generated Name</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.IncludeComments" xml:space="preserve">
    <value>Include Comments</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.InterfaceName" xml:space="preserve">
    <value>Interface Name</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.NewFileName" xml:space="preserve">
    <value>New File Name</value>
  </data>
  <data name="Dialog.Refactoring.ExtractInterface.SelectPublicMembers" xml:space="preserve">
    <value>Select Public Members</value>
  </data>
  <data name="Dialog.Refactoring.IntroduceMethod.CreateNew" xml:space="preserve">
    <value>Create new class:</value>
  </data>
  <data name="Dialog.Refactoring.IntroduceMethod.Description" xml:space="preserve">
    <value>The method cannot be created directly, because no source code of the class is available. Please select a static class where the method will be created as an extension method.</value>
  </data>
  <data name="Dialog.Refactoring.IntroduceMethod.Title" xml:space="preserve">
    <value>Introduce method</value>
  </data>
  <data name="Dialog.Refactoring.IntroduceMethod.UseExisting" xml:space="preserve">
    <value>Use existing class:</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.BrowserTabPage" xml:space="preserve">
    <value>.NET Assembly Browser</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.DialogName" xml:space="preserve">
    <value>Add Reference</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.GacReferencePanel.ChooseSpecificAssemblyVersion" xml:space="preserve">
    <value>Choose specific assembly version</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.GacReferencePanel.ReferenceHeader" xml:space="preserve">
    <value>Reference Name</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.GacReferencePanel.VersionHeader" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.GacTabPage" xml:space="preserve">
    <value>GAC</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.LocationHeader" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ProjectReferencePanel.DirectoryHeader" xml:space="preserve">
    <value>Project Directory</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ProjectReferencePanel.NameHeader" xml:space="preserve">
    <value>Project Name</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ProjectTabPage" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ReferenceHeader" xml:space="preserve">
    <value>Reference Name</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.ReferencesLabel" xml:space="preserve">
    <value>Selected References</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.SelectButton" xml:space="preserve">
    <value>S&amp;elect</value>
  </data>
  <data name="Dialog.SelectReferenceDialog.TypeHeader" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Dialog.ViewGPL.DialogName" xml:space="preserve">
    <value>GNU General Public License</value>
  </data>
  <data name="Dialog.WizardDialog.FinishButton" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="Dialog.WordCountDialog.CharsText" xml:space="preserve">
    <value>Chars</value>
  </data>
  <data name="Dialog.WordCountDialog.DialogName" xml:space="preserve">
    <value>Word Count</value>
  </data>
  <data name="Dialog.WordCountDialog.FileText" xml:space="preserve">
    <value>file</value>
  </data>
  <data name="Dialog.WordCountDialog.IsNotTextFile" xml:space="preserve">
    <value>The current file is not a text file and cannot be counted.</value>
  </data>
  <data name="Dialog.WordCountDialog.Label1Text" xml:space="preserve">
    <value>&amp;Count where</value>
  </data>
  <data name="Dialog.WordCountDialog.LinesText" xml:space="preserve">
    <value>Lines</value>
  </data>
  <data name="Dialog.WordCountDialog.MustBeInProtectedModeWarning" xml:space="preserve">
    <value>You must be in project mode</value>
  </data>
  <data name="Dialog.WordCountDialog.SaveTheFileWarning" xml:space="preserve">
    <value>You must save the file</value>
  </data>
  <data name="Dialog.WordCountDialog.StartButton" xml:space="preserve">
    <value>&amp;Start</value>
  </data>
  <data name="Dialog.WordCountDialog.TotalText" xml:space="preserve">
    <value>total</value>
  </data>
  <data name="Dialog.WordCountDialog.WordsText" xml:space="preserve">
    <value>Words</value>
  </data>
  <data name="Fileutility.CantFindExecutableError" xml:space="preserve">
    <value>Can't find ${Executable} in any of the SDK bin folders.</value>
    <comment>Message for an exception that is thrown if a sdk executable cannot be found.</comment>
  </data>
  <data name="Fileutility.CantFindFileError" xml:space="preserve">
    <value>Can't load ${File}.File not found.</value>
  </data>
  <data name="FileUtilityService.ErrorWhileLoading" xml:space="preserve">
    <value>Error while loading</value>
  </data>
  <data name="FileUtilityService.ErrorWhileSaving" xml:space="preserve">
    <value>Error while saving</value>
  </data>
  <data name="FileUtilityService.FileSizeTooBig" xml:space="preserve">
    <value>The file is too large to be opened.</value>
  </data>
  <data name="FormsDesigner.DesignErrorPanel.ErrorText" xml:space="preserve">
    <value>Please correct all source code errors before designing</value>
  </data>
  <data name="FormsDesigner.DesignTabPages.DesignTabPage" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="FormsDesigner.DesignTabPages.SourceTabPage" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="Global.AbortButtonText" xml:space="preserve">
    <value>Abort</value>
  </data>
  <data name="Global.AddButtonText" xml:space="preserve">
    <value>&amp;Add</value>
  </data>
  <data name="Global.BackButtonText" xml:space="preserve">
    <value>&lt; Back</value>
  </data>
  <data name="Global.BrowseButtonText" xml:space="preserve">
    <value>&amp;Browse...</value>
  </data>
  <data name="Global.BrowseText" xml:space="preserve">
    <value>Browse</value>
    <comment>text for buttons that open a dialog for searching a file/folder</comment>
  </data>
  <data name="Global.CancelButtonText" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Global.ChangeButtonText" xml:space="preserve">
    <value>&amp;Change</value>
  </data>
  <data name="Global.ChooseLocationButtonText" xml:space="preserve">
    <value>Choose location</value>
  </data>
  <data name="Global.CloseButtonText" xml:space="preserve">
    <value>&amp;Close</value>
  </data>
  <data name="Global.CreateButtonText" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Global.Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Global.DeleteButtonText" xml:space="preserve">
    <value>&amp;Delete</value>
  </data>
  <data name="Global.DeselectAllButtonText" xml:space="preserve">
    <value>Unselect All</value>
    <comment>The words "Unselect All" translated into the local language.</comment>
  </data>
  <data name="Global.EditButtonText" xml:space="preserve">
    <value>&amp;Edit</value>
  </data>
  <data name="Global.ErrorText" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Global.FileAlreadyExists" xml:space="preserve">
    <value>The file '{0}' already exists.</value>
  </data>
  <data name="Global.FileName" xml:space="preserve">
    <value>File name</value>
  </data>
  <data name="Global.FinishButtonText" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="Global.FinishedCaptionText" xml:space="preserve">
    <value>Finished</value>
  </data>
  <data name="Global.Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="Global.FontStyle" xml:space="preserve">
    <value>Font Style</value>
  </data>
  <data name="Global.FontStyle.CustomColor" xml:space="preserve">
    <value>Custom</value>
    <comment>Choose custom color</comment>
  </data>
  <data name="Global.FontStyle.SelectFont" xml:space="preserve">
    <value>Select font</value>
  </data>
  <data name="Global.FontStyle.Underline" xml:space="preserve">
    <value>Underline</value>
  </data>
  <data name="Global.HelpButtonText" xml:space="preserve">
    <value>&amp;Help</value>
  </data>
  <data name="Global.ID" xml:space="preserve">
    <value>ID</value>
    <comment>Abbrevation for Identifier</comment>
  </data>
  <data name="Global.IgnoreButtonText" xml:space="preserve">
    <value>Ignore</value>
  </data>
  <data name="Global.LargeIconToolTip" xml:space="preserve">
    <value>Large Icons</value>
  </data>
  <data name="Global.Location.allopenfiles" xml:space="preserve">
    <value>all open files</value>
  </data>
  <data name="Global.Location.currentfile" xml:space="preserve">
    <value>current file</value>
  </data>
  <data name="Global.Location.directories" xml:space="preserve">
    <value>Directories</value>
  </data>
  <data name="Global.Location.wholeproject" xml:space="preserve">
    <value>whole project</value>
  </data>
  <data name="Global.MoveDown" xml:space="preserve">
    <value>Move &amp;Down</value>
  </data>
  <data name="Global.MoveUp" xml:space="preserve">
    <value>Move &amp;Up</value>
  </data>
  <data name="Global.NA" xml:space="preserve">
    <value>N/A</value>
    <comment>Stands for 'Not applicable'</comment>
  </data>
  <data name="Global.Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Global.NextButtonText" xml:space="preserve">
    <value>Next &gt;</value>
  </data>
  <data name="Global.No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Global.OKButtonText" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Global.OpenButtonText" xml:space="preserve">
    <value>&amp;Open</value>
  </data>
  <data name="Global.OptionsLabelText" xml:space="preserve">
    <value>Options</value>
    <comment>The word "Options" translated to a particular language.</comment>
  </data>
  <data name="Global.Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="Global.PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="Global.Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Global.QuestionText" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="Global.ReadOnly" xml:space="preserve">
    <value>readonly</value>
    <comment>The word "readonly" in lowercase.</comment>
  </data>
  <data name="Global.RemoveButtonText" xml:space="preserve">
    <value>&amp;Remove</value>
  </data>
  <data name="Global.RenameButtonText" xml:space="preserve">
    <value>Re&amp;name</value>
  </data>
  <data name="Global.ReplaceButtonText" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="Global.RetryButtonText" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="Global.SelectAllButtonText" xml:space="preserve">
    <value>Select &amp;All</value>
    <comment>selects all items in a list</comment>
  </data>
  <data name="Global.SmallIconToolTip" xml:space="preserve">
    <value>Small Icons</value>
  </data>
  <data name="Global.StartButtonText" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Global.UpdateButtonText" xml:space="preserve">
    <value>&amp;Update</value>
  </data>
  <data name="Global.WarningText" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Global.Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Global.YesToAll" xml:space="preserve">
    <value>Yes to All</value>
  </data>
  <data name="Gui.ProjectBrowser.FileInUseError" xml:space="preserve">
    <value>File or directory name is already in use, choose a different one.</value>
  </data>
  <data name="Gui.ProjectBrowser.IllegalCharactersInFileNameError" xml:space="preserve">
    <value>The file name you have chosen contains illegal characters. Please choose a different file name.</value>
  </data>
  <data name="Gui.ProjectBrowser.Open" xml:space="preserve">
    <value>Open</value>
    <comment>verb for opening an item (usually file)</comment>
  </data>
  <data name="Gui.ProjectBrowser.OpenFolderInExplorer" xml:space="preserve">
    <value>Open Folder in Explorer</value>
    <comment>Command that opens the selected folder in Windows Explorer</comment>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith" xml:space="preserve">
    <value>Open With...</value>
    <comment>Open file with non-default tool</comment>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.AddProgram.DialogTitle" xml:space="preserve">
    <value>Add program</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.AddProgram.DisplayName" xml:space="preserve">
    <value>&amp;Display name:</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.AddProgram.Program" xml:space="preserve">
    <value>&amp;Program:</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.DefaultWindowsApplication" xml:space="preserve">
    <value>Use the default Windows application for this file</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.IconEditor" xml:space="preserve">
    <value>Icon editor</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.ResourceEditor" xml:space="preserve">
    <value>Resource editor</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.TextEditor" xml:space="preserve">
    <value>Text editor</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.TextEditorWithEncoding" xml:space="preserve">
    <value>Text editor (choose encoding)</value>
    <comment>Entry in "open with" menu for explicitly choosing the file encoding when opening a text file</comment>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.WebBrowser" xml:space="preserve">
    <value>Built-in Web Browser</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Bindings.XmlEditor" xml:space="preserve">
    <value>XML editor</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.ChooseProgram" xml:space="preserve">
    <value>Choose the program you want to use to open this file:</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.DialogTitle" xml:space="preserve">
    <value>Open With</value>
  </data>
  <data name="Gui.ProjectBrowser.OpenWith.SetAsDefault" xml:space="preserve">
    <value>Set as Default</value>
  </data>
  <data name="Gui.ProjectBrowser.ShowAllFiles" xml:space="preserve">
    <value>Show all files</value>
  </data>
  <data name="Hornung.ResourceToolkit.CodeCompletion.AddNewDescription" xml:space="preserve">
    <value>Add new string resource to {0}</value>
  </data>
  <data name="Hornung.ResourceToolkit.CodeCompletion.AddNewEntry" xml:space="preserve">
    <value>&lt;Add new&gt;</value>
  </data>
  <data name="Hornung.ResourceToolkit.DeleteAllSelectedResourceKeysQuestion" xml:space="preserve">
    <value>Do you really want to delete all ${Count} selected resource keys from the resource files and all dependent localized resource files permanently?</value>
  </data>
  <data name="Hornung.ResourceToolkit.DeleteSingleResourceKeyQuestion" xml:space="preserve">
    <value>Do you really want to delete the resource key "${Key}" from the resource file "${FileName}" and all dependent localized resource files permanently?</value>
  </data>
  <data name="Hornung.ResourceToolkit.EditStringResourceDialog.Caption" xml:space="preserve">
    <value>Edit string resource</value>
  </data>
  <data name="Hornung.ResourceToolkit.EditStringResourceDialog.DuplicateKey" xml:space="preserve">
    <value>A resource key with this name already exists!</value>
  </data>
  <data name="Hornung.ResourceToolkit.EditStringResourceDialog.KeyIsEmpty" xml:space="preserve">
    <value>Resource key must not be empty!</value>
  </data>
  <data name="Hornung.ResourceToolkit.ErrorProcessingResourceFile" xml:space="preserve">
    <value>An error occurred while processing the resource file '{0}'.</value>
  </data>
  <data name="Hornung.ResourceToolkit.FindMissingResourceKeys" xml:space="preserve">
    <value>Find missing resource keys</value>
  </data>
  <data name="Hornung.ResourceToolkit.FindUnusedResourceKeys" xml:space="preserve">
    <value>Find unused resource keys</value>
  </data>
  <data name="Hornung.ResourceToolkit.Key" xml:space="preserve">
    <value>Key</value>
  </data>
  <data name="Hornung.ResourceToolkit.KeyLabel" xml:space="preserve">
    <value>Resource key:</value>
  </data>
  <data name="Hornung.ResourceToolkit.KeyNotFoundWarning" xml:space="preserve">
    <value>The resource key "{0}" could not be found in file "{1}".</value>
  </data>
  <data name="Hornung.ResourceToolkit.ReferencesToMissingKeys" xml:space="preserve">
    <value>References to missing resource keys</value>
  </data>
  <data name="Hornung.ResourceToolkit.ReferencesToResource" xml:space="preserve">
    <value>References to ${ResourceKey} (in ${ResourceFileName})</value>
  </data>
  <data name="Hornung.ResourceToolkit.RenameKeyDefinitionNotFoundWarning" xml:space="preserve">
    <value>The definition of this resource key could not be found and renamed.</value>
  </data>
  <data name="Hornung.ResourceToolkit.RenameResourceText" xml:space="preserve">
    <value>Enter new resource key name:</value>
  </data>
  <data name="Hornung.ResourceToolkit.ResourceTypeNotSupported" xml:space="preserve">
    <value>The selected resource is not of type 'string' and cannot be edited.</value>
  </data>
  <data name="Hornung.ResourceToolkit.TextEditorContextMenu.AddResource" xml:space="preserve">
    <value>Add this resource</value>
  </data>
  <data name="Hornung.ResourceToolkit.TextEditorContextMenu.EditResource" xml:space="preserve">
    <value>Edit resource</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolsMenuLabel" xml:space="preserve">
    <value>Resource Toolkit</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolTips.KeyNotFound" xml:space="preserve">
    <value>&lt;KEY NOT FOUND&gt;</value>
    <comment>Value to display when a resource key is missing</comment>
  </data>
  <data name="Hornung.ResourceToolkit.ToolTips.PlaceMessage" xml:space="preserve">
    <value>Resource in {0}:</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolTips.TypeMessage" xml:space="preserve">
    <value>Object of type {0}:</value>
  </data>
  <data name="Hornung.ResourceToolkit.ToolTips.UnknownKey" xml:space="preserve">
    <value>&lt;Unknown&gt;</value>
  </data>
  <data name="Hornung.ResourceToolkit.UnusedResourceKeys.HideICSharpCodeCoreHostResourcesTitle" xml:space="preserve">
    <value>Hide ICSharpCode.Core host resources</value>
  </data>
  <data name="Hornung.ResourceToolkit.UnusedResourceKeys.HideICSharpCodeCoreHostResourcesTooltip" xml:space="preserve">
    <value>When selected, resource keys that are contained in the resource file of the ICSharpCode.Core host application are not listed.</value>
  </data>
  <data name="Hornung.ResourceToolkit.UnusedResourceKeys.NotFound" xml:space="preserve">
    <value>No unused resource keys were found in the whole solution.</value>
  </data>
  <data name="Hornung.ResourceToolkit.UnusedResourceKeys.Title" xml:space="preserve">
    <value>Unused resource keys</value>
  </data>
  <data name="Hornung.ResourceToolkit.Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Hornung.ResourceToolkit.ValueLabel" xml:space="preserve">
    <value>Resource value:</value>
  </data>
  <data name="ICSharpCode.AvalonEdit.AddIn.SharpDevelopCompletionWindow.EmptyText" xml:space="preserve">
    <value>Press Ctrl+Space to show items from all namespaces</value>
  </data>
  <data name="ICSharpCode.BooInterpreter" xml:space="preserve">
    <value>Boo Interpreter</value>
    <comment>Title of the Boo Interpreter pad</comment>
  </data>
  <data name="ICSharpCode.BooInterpreter.Debuggee.ErrorDebuggerNotLoaded" xml:space="preserve">
    <value>Error: 'Debugger is not loaded'</value>
  </data>
  <data name="ICSharpCode.BooInterpreter.Debuggee.ErrorIncompatibleDebugger" xml:space="preserve">
    <value>Error: 'Incompatible debugger'</value>
  </data>
  <data name="ICSharpCode.BooInterpreter.Debuggee.ErrorNoProgramDebugged" xml:space="preserve">
    <value>Error: 'No program is being debugged'</value>
  </data>
  <data name="ICSharpCode.BooInterpreter.Debuggee.Title" xml:space="preserve">
    <value>Debuggee</value>
    <comment>Name for program being debugged</comment>
  </data>
  <data name="ICSharpCode.BooInterpreter.Debuggee.ToolTip" xml:space="preserve">
    <value>Runs commands in the debugged progam</value>
  </data>
  <data name="ICSharpCode.Build.CannotFindFxCop" xml:space="preserve">
    <value>SharpDevelop cannot find FxCop. Please select the FxCop installation directory in the SharpDevelop options.</value>
  </data>
  <data name="ICSharpCode.Build.CannotReadFxCopLogFile" xml:space="preserve">
    <value>Cannot read FxCop log file:</value>
  </data>
  <data name="ICSharpCode.Build.MonoIsNotInstalled" xml:space="preserve">
    <value>Mono is not installed.</value>
  </data>
  <data name="ICSharpCode.Build.RunningCodeAnalysis" xml:space="preserve">
    <value>Running Code Analysis...</value>
  </data>
  <data name="ICSharpCode.Build.UnknownTargetMonoFrameworkVersion" xml:space="preserve">
    <value>Unknown Target Mono Framework Version:</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis" xml:space="preserve">
    <value>Code Analysis</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.CheckWithFxCop" xml:space="preserve">
    <value>Check with FxCop</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.DirectoryDoesNotContainFxCop" xml:space="preserve">
    <value>The selected directory does not contain a complete FxCop installation.</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.FindFxCopPath" xml:space="preserve">
    <value>Select FxCop path</value>
    <comment>Button to select the FxCop path</comment>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.FxCopFoundInPath" xml:space="preserve">
    <value>FxCop was found in the following directory:</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.FxCopNotFound" xml:space="preserve">
    <value>FxCop could not be found. Install FxCop and click on 'Select FxCop path' to tell SharpDevelop where you installed FxCop.</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.IdeOptions.FxCopPath" xml:space="preserve">
    <value>FxCop path</value>
    <comment>Title of FxCop path choosing groupbox</comment>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.AddRemoveRuleAssembly" xml:space="preserve">
    <value>Add/Remove rule assembly</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.CannotFindFxCop" xml:space="preserve">
    <value>Cannot find FxCop - Make sure FxCop is installed.</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.ChooseRuleAssemblyDirectory" xml:space="preserve">
    <value>Choose directory containing rule assemblies:</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.Enable" xml:space="preserve">
    <value>&amp;Enable Code Analysis (defines CODE_ANALYSIS constant)</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.LoadingRules" xml:space="preserve">
    <value>Loading available rules...</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.RunOnBuild" xml:space="preserve">
    <value>&amp;Run Code Analysis when compiling (defines CODE_ANALYSIS constant)</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.SpecifyFxCopPath" xml:space="preserve">
    <value>You can specify the path to FxCop in the SharpDevelop options.</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.WarningErrorMixed" xml:space="preserve">
    <value>Mixed</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.ProjectOptions.WarningOrError" xml:space="preserve">
    <value>Warning or Error</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.Rule" xml:space="preserve">
    <value>Rule</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.RunningFxCopOn" xml:space="preserve">
    <value>Running FxCop on</value>
  </data>
  <data name="ICSharpCode.CodeAnalysis.SuppressMessage" xml:space="preserve">
    <value>Suppress message</value>
    <comment>Context menu command to suppress a code analysis warning</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.CodeCovered" xml:space="preserve">
    <value>Code Covered</value>
    <comment>One of the display items that exists in the Code Coverage Options Panel.  Selecting this one allows the user to configure the colours for the code that has been covered by the unit tests.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.CodeNotCovered" xml:space="preserve">
    <value>Code Not Covered</value>
    <comment>One of the display items that exists in the Code Coverage Options Panel.  Selecting this one allows the user to configure the colours for the code that has NOT been covered by the unit tests.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.Column" xml:space="preserve">
    <value>Column</value>
    <comment>List view column header holding the code coverage start column number.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.DisplayOptions" xml:space="preserve">
    <value>Display Options</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.EndColumn" xml:space="preserve">
    <value>End Column</value>
    <comment>List view column header containing the end column number for the code coverage.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.EndLine" xml:space="preserve">
    <value>End Line</value>
    <comment>List view column header containing the code coverage end line.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.Line" xml:space="preserve">
    <value>Line</value>
    <comment>Code coverage line number column header for the list view.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.NCoverNotFound" xml:space="preserve">
    <value>Unable to locate the NCover console application.

If NCover is installed, please specify the location of the application in the Code Coverage options.</value>
    <comment>Error message displayed when the NCover console application cannot be found.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.NoCodeCoverageResultsGenerated" xml:space="preserve">
    <value>No code coverage results file generated:</value>
    <comment>Error message added to error list pad when the code coverage results file was not generated.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.CodeCoverageColoursGroupBoxText" xml:space="preserve">
    <value>Code Coverage Colors</value>
    <comment>Group box title containing the text colors to use for code coverage highlighting.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.CommandLineLabel" xml:space="preserve">
    <value>&amp;Command:</value>
    <comment>Label indicating the NCover command line.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.DisplayItemsLabel" xml:space="preserve">
    <value>&amp;Display Items:</value>
    <comment>Code coverage options label that indicates the different text display items that can have their colours configured.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.ItemBackgroundLabel" xml:space="preserve">
    <value>Item bac&amp;kground:</value>
    <comment>Label for the code coverage text background colour.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.ItemForegroundLabel" xml:space="preserve">
    <value>Item fo&amp;reground:</value>
    <comment>Label for the code coverage item's foreground colour.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.NCoverConfigurationGroupBoxText" xml:space="preserve">
    <value>NCover Configuration</value>
    <comment>Code coverage options panel.  Title of the group box containing NCover configuration options.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.OptionsPanel.SampleText" xml:space="preserve">
    <value>AaBbCcXxYyZz</value>
    <comment>Sample text that is displayed when showing the code coverage colours selected.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.ProjectOptionsPanel.AssemblyListLabel" xml:space="preserve">
    <value>&amp;Assemblies to watch:</value>
    <comment>Label for assembly names that will be watched whilst running code coverage.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.ProjectOptionsPanel.ExcludeAttributes" xml:space="preserve">
    <value>Excluded Attributes</value>
    <comment>Attributes used to exclude types from code coverage</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.ProjectOptionsPanel.ExcludeListLabel" xml:space="preserve">
    <value>Exclude</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ProjectOptionsPanel.IncludeListLabel" xml:space="preserve">
    <value>Include</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.RunningCodeCoverage" xml:space="preserve">
    <value>Running code coverage...</value>
    <comment>First line of text sent to output window when running code coverage.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.RunTestsWithCodeCoverage" xml:space="preserve">
    <value>Run tests with code coverage</value>
    <comment>Right menu option when selecting a Unit test tree node.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.RunWithCodeCoverage" xml:space="preserve">
    <value>Run with code coverage</value>
    <comment>Right click menu to run tests with code coverage - displayed when right clicking a test fixture or test method in the source code.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.ShowCoverage" xml:space="preserve">
    <value>Show Code Co&amp;verage</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ShowSourceCode" xml:space="preserve">
    <value>Show Source Code</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ShowVisitCount" xml:space="preserve">
    <value>Show Visit Count</value>
  </data>
  <data name="ICSharpCode.CodeCoverage.ToggleCodeCoverage" xml:space="preserve">
    <value>Toggle Code Coverage</value>
    <comment>Tooltip for button that shows/hides code coverage highlighting in the source code.</comment>
  </data>
  <data name="ICSharpCode.CodeCoverage.VisitCount" xml:space="preserve">
    <value>Visit Count</value>
    <comment>Column header in code coverage list view which indicates how many times a particular line of code was visited when running the tests.</comment>
  </data>
  <data name="ICSharpCode.ConsolePad.GotoProjectItem" xml:space="preserve">
    <value>Change to project directory</value>
  </data>
  <data name="ICSharpCode.ConsolePad.GotoSdkItem" xml:space="preserve">
    <value>Change to SDK directory</value>
  </data>
  <data name="ICSharpCode.ConsolePad.PadName" xml:space="preserve">
    <value>Console</value>
  </data>
  <data name="ICSharpCode.Core.Services.ErrorDialogs.DescriptionLabel" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ICSharpCode.Core.Services.ErrorDialogs.ExceptionGotDescription" xml:space="preserve">
    <value>Exception got</value>
  </data>
  <data name="ICSharpCode.Core.Services.ErrorDialogs.ShowExceptionButton" xml:space="preserve">
    <value>Show Exception</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.AdditionalOptions" xml:space="preserve">
    <value>Additional options</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker" xml:space="preserve">
    <value>Linker</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.AdditionalLibs" xml:space="preserve">
    <value>Link additional files</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.AddModule" xml:space="preserve">
    <value>Link specified .NET modules</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.GenerateDebugInfo" xml:space="preserve">
    <value>Generate debugging info</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.Library" xml:space="preserve">
    <value>Library files locations</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Linker.ManagedResourceFile" xml:space="preserve">
    <value>Embed .NET resource file</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor" xml:space="preserve">
    <value>Preprocessor</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor.Definitions" xml:space="preserve">
    <value>Define following preprocessor symbols</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor.Includes" xml:space="preserve">
    <value>Header files locations</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor.UndefineAll" xml:space="preserve">
    <value>Undefine all defined preprocessor symbols</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.Preprocessor.Undefinitions" xml:space="preserve">
    <value>Undefine following preprocessor symbols</value>
  </data>
  <data name="ICSharpCode.CppBinding.ProjectOptions.SymbolLabel" xml:space="preserve">
    <value>Symbol</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.BinaryResourceFilesFileAssozisation" xml:space="preserve">
    <value>.NET Resource File (binary)</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.CSharpSourceFileAssozisation" xml:space="preserve">
    <value>C# Source File</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.JavaSourceFileAssozisation" xml:space="preserve">
    <value>Java Source File</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.ResXResourceFilesFileAssozisation" xml:space="preserve">
    <value>.NET Resource File</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.SolutionFileAssozisation" xml:space="preserve">
    <value>SharpDevelop Solution</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.VBNetSourceFileAssozisation" xml:space="preserve">
    <value>VB.NET Source File</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.XmlFileAssozisation" xml:space="preserve">
    <value>XML Document</value>
  </data>
  <data name="ICSharpCode.FiletypeRegisterer.XMLFormFileAssozisation" xml:space="preserve">
    <value>#Develop XML Form</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.NAntExeNotFoundMessage" xml:space="preserve">
    <value>Unable to find NAnt '{0}'.

Please configure the NAnt executable's location in the SharpDevelop Options.</value>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.NAntStoppedMessage" xml:space="preserve">
    <value>NAnt build stopped.</value>
    <comment>Message sent to Output window after the NAnt process has been successfully stopped.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.NoBuildFileErrorText" xml:space="preserve">
    <value>Project does not contain a '.build' file.</value>
    <comment>Error message reported to the user when they attempt to run NAnt when there is no .build file in the SharpDevelop project.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.RunningNAntMessage" xml:space="preserve">
    <value>Running NAnt.</value>
    <comment>Message sent to the Output window indicating that the NAnt build is about to be started/run.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.AbstractRunNAntCommand.TerminateNAntQuestion" xml:space="preserve">
    <value>This will terminate the NAnt process.  Are you sure?</value>
    <comment>Message displayed to the user if they select the "Stop NAnt" menu option.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.CreateBuildFileMenuLabel" xml:space="preserve">
    <value>Create &amp;Build File</value>
    <comment>Menu option to create a NAnt build file.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.GotoDefinitionMenuLabel" xml:space="preserve">
    <value>&amp;Goto Definition</value>
    <comment>NAnt pad right click menu option which will open up the .build file and put the cursor on the specified NAnt target.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.GotoErrorMenuLabel" xml:space="preserve">
    <value>&amp;Goto Error</value>
    <comment>NAnt pad right click menu option - when an error tree node is selected the build file is opened up and the cursor is moved to the error.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.ArgumentsLabel" xml:space="preserve">
    <value>&amp;Arguments</value>
    <comment>Label for the NAnt command line arguments text box.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.BuildFileGenerationGroupBoxName" xml:space="preserve">
    <value>Build File Generation</value>
    <comment>Options panel.  Name of the group containing NAnt build file generation configuration.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.CommandLabel" xml:space="preserve">
    <value>&amp;Command</value>
    <comment>Label for the NAnt command line textbox.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.DebugLabel" xml:space="preserve">
    <value>&amp;Debug</value>
    <comment>Checkbox label for NAnt's "debug" command line option.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.NAntConfigGroupBoxName" xml:space="preserve">
    <value>NAnt Configuration</value>
    <comment>Options panel.  Group box for NAnt config options.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.NAntVersionLabel" xml:space="preserve">
    <value>NAnt &amp;Version</value>
    <comment>Label for the drop down list containing NAnt version numbers.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.QuietLabel" xml:space="preserve">
    <value>&amp;Quiet</value>
    <comment>Label for the NAnt "quiet" option checkbox.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.ShowLogoLabel" xml:space="preserve">
    <value>Show &amp;Logo</value>
    <comment>Check box text for NAnt's show logo command line option.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntAddInOptionPanel.VerboseLabel" xml:space="preserve">
    <value>Ver&amp;bose</value>
    <comment>Checkbox text for NAnt's "verbose" command line option.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntPadContent.NAntPropertiesToolTip" xml:space="preserve">
    <value>Enter NAnt properties.</value>
    <comment>Text tooltip shown when the user moves the mouse over the TextBox at the bottom of the NAnt pad.  This area is used to enter ad hoc command line options or properties when running NAnt (e.g. "-D:optimize".</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntPadContent.RefreshCommandBarButtonText" xml:space="preserve">
    <value>Reloads the build files</value>
    <comment>Tooltip for the Refresh button in the NAnt pad.  Refreshes the pad's view from the build files in the combine.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntPadContent.RunCommandBarButtonText" xml:space="preserve">
    <value>Runs the selected target</value>
    <comment>Tooltip text displayed when the user moves the mouse over the NAnt pad's run button.  The button runs the NAnt target selected in the tree view.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.NAntPadContent.StopCommandBarButtonText" xml:space="preserve">
    <value>Stops the current build</value>
    <comment>Tooltip for the NAnt pad's stop button.  Will stop the currently running build.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.ProcessRunner.NoProcessRunningErrorText" xml:space="preserve">
    <value>No process running.</value>
    <comment>Attempted to wait for a process to finish but the process is not running error message.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.RunCleanTargetMenuLabel" xml:space="preserve">
    <value>Run &amp;Clean Target</value>
    <comment>Menu option to run NAnt to call the build file's "clean" target.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.RunDefaultTargetMenuLabel" xml:space="preserve">
    <value>Run Default &amp;Target</value>
    <comment>Menu option that runs NAnt to build the build file's default target.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.RunTargetMenuLabel" xml:space="preserve">
    <value>Run &amp;Target</value>
    <comment>NAnt pad right click menu option to run the selected NAnt target.</comment>
  </data>
  <data name="ICSharpCode.NAntAddIn.StopNAntMenuLabel" xml:space="preserve">
    <value>&amp;Stop NAnt</value>
    <comment>Menu option to stop the currently running NAnt build.</comment>
  </data>
  <data name="ICSharpCode.NUnitPad.NUnitPadContent.PadName" xml:space="preserve">
    <value>Unit Tests</value>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.AllLanguages" xml:space="preserve">
    <value>All</value>
    <comment>Drop down list option indicating "All" the languages should be returned.</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.DialogName" xml:space="preserve">
    <value>Insert PInvoke Signature</value>
    <comment>Insert PInvoke signature dialog title.</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.FindButtonText" xml:space="preserve">
    <value>Find</value>
    <comment>Find button text.  Finds the matching pinvoke signature for the given search criteria.</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.FunctionNameLabel" xml:space="preserve">
    <value>Function:</value>
    <comment>Label for drop down list of PInvoke/Dll methods/functions (e.g. MessageBeep, CreateProcess).</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.InsertButtonText" xml:space="preserve">
    <value>Insert</value>
    <comment>Insert button text.  Inserts pinvoke signature into source code.</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.LanguageLabel" xml:space="preserve">
    <value>Language:</value>
    <comment>Label for the drop down list of source code languages (e.g. C#, VB).</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.ModuleNameLabel" xml:space="preserve">
    <value>Module:</value>
    <comment>Label for drop down list of modules/dlls (e.g. user32)</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.MoreInfoLinkLabel" xml:space="preserve">
    <value>More info</value>
    <comment>Hyperlink label that the user can click to get "more information" on a particular pinvoke signature.</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.NoSignatureFoundForLanguage" xml:space="preserve">
    <value>No signature found for language '{0}'.</value>
    <comment>Error message returned when no p-invoke signatures found for the particular language (C# or VB).</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesForm.NoSignaturesFound" xml:space="preserve">
    <value>No signatures found.</value>
    <comment>Error message indicating that no P-Invoke signatures were found for specified search criteria.</comment>
  </data>
  <data name="ICSharpCode.PInvokeAddIn.InsertPInvokeSignaturesMenuLabel" xml:space="preserve">
    <value>Insert PInvoke signatures...</value>
    <comment>Menu option that shows the "Insert PInvoke signatures" dialog.</comment>
  </data>
  <data name="ICSharpCode.PythonBinding.ConvertCSharpProjectToPythonProject" xml:space="preserve">
    <value>From C# to Python</value>
  </data>
  <data name="ICSharpCode.PythonBinding.ConvertVBNetProjectToPythonProject" xml:space="preserve">
    <value>From VB.NET to Python</value>
  </data>
  <data name="ICSharpCode.PythonBinding.PythonConsole" xml:space="preserve">
    <value>Python Console</value>
    <comment>interactive python interpreter</comment>
  </data>
  <data name="ICSharpCode.PythonBinding.PythonFiles" xml:space="preserve">
    <value>Python Files</value>
    <comment>file filter for *.py files</comment>
  </data>
  <data name="ICSharpCode.PythonBinding.PythonProjectFiles" xml:space="preserve">
    <value>Python Project Files</value>
    <comment>file filter for *.pyproj files</comment>
  </data>
  <data name="ICSharpCode.PythonBinding.SendLineToPythonConsole" xml:space="preserve">
    <value>Send Line to Python Console</value>
    <comment>Sends the line under the cursor in the text editor to the IronPython console window.</comment>
  </data>
  <data name="ICSharpCode.PythonBinding.SendSelectedTextToPythonConsole" xml:space="preserve">
    <value>Send to Python Console</value>
  </data>
  <data name="ICSharpCode.PythonBinding.UnknownTypeName" xml:space="preserve">
    <value>Could not find type '{0}'. Are you missing an assembly reference?</value>
  </data>
  <data name="ICSharpCode.Refactoring.NoClassOrOverridableSymbolUnderCursorError" xml:space="preserve">
    <value>The selected element is not a class or overridable member, so no derived symbols can be shown.</value>
    <comment>Error message when using 'Search&gt;Find Derived Symbols' when it isn't applicable.</comment>
  </data>
  <data name="ICSharpCode.RubyBinding.SendLineToRubyConsole" xml:space="preserve">
    <value>Send Line to Ruby Console</value>
  </data>
  <data name="ICSharpCode.RubyBinding.SendSelectedTextToRubyConsole" xml:space="preserve">
    <value>Send to Ruby Console</value>
  </data>
  <data name="ICSharpCode.Services.FileUtilityService.CantLoadFileStandardText" xml:space="preserve">
    <value>Can't load file ${FileNameWithoutPath} under ${Path}.
Check the file permission and the existence of that file.</value>
  </data>
  <data name="ICSharpCode.Services.FileUtilityService.CantSaveFileStandardText" xml:space="preserve">
    <value>Can't save file ${FileNameWithoutPath} under ${Path}.
Choose another file name or check if the directory exists and that
you have write permission in that path and file. (maybe a write protection problem?)
			</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.BrowserDisplayBinding.Browser" xml:space="preserve">
    <value>Browser</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.AbstractClass" xml:space="preserve">
    <value>Abstract class overridings</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.AbstractClass.Hint" xml:space="preserve">
    <value>Choose abstract class to override</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.Constructor" xml:space="preserve">
    <value>Constructor</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.Constructor.Hint" xml:space="preserve">
    <value>Choose fields to initialize by constructor</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.EventOnXXX" xml:space="preserve">
    <value>Event OnXXX methods</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.EventOnXXX.Hint" xml:space="preserve">
    <value>Choose events to generate OnXXX methods</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.GenerateEqualsAndGetHashCode" xml:space="preserve">
    <value>Generate Equals and GetHashCode methods</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.Getter" xml:space="preserve">
    <value>Getter</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.Getter.Hint" xml:space="preserve">
    <value>Choose fields to generate getters</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.GetterAndSetter" xml:space="preserve">
    <value>Getter and Setter</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.GetterAndSetter.Hint" xml:space="preserve">
    <value>Choose fields to generate getters and setters</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.ImplementInterface" xml:space="preserve">
    <value>Interface implementation</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.ImplementInterface.Hint" xml:space="preserve">
    <value>Choose interfaces to implement</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.OverrideMethods" xml:space="preserve">
    <value>Override methods</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.OverrideMethods.Hint" xml:space="preserve">
    <value>Choose methods to override</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.OverrideProperties" xml:space="preserve">
    <value>Override properties</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.OverrideProperties.Hint" xml:space="preserve">
    <value>Choose properties to override</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.Setter" xml:space="preserve">
    <value>Setter</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.Setter.Hint" xml:space="preserve">
    <value>Choose fields to generate setters</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.ToString" xml:space="preserve">
    <value>Generate default ToString() method</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.CodeGenerator.ToString.Hint" xml:space="preserve">
    <value>Choose Properties to include in the description</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.CharpConvertProjectToVB" xml:space="preserve">
    <value>From C# to VB.NET</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.DebugItem" xml:space="preserve">
    <value>Debug layout</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.DefaultItem" xml:space="preserve">
    <value>Default layout</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.EditItem" xml:space="preserve">
    <value>&lt;Edit&gt;</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.EditLayouts.AddLayout" xml:space="preserve">
    <value>Add layout</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.EditLayouts.Label" xml:space="preserve">
    <value>Edit the list of user-defined layouts:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.EditLayouts.Title" xml:space="preserve">
    <value>Edit layouts</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.PlainItem" xml:space="preserve">
    <value>Plain layout</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.ResetToDefaultItem" xml:space="preserve">
    <value>&lt;Reset to defaults&gt;</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand.ResetToDefaultsQuestion" xml:space="preserve">
    <value>Are you sure that you want to reset the layout configuration ?
Note: This doesn't affect own custom layouts.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert" xml:space="preserve">
    <value>Convert</value>
    <comment>Menu item in project conctext menu
Subitems:
 Convert to VB
 Convert to c#</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ConversionComplete" xml:space="preserve">
    <value>Conversion complete.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ConversionResults" xml:space="preserve">
    <value>Conversion Results</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ConverterErrorCount" xml:space="preserve">
    <value>${ErrorCount} error(s) converting ${FileName}:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.CorrectSourceCodeErrors" xml:space="preserve">
    <value>Correct source code errors first (only correct source code would convert).</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.IsNotConverted" xml:space="preserve">
    <value>${FileName} is not converted:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ParserErrorCount" xml:space="preserve">
    <value>Parser found ${ErrorCount} error(s)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.ProjectConverter" xml:space="preserve">
    <value>SharpDevelop Project Converter</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.SourceDirectory" xml:space="preserve">
    <value>Source directory</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.TargetAlreadyExists" xml:space="preserve">
    <value>{0} already exists, cannot convert.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Convert.TargetDirectory" xml:space="preserve">
    <value>Target directory</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ConvertCommand.FinishedMessage" xml:space="preserve">
    <value>Project conversion has been successfully finished. You can find the converted project at this location:</value>
    <comment>Message appears after a project has been successfully converted.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ConvertCSharpProjectToBoo" xml:space="preserve">
    <value>From C# to Boo</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ConvertVBNetProjectToBoo" xml:space="preserve">
    <value>From VB.NET to Boo</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.OpenCombine.InvalidProjectOrCombine" xml:space="preserve">
    <value>Can't open file '${FileName}'. It is no valid solution or project file.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.OpenCombine.SolutionDoesNotContainProject" xml:space="preserve">
    <value>SharpDevelop loaded the solution '${SolutionName}', but it does not contain the project '${ProjectName}'.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.OpenCombine.SolutionDoesNotContainProject.AddProjectToSolution" xml:space="preserve">
    <value>Add '${ProjectName}' to '${SolutionName}'.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.OpenCombine.SolutionDoesNotContainProject.CreateNewSolution" xml:space="preserve">
    <value>Create new solution for '${ProjectName}'.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Print.CantPrintWindowContentError" xml:space="preserve">
    <value>Can't print this window content.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.Print.CreatePrintDocumentError" xml:space="preserve">
    <value>Couldn't create PrintDocument</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.AddFilesToProject.FileIsReadOnly" xml:space="preserve">
    <value>A write protected file with this name already exists at this location.</value>
    <comment>Appears when the user tries to add a file to the project that already exists and is write protected.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.NoBackendForProjectType" xml:space="preserve">
    <value>No backend for project type installed.</value>
    <comment>Project browser node text for unknown project types.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.ProjectFileNotFound" xml:space="preserve">
    <value>The project file cannot be found.</value>
    <comment>Project browser node text for missing project files.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.ReferencesNodeText" xml:space="preserve">
    <value>References</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.RefreshWebReference.ReadServiceDescriptionError" xml:space="preserve">
    <value>Unable to read web service description.  Url='{0}'</value>
    <comment>Error message displayed when the user tries to refresh the web service proxy code, but for some reason the server hosting the web service is unavailable.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.SolutionItemsNodeText" xml:space="preserve">
    <value>Solution Items</value>
    <comment>Folder containing files associated with the solution</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ProjectBrowser.SolutionNodeText" xml:space="preserve">
    <value>Solution</value>
    <comment>Text of root node in project browser</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ReloadFile.FileDeletedMessage" xml:space="preserve">
    <value>The file can not be found anymore.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.ReloadFile.ReloadFileQuestion" xml:space="preserve">
    <value>Are you sure that you want to reload the file ?
All changes get lost.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.RunCompile.LanguageBindingCantCompileFileError" xml:space="preserve">
    <value>Language binding ${LanguageBinding} can't compile ${FileName}.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.SaveFile.FileSaved" xml:space="preserve">
    <value>File saved</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.SaveFile.InvalidFileNameError" xml:space="preserve">
    <value>File name '${FileName}' is invalid.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.SaveFileAs.FileSavedCaption" xml:space="preserve">
    <value>File Saved</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.TabStrip.NavigateToFileInProjectBrowser" xml:space="preserve">
    <value>Navigate to file in project browser</value>
    <comment>From tab strip (tabs above editor), allows to navigate (expand and scroll) to given file in project browser (i.e. solution explorer)</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Commands.VBConvertProjectToCSharp" xml:space="preserve">
    <value>From VB.NET to C#</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.CodeCompletionData.OverloadsCounter" xml:space="preserve">
    <value>(+${NumOverloads} overloads)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.InsightWindow.NumberOfText" xml:space="preserve">
    <value>${CurrentMethodNumber} of ${NumberOfTotalMethods}</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.TextEditorDisplayBinding.FileAlteredMessage" xml:space="preserve">
    <value>The file
${File}
has been changed externally do you want to reload it?</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.IncrementalSearch.ForwardsSearchStatusBarMessage" xml:space="preserve">
    <value>Incremental Search:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.IncrementalSearch.NotFoundStatusBarMessage" xml:space="preserve">
    <value>(not found)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.IncrementalSearch.PassedEndOfDocumentStatusBarMessage" xml:space="preserve">
    <value>(passed end of document)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.DefaultEditor.IncrementalSearch.ReverseSearchStatusBarMessage" xml:space="preserve">
    <value>Reverse Incremental Search:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ErrorLoadingCodeCompletionInformation" xml:space="preserve">
    <value>Error loading code-completion information for ${Assembly} from ${Filename}:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.CopyToClipboard" xml:space="preserve">
    <value>Copy error message to clipboard</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.ExitSharpDevelop" xml:space="preserve">
    <value>Exit SharpDevelop</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.HelpText1" xml:space="preserve">
    <value>An unhandled exception has occurred in SharpDevelop. This is unexpected and we'd ask you to help us improve SharpDevelop by reporting this error to the SharpDevelop team.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.HelpText2" xml:space="preserve">
    <value>How to report errors efficiently: We have set up a Web-based forum to report and track errors that are reported by users of SharpDevelop. To minimize necessary questions by the team members, in addition to providing the error message that is copied to the clipboard for easier pasting in the error report, we ask that you provide us with an as detailed as possible step-by-step procedure to reproduce this bug.</value>
    <comment>When translating this message, add a notice that error reports should be done in English.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.QuitWarning" xml:space="preserve">
    <value>Do you really want to quit SharpDevelop? Unsaved changes will be lost!</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.ReportError" xml:space="preserve">
    <value>Report Error to SharpDevelop Team</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.ThankYouMsg" xml:space="preserve">
    <value>Thank you for helping make SharpDevelop a better program for everyone!</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.ExceptionBox.Title" xml:space="preserve">
    <value>Unhandled exception has occured</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.CantDeserializeFormError" xml:space="preserve">
    <value>Can't deserialize form. Possible reason: Initialize component method was changed manually.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.DesignPanel.CantCreateRootDesignerError" xml:space="preserve">
    <value>Can't create root designer for component '${RootComponent}'.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.DesignPanel.RootDesignerNotWindowsFormsError" xml:space="preserve">
    <value>Root designer does not support Windows Forms view technology.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.ErrorLoadingDesigner" xml:space="preserve">
    <value>Error loading designer:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.Components.Assembly" xml:space="preserve">
    <value>Assembly</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.Components.Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.Components.Namespace" xml:space="preserve">
    <value>Namespace</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.ComponentsToAddLabel" xml:space="preserve">
    <value>C&amp;omponents to add</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.CustomTabPage" xml:space="preserve">
    <value>Custom</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.DialogName" xml:space="preserve">
    <value>Add Components</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.EnterValidFilename" xml:space="preserve">
    <value>Please enter a valid file name.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.FileIsNotAssembly" xml:space="preserve">
    <value>Please enter the file name of a valid .NET assembly.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.GAC.Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.GACTabPage" xml:space="preserve">
    <value>GAC</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponents.NoComponentsFound" xml:space="preserve">
    <value>The assembly ${Name} does not contain any components.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.AddSidebarComponentsFileNameLabel" xml:space="preserve">
    <value>&amp;File Name</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.AddComponentsButton" xml:space="preserve">
    <value>&amp;Add Components</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.Assembly" xml:space="preserve">
    <value>Assembly</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.DialogName" xml:space="preserve">
    <value>Configure Sidebar</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.Namespace" xml:space="preserve">
    <value>Namespace</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.NewButton" xml:space="preserve">
    <value>&amp;New</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSideBarDialog.RemoveCategoryQuestion" xml:space="preserve">
    <value>Are you sure to remove this category?</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.RemoveComponentsButton" xml:space="preserve">
    <value>Re&amp;move Components</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSideBarDialog.RemoveComponentsQuestion" xml:space="preserve">
    <value>Are you sure to remove the selected components from the category?</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ConfigureSidebarDialog.RenameButton" xml:space="preserve">
    <value>R&amp;ename</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.ImportLocalResourceButton" xml:space="preserve">
    <value>Import...</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.LocalResourceButton" xml:space="preserve">
    <value>Local resource</value>
    <comment>Text of the radio button to select a local resource (which will be stored in the resource file of the form being designed)</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.NoResourceButton" xml:space="preserve">
    <value>None</value>
    <comment>Text of radio button to select no resource</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.Preview" xml:space="preserve">
    <value>Preview</value>
    <comment>Title of the image preview box in the image resource editor dialog</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.ProjectResourceButton" xml:space="preserve">
    <value>Project resource</value>
    <comment>Text of radio button to select a project resource (which is stored in a resource file in the current project)</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ImageResourceEditor.Title" xml:space="preserve">
    <value>Select resource</value>
    <comment>Title of a dialog in the Windows.Forms designer that allows selecting a resource for an image property</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GeneralOptionsPanel.GeneratedCodeGroupBox" xml:space="preserve">
    <value>Generated code</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GeneralOptionsPanel.InitializeComponentesReadOnlyCheckBox" xml:space="preserve">
    <value>mark InitializeComponents method in code view as readonly</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GeneralOptionsPanel.PanelName" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GenerateVisualStudioStyleEventHandlers" xml:space="preserve">
    <value>Generate Visual Studio Style Event Handlers</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.GridPropertiesGroupBox" xml:space="preserve">
    <value>Grid Properties</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.HeightLabel" xml:space="preserve">
    <value>&amp;Height</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.InPlaceEditCheckBox" xml:space="preserve">
    <value>Enable in-place editing of ToolStrips</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.OptimizedCodeGenerationCheckBox" xml:space="preserve">
    <value>Use optimized code generation</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.PanelName" xml:space="preserve">
    <value>Grid Options</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.PropertyGridGroupBox" xml:space="preserve">
    <value>Property pad settings</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.PropertyGridSortCheckBox" xml:space="preserve">
    <value>Sort properties alphabetically</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.ShowGridComboBox" xml:space="preserve">
    <value>&amp;Show Grid</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SmartTagAutoShowCheckBox" xml:space="preserve">
    <value>Automatically open Smart Tags</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SmartTagsCheckBox" xml:space="preserve">
    <value>Use Smart Tags</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SnapLinesRadioButton" xml:space="preserve">
    <value>Snap Lines</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SnapModeGroupBox" xml:space="preserve">
    <value>Align Mode</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SnapToGridComboBox" xml:space="preserve">
    <value>S&amp;nap to Grid</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.SnapToGridRadioButton" xml:space="preserve">
    <value>Snap to Grid</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.GridOptionsPanel.WidthLabel" xml:space="preserve">
    <value>&amp;Width</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.InsertTodoCommentInEventHandlers" xml:space="preserve">
    <value>Insert "TODO" comment in new event handlers</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.AssignmentRadioButton" xml:space="preserve">
    <value>Property assignment (fast for small number of properties, but scales poorly for large numbers of properties)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.DefaultLocalizationModel" xml:space="preserve">
    <value>Default localization model</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.KeepModelCheckBox" xml:space="preserve">
    <value>Leave localization model of existing forms unchanged</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.PanelName" xml:space="preserve">
    <value>Localization Model</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.LocalizationModelOptionsPanel.ReflectionRadioButton" xml:space="preserve">
    <value>Property reflection (slower at runtime for few properties, but scales better for large numbers of properties, especially with many default values)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.OptionPanels.PanelName" xml:space="preserve">
    <value>Windows Forms Designer</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.RenameCategoryDialog.CategoryNameLabel" xml:space="preserve">
    <value>&amp;Category Name</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.RenameCategoryDialog.DuplicateNameError" xml:space="preserve">
    <value>Duplicate name, please choose another one.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.RenameCategoryDialog.NewCategoryDialogName" xml:space="preserve">
    <value>New Category</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.RenameCategoryDialog.RenameCategoryDialogName" xml:space="preserve">
    <value>Rename Category</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Gui.ShowComponentsButton" xml:space="preserve">
    <value>&amp;Show Components</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Hosts.DefaultDesignerHost.CyclicDependencyError" xml:space="preserve">
    <value>You're trying to add a component which will result into a cyclic dependency.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.Hosts.DefaultDesignerHost.ExceptionDuringComponentCreationError" xml:space="preserve">
    <value>Exception while creating the component for the Forms Designer (a component has thrown an exception in the constructor).
THIS DOES NOT AFFECT THE SOURCE CODE.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.LoadErrorCheckSourceCodeForErrors" xml:space="preserve">
    <value>Failed to load designer. Check the source code for syntax errors and check if all references are available.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.ToolboxProvider.CantLoadSidbarComponentLibraryWarning" xml:space="preserve">
    <value>Can't load side bar component library.
No Windows Forms components will be avaiable, please configure the side bar manually.
(right click on a side bar category-&gt;Customize SideBar)</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.FormDesigner.ToolboxProvider.CustomComponents" xml:space="preserve">
    <value>Custom Components</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Components.BooleanTypeConverter.FalseString" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Components.BooleanTypeConverter.TrueString" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.BackButtonTooltip" xml:space="preserve">
    <value>Back</value>
    <comment>Add web reference back button tooltip.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.BindingProperty" xml:space="preserve">
    <value>Binding</value>
    <comment>Property name for a web service port binding.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.DialogTitle" xml:space="preserve">
    <value>Add Web Reference</value>
    <comment>Title of the Add Web Reference dialog.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.DocumentationProperty" xml:space="preserve">
    <value>Documentation</value>
    <comment>Property name displayed next to the web service documentation text.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ForwardButtonTooltip" xml:space="preserve">
    <value>Forward</value>
    <comment>Tooltip for the browser forward button.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.GoButtonTooltip" xml:space="preserve">
    <value>Go</value>
    <comment>Tooltip for browser's go button.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.InvalidNamespaceError" xml:space="preserve">
    <value>The namespace contains invalid characters.  A namespace can only contain letters, digits or underscores.</value>
    <comment>Shown to the user if they attempt to create a web reference where the namespace has invalid characters.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.InvalidReferenceNameError" xml:space="preserve">
    <value>Reference name contains invalid characters.</value>
    <comment>Error message shown when the web reference name entered by the user is invalid.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.NamespaceLabel" xml:space="preserve">
    <value>&amp;Namespace:</value>
    <comment>Label next to the namespace text box that will be used when generating the web proxy code.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ParametersProperty" xml:space="preserve">
    <value>Parameters</value>
    <comment>Text displayed next to web service parameters when the user selects the web service node.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.PropertyColumnHeader" xml:space="preserve">
    <value>Property</value>
    <comment>Title of list view column showing the names of various web service properties.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ReferenceNameLabel" xml:space="preserve">
    <value>&amp;Reference Name:</value>
    <comment>Label next to the text box containing the name that will be used for the web reference.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.RefreshButtonTooltip" xml:space="preserve">
    <value>Refresh</value>
    <comment>Add web reference dialog browser refresh button tooltip.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.RetrievalUriProperty" xml:space="preserve">
    <value>Retrieval URI</value>
    <comment>Text displayed in the property/value list when the user selects the service description list view node.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ServiceNameProperty" xml:space="preserve">
    <value>Service</value>
    <comment>Displayed next to a web service name when the user selects a web service node in the list view.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.StopButtonTooltip" xml:space="preserve">
    <value>Stop</value>
    <comment>Tooltip for the browser stop button.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.UrlAddressLabel" xml:space="preserve">
    <value>&amp;Address:</value>
    <comment>Label next to text box where the user types in the http url to a web service description.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.ValueColumnHeader" xml:space="preserve">
    <value>Value</value>
    <comment>Name of list column header showing web service property values.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AddWebReferenceDialog.WebServicesTabPageTitle" xml:space="preserve">
    <value>Available Web Services</value>
    <comment>Title for the tab that shows the web service operations available for a given url.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AttachToProcessForm.AttachButtonText" xml:space="preserve">
    <value>Attach</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AttachToProcessForm.Managed" xml:space="preserve">
    <value>Managed</value>
    <comment>Indicates that a process is managed code in the attach to process dialog.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.AttachToProcessForm.Title" xml:space="preserve">
    <value>Attach to Process</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.CantCreateDirectoryError" xml:space="preserve">
    <value>Can't create output directory.
Check if you've the required permission.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.IllegalProjectNameError" xml:space="preserve">
    <value>Illegal project name.
Only letters, digits, space, '.' or '_' are allowed.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.ProjectNameMustNotEndWithDot" xml:space="preserve">
    <value>Illegal project name: project name may not end with '.'.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.ProjectNameMustStartWithLetter" xml:space="preserve">
    <value>Illegal project name: project name must start with letter.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.NewProjectDialog.SpecifyValidLocation" xml:space="preserve">
    <value>You must specify a valid absolute path as project location.</value>
    <comment>Error message when location for new project is invalid</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.OptionPanels.RegisterFiletypesPanel.CaptionLabel" xml:space="preserve">
    <value>&amp;Select the file types you want to associate with SharpDevelop:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.OptionPanels.RegisterFiletypesPanel.PanelName" xml:space="preserve">
    <value>File Format Associations</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.OptionPanels.RegisterFiletypesPanel.RegisterCheckBox" xml:space="preserve">
    <value>&amp;Register file types at application startup</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.CaseSensitiveCheckBox" xml:space="preserve">
    <value>&amp;Case sensitive</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.DialogName" xml:space="preserve">
    <value>Sort Options</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.IgnoreTrailingWhitespacesCheckBox" xml:space="preserve">
    <value>&amp;Ignore trailing whitespaces</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.RemoveDuplicateLinesCheckBox" xml:space="preserve">
    <value>&amp;Remove duplicate lines</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.SortDirectionGroupBox" xml:space="preserve">
    <value>Sort Direction</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.SortDirectionGroupBox.Ascending" xml:space="preserve">
    <value>&amp;Ascending</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.SortOptionsDialog.SortDirectionGroupBox.Descending" xml:space="preserve">
    <value>&amp;Descending</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.ToolNotFoundDialog.Title" xml:space="preserve">
    <value>Tool not found</value>
    <comment>Title of dialog window that appears when an external tool (SHFB or TortoiseSVN) is missing</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.DialogTitle" xml:space="preserve">
    <value>Discovery Credential</value>
    <comment>UserCredentials dialog title.  Dialog pops up when the user needs to specify username/pass to view a web service.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.DomainLabel" xml:space="preserve">
    <value>&amp;Domain:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.InformationLabel" xml:space="preserve">
    <value>Please supply the credentials to access the specified url.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.PasswordLabel" xml:space="preserve">
    <value>&amp;Password:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.UrlLabel" xml:space="preserve">
    <value>Url:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Dialogs.UserCredentialsDialog.UserNameLabel" xml:space="preserve">
    <value>&amp;User name:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.OutlinePad" xml:space="preserve">
    <value>Outline</value>
    <comment>Document outline pad</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.OutlinePad.NotAvailable" xml:space="preserve">
    <value>Outline view is not available for the current document.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Pads.ClassScout.LoadingNode" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Pads.PropertyPad.ContextMenu.Reset" xml:space="preserve">
    <value>&amp;Reset</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Pads.PropertyPad.ContextMenu.ShowDescription" xml:space="preserve">
    <value>&amp;Show Description</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Gui.Pads.PropertyPadResetCommand" xml:space="preserve">
    <value>Reset failed. Reason: Reset value might now be invalid because another property changed.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.ParserService.Parsing" xml:space="preserve">
    <value>Parsing</value>
    <comment>Status bar message indicating that SharpDevelop is parsing the user code</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.BuildAction" xml:space="preserve">
    <value>Build action</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.BuildAction.Description" xml:space="preserve">
    <value>The build action of that file</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CopyToOutputDirectory" xml:space="preserve">
    <value>Copy to output directory</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CopyToOutputDirectory.Description" xml:space="preserve">
    <value>Specifies if the file should be copied to the output directory</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CustomTool" xml:space="preserve">
    <value>Custom Tool</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CustomTool.Description" xml:space="preserve">
    <value>Specifies the tool that converts the file to the output.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CustomToolNamespace" xml:space="preserve">
    <value>Custom Tool Namespace</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.CustomToolNamespace.Description" xml:space="preserve">
    <value>Specifies the namespace the custom tool places it's output.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.FileName.Description" xml:space="preserve">
    <value>The full path to the file.</value>
    <comment>Description shown for the 'File name' property in the property grid when a file is selected in the project browser.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.LogicalName" xml:space="preserve">
    <value>Logical Name</value>
    <comment>Logical Name property for embedded resource files</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectFile.LogicalName.Description" xml:space="preserve">
    <value>The name of the embedded resource. If left empty, the name is automatically generated.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Aliases" xml:space="preserve">
    <value>Aliases</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Aliases.Description" xml:space="preserve">
    <value>A comma delimited list of aliases. Use aliases if you need to reference assemblies with conflicting class and namespace names, e.g. different versions of the same assembly.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Culture" xml:space="preserve">
    <value>Culture</value>
    <comment>Reference's culture property.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Culture.Description" xml:space="preserve">
    <value>The culture supported by the reference</value>
    <comment>Reference's culture property description.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.LocalCopy" xml:space="preserve">
    <value>Local copy</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.LocalCopy.Description" xml:space="preserve">
    <value>If true the referenced assembly is copied to the output path</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Name" xml:space="preserve">
    <value>(Name)</value>
    <comment>Property value for the reference name.  Keep the () brackets so that this property appears at first (i.e. at the top of the property list).</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Name.Description" xml:space="preserve">
    <value>The reference name</value>
    <comment>Property value description.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.PublicKeyToken" xml:space="preserve">
    <value>Public Key Token</value>
    <comment>Assembly reference's public key token property.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.PublicKeyToken.Description" xml:space="preserve">
    <value>The public key token</value>
    <comment>Assembly reference's public key token property description</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.SpecificVersion" xml:space="preserve">
    <value>Specific Version</value>
    <comment>Reference property name indicating if the reference is to a specific version</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.SpecificVersion.Description" xml:space="preserve">
    <value>Indicates if this reference is bound to a specific version of the assembly</value>
    <comment>Reference property description.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.UrlBehaviour" xml:space="preserve">
    <value>URL Behaviour</value>
    <comment>Web reference url behaviour property displayed in property browser.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.UrlBehaviour.Description" xml:space="preserve">
    <value>Web reference URL behaviour</value>
    <comment>Property description for web reference url behaviour .</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Version" xml:space="preserve">
    <value>Version</value>
    <comment>Property name indicating the assembly reference version number.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.Version.Description" xml:space="preserve">
    <value>The major, minor, revision and build numbers of the reference</value>
    <comment>Reference's version property description.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.WebReferenceUrl" xml:space="preserve">
    <value>Web Reference URL</value>
    <comment>Name of property showing the web reference's url.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Project.ProjectReference.WebReferenceUrl.Description" xml:space="preserve">
    <value>Web reference URL</value>
    <comment>Property description for the web reference url.</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.CombineDescriptor.OverwriteProjectQuestion" xml:space="preserve">
    <value>Solution file ${combineLocation} already exists, do you want to overwrite the existing file?</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.CantCreateProjectWithTypeError" xml:space="preserve">
    <value>Can't create project with type '${type}'.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.FileCouldntBeWrittenError" xml:space="preserve">
    <value>File ${fileName} could not be written.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.OverwriteProjectQuestion" xml:space="preserve">
    <value>Project file ${projectLocation} already exists, do you want to overwrite the existing file ?</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.OverwriteQuestion" xml:space="preserve">
    <value>The File(s) ${fileNames} already exist, do you want to overwrite the existing file(s)?</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.OverwriteQuestion.InfoName" xml:space="preserve">
    <value>File(s) already exist</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.LoadingFile" xml:space="preserve">
    <value>Loading ${Filename}...</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.ChangeCompilerVersionLabel" xml:space="preserve">
    <value>Convert selected &amp;projects to:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.ChangeTargetFrameworkLabel" xml:space="preserve">
    <value>Change &amp;target framework:</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.ChangeVersionGroupBoxHeader" xml:space="preserve">
    <value>Change version of selected projects</value>
    <comment>Title of group box that allows changing the version of the selected projects</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.CompilerVersion" xml:space="preserve">
    <value>Compiler Version</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.ConvertButton" xml:space="preserve">
    <value>&amp;Convert</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.DoNotChange" xml:space="preserve">
    <value>&lt;do not change&gt;</value>
    <comment>item in compiler version/target framework combo boxes that is used to indicate an ambiguous selection (several projects with different targets frameworks) and allows the user to change one of (compiler version, target framework) without changing the other</comment>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.TargetFramework" xml:space="preserve">
    <value>Target Framework</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.Title" xml:space="preserve">
    <value>Project Upgrade</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Project.UpgradeView.UpgradeFromPreviousVersionDescription" xml:space="preserve">
    <value>This solution was created using a previous version of SharpDevelop.
You might want to upgrade it so that you can use new language or framework features.</value>
  </data>
  <data name="ICSharpCode.SharpDevelop.Services.AmbienceService.AmbienceNotFoundError" xml:space="preserve">
    <value>Current ambience not found.
Goto 'Options-&gt;Visual Style' and change the current language ambience.</value>
  </data>
  <data name="ICSharpCode.TextEditor.Document.SearchReplaceManager.MarkAllDone" xml:space="preserve">
    <value>Mark all done.</value>
  </data>
  <data name="ICSharpCode.TextEditor.Document.SearchReplaceManager.ReplaceAllDone" xml:space="preserve">
    <value>${Count} replacements done.</value>
  </data>
  <data name="ICSharpCode.UnitTesting.AllTestsTreeNode.Text" xml:space="preserve">
    <value>All Tests</value>
    <comment>Unit Tests tree root node text when a solution contains multiple test projects.</comment>
  </data>
  <data name="ICSharpCode.UnitTesting.CodeCoverage" xml:space="preserve">
    <value>Code Coverage</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.CreateXmlOutputFile" xml:space="preserve">
    <value>Create XML output file</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.LabelEachTest" xml:space="preserve">
    <value>Label each test</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.ShadowCopy" xml:space="preserve">
    <value>Shadow copy</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.ShowLogo" xml:space="preserve">
    <value>Show logo</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.ShowProgress" xml:space="preserve">
    <value>Show progress</value>
  </data>
  <data name="ICSharpCode.UnitTesting.OptionsPanel.Thread" xml:space="preserve">
    <value>Run tests on separate thread</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunAllWithCoverage" xml:space="preserve">
    <value>Run all tests with code coverage</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunInTestPad" xml:space="preserve">
    <value>Run in unit test pad</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunProjectTests" xml:space="preserve">
    <value>Run tests in current project</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunWithCoverage" xml:space="preserve">
    <value>Run with code coverage</value>
  </data>
  <data name="ICSharpCode.UnitTesting.RunWithDebugger" xml:space="preserve">
    <value>Run with debugger</value>
  </data>
  <data name="ICSharpCode.UnitTesting.StatusBarProgressLabel" xml:space="preserve">
    <value>Testing ${Name}...</value>
    <comment>Label next to the progress bar in the status bar when running unit tests</comment>
  </data>
  <data name="ICSharpCode.UnitTesting.TestMenu" xml:space="preserve">
    <value>&amp;Test</value>
    <comment>The "Test" submenu in the "Analysis" menu</comment>
  </data>
  <data name="ICSharpCode.UnitTesting.TestRunnerNotFoundMessageFormat" xml:space="preserve">
    <value>Unable to run unit tests. The file '{0}' cannot be found.</value>
  </data>
  <data name="ICSharpCode.WixBinding.AddCompilerExtensionsDialog.Title" xml:space="preserve">
    <value>Add Extensions</value>
  </data>
  <data name="ICSharpCode.WixBinding.AddWixExtensionToProject.WixExtensionFileFilterName" xml:space="preserve">
    <value>WiX Extension Files</value>
  </data>
  <data name="ICSharpCode.WixBinding.AddWixLibraryToProject.WixLibraryFileFilterName" xml:space="preserve">
    <value>WiX Library Files</value>
  </data>
  <data name="ICSharpCode.WixBinding.ApplicationSettings.OutputNameLabel" xml:space="preserve">
    <value>Output name:</value>
  </data>
  <data name="ICSharpCode.WixBinding.ApplicationsSettingsPanel.OutputFileNameLabel" xml:space="preserve">
    <value>Output filename:</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.CompilerExtensionsGroupBox" xml:space="preserve">
    <value>Extensions</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.CulturesLabel" xml:space="preserve">
    <value>Cultures:</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.SuppressIces" xml:space="preserve">
    <value>Suppress ICEs:</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.TreatWarningsAsErrorsCheckBox" xml:space="preserve">
    <value>Treat warnings as errors:</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixMSBuildExtensionsPathLabel" xml:space="preserve">
    <value>WiX MSBuild extensions path:</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixTargetsPathLabel" xml:space="preserve">
    <value>WiX targets path:</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixTasksPathLabel" xml:space="preserve">
    <value>Wix tasks path:</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixToolPathLabel" xml:space="preserve">
    <value>WiX tool path:</value>
  </data>
  <data name="ICSharpCode.WixBinding.CompilerParametersPanel.WixVariablesLabel" xml:space="preserve">
    <value>WiX Variables:</value>
  </data>
  <data name="ICSharpCode.WixBinding.DialogDesignerGenerator.DialogIdNotFoundMessage" xml:space="preserve">
    <value>Could not find dialog id '{0}' in the document.</value>
    <comment>Error message displayed by the forms designer when for some reason it cannot find the dialog id in the document.</comment>
  </data>
  <data name="ICSharpCode.WixBinding.ExtensionBinding.InvalidExtension" xml:space="preserve">
    <value>An extension must be of the form: Class, Assembly

For example:

Microsoft.Tools.WindowsInstallerXml.Extensions.NetFxCompiler, WixNetFxExtension</value>
  </data>
  <data name="ICSharpCode.WixBinding.LibraryParametersPanel" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="ICSharpCode.WixBinding.LinkerParametersPanel" xml:space="preserve">
    <value>Linking</value>
  </data>
  <data name="ICSharpCode.WixBinding.NameValueListEditor.NameColumn" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="ICSharpCode.WixBinding.NameValueListEditor.ValueColumn" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.AddDirectoryDialog.Title" xml:space="preserve">
    <value>Add Directory</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.AddFilesDialog.Title" xml:space="preserve">
    <value>Add files...</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.AllWixFilesContainErrorsMessage" xml:space="preserve">
    <value>Unable to find setup files. WiX files contain errors.</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.NoRootDirectoryFoundMessage" xml:space="preserve">
    <value>Unable to find any TARGETDIR Directory or DirectoryRef elements. Either these do not exist or the WiX document is not for WiX 3.0 and the namespace is not "http://schemas.microsoft.com/wix/2006/wi".</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.NoWixFileFoundInProjectMessage" xml:space="preserve">
    <value>No WiX file (.wxs) found in '{0}' project.</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackageFilesView.Title" xml:space="preserve">
    <value>Setup Files</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackagesFilesView.ContextMenu.AddDirectory" xml:space="preserve">
    <value>Add Directory...</value>
  </data>
  <data name="ICSharpCode.WixBinding.PackagesFilesView.ContextMenu.AddFiles" xml:space="preserve">
    <value>Add Files...</value>
  </data>
  <data name="ICSharpCode.WixBinding.PreprocessorVariablesPanel" xml:space="preserve">
    <value>Preprocessing</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectBrowser.ContextMenu.AddWixExtension" xml:space="preserve">
    <value>Add WiX Extension</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectBrowser.ContextMenu.AddWixLibrary" xml:space="preserve">
    <value>Add WiX Library</value>
    <comment>Menu item to add a Wix Library (wixlib) to a Wix project.</comment>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectOptions.OutputType.Installer" xml:space="preserve">
    <value>Installation Package</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectOptions.OutputType.MergeModule" xml:space="preserve">
    <value>Merge Module</value>
  </data>
  <data name="ICSharpCode.WixBinding.ProjectOptions.OutputType.WixLibrary" xml:space="preserve">
    <value>WiX Library</value>
  </data>
  <data name="ICSharpCode.WixBinding.SetupDialogListPad.Title" xml:space="preserve">
    <value>Setup Dialogs</value>
  </data>
  <data name="ICSharpCode.WixBinding.ViewDialogXml.DialogIdNotFoundMessage" xml:space="preserve">
    <value>Unable to find '{0}' in {1}</value>
    <comment>{0} = Dialog id.
{1} = Filename.

The full string will be:

Unable to find 'WelcomeDialogId' in Dialogs.wxs</comment>
  </data>
  <data name="ICSharpCode.WixBinding.WixCompilerExtensionPicker.AddButton" xml:space="preserve">
    <value>Add...</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDialog.IllegalAttributeIntegerValue" xml:space="preserve">
    <value>The {0} attribute's value, '{1}', is not a legal integer value.</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDialog.RequiredAttributeMissingMessage" xml:space="preserve">
    <value>Required attribute '{0}' is missing.</value>
    <comment>Error message specifying the xml attribute that is required but missing in the Wix dialog xml.</comment>
  </data>
  <data name="ICSharpCode.WixBinding.WixDialogDesigner.NoDialogSelectedInDocumentMessage" xml:space="preserve">
    <value>No setup dialog selected in Wix document. Please move the cursor inside a dialog element or use the Setup Dialogs window to open a dialog.</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.AdminToolsFolder" xml:space="preserve">
    <value>Admin Tools</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.AppDataFolder" xml:space="preserve">
    <value>Application Data</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.CommonAppDataFolder" xml:space="preserve">
    <value>Common Application Data</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.CommonFiles64Folder" xml:space="preserve">
    <value>Common Files 64</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.CommonFilesFolder" xml:space="preserve">
    <value>Common Files</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.DesktopFolder" xml:space="preserve">
    <value>Desktop</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.FavoritesFolder" xml:space="preserve">
    <value>Favorites</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.FontsFolder" xml:space="preserve">
    <value>Fonts</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.LocalAppDataFolder" xml:space="preserve">
    <value>Local Application Data</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.MyPicturesFolder" xml:space="preserve">
    <value>My Pictures</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.PersonalFolder" xml:space="preserve">
    <value>Personal</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.ProgramFiles64Folder" xml:space="preserve">
    <value>Program Files (x64)</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.ProgramFilesFolder" xml:space="preserve">
    <value>Program Files</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.ProgramMenuFolder" xml:space="preserve">
    <value>Program Menu</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.SendToFolder" xml:space="preserve">
    <value>Send To</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.StartMenuFolder" xml:space="preserve">
    <value>Start Menu</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.StartupFolder" xml:space="preserve">
    <value>Startup</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.System16Folder" xml:space="preserve">
    <value>System (x16)</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.System64Folder" xml:space="preserve">
    <value>System (x64)</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.SystemFolder" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.TempFolder" xml:space="preserve">
    <value>Temp</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.TemplateFolder" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixDirectoryElement.WindowsVolume" xml:space="preserve">
    <value>Windows Volume</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixExtensionsFolderNode.Text" xml:space="preserve">
    <value>WiX Extensions</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixFileFilterName" xml:space="preserve">
    <value>WiX files</value>
    <comment>Name of file filter for WiX files.</comment>
  </data>
  <data name="ICSharpCode.WixBinding.WixLibraryFolderNode.Text" xml:space="preserve">
    <value>WiX Libraries</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixLocalizationFileFilterName" xml:space="preserve">
    <value>WiX Localization Files</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixNetFxExtensionTitle" xml:space="preserve">
    <value>.NET Framework Extension</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixPackageFilesDiffControl.NoDiffFound" xml:space="preserve">
    <value>No difference found.</value>
    <comment>Message displayed in the Wix diff control to indicate that no differences between the files specified in the Wix setup document and the files on the file system were found.</comment>
  </data>
  <data name="ICSharpCode.WixBinding.WixProjectFileAssociation" xml:space="preserve">
    <value>WiX Project</value>
    <comment>Title displayed in the File Format Associations options page for Wix projects.</comment>
  </data>
  <data name="ICSharpCode.WixBinding.WixProjectFilesFilterName" xml:space="preserve">
    <value>WiX Project Files</value>
    <comment>Name for the WiX Projects file filter in the File Open dialog.</comment>
  </data>
  <data name="ICSharpCode.WixBinding.WixPubcaExtensionTitle" xml:space="preserve">
    <value>COM+ and Message Queue Extension (pubca)</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixTargetsFileFilterName" xml:space="preserve">
    <value>WiX Targets File</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixTasksFileFilterName" xml:space="preserve">
    <value>WiX Tasks File</value>
  </data>
  <data name="ICSharpCode.WixBinding.WixVisualStudioExtensionTitle" xml:space="preserve">
    <value>Visual Studio Extension</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Outline" xml:space="preserve">
    <value>Outline</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Properties" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Redo" xml:space="preserve">
    <value>Redo</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Tools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.Undo" xml:space="preserve">
    <value>Undo</value>
  </data>
  <data name="ICSharpCode.WPFDesigner.ContextMenu.ViewXAML" xml:space="preserve">
    <value>View XAML</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AddAttributeDialog.CustomAttributeLabel" xml:space="preserve">
    <value>Custom:</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AddAttributeDialog.Title" xml:space="preserve">
    <value>Add Attribute</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AddElementDialog.CustomElementLabel" xml:space="preserve">
    <value>Custom:</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AddElementDialog.Title" xml:space="preserve">
    <value>Add Element</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AssignXSLT" xml:space="preserve">
    <value>&amp;Assign XSLT...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.AssignXSLT.Title" xml:space="preserve">
    <value>Assign XSLT Stylesheet</value>
  </data>
  <data name="ICSharpCode.XmlEditor.CreateSchemaMenuLabel" xml:space="preserve">
    <value>&amp;Create Schema</value>
    <comment>Menu option that creates or generates an simple xml schema from the xml file currently displayed.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.HideXPathResults" xml:space="preserve">
    <value>Hide &amp;XPath Results</value>
    <comment>Menu item that is used to remove the highlighting on items matched by the XPath query.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.OpenXSLT" xml:space="preserve">
    <value>&amp;Open XSLT</value>
  </data>
  <data name="ICSharpCode.XmlEditor.RunXSLT" xml:space="preserve">
    <value>Run XSL&amp;T</value>
  </data>
  <data name="ICSharpCode.XmlEditor.SelectXmlSchema.DialogTitle" xml:space="preserve">
    <value>Select XML Schema</value>
    <comment>Name of dialog allowing the user to choose a schema from a list of schema namespaces.  Dialog is opened when the user is associating a schema with a file extension.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.ValidateXmlMenuLabel" xml:space="preserve">
    <value>&amp;Validate XML</value>
    <comment>Menu option to validate the xml file currently open.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.FoldingGroupLabel" xml:space="preserve">
    <value>Folding</value>
    <comment>Name of the group label that holds settings for xml folding.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.ShowAttributesWhenFoldedLabel" xml:space="preserve">
    <value>Show &amp;attributes when folded</value>
    <comment>Check box label - shows/hides xml attributes when the element is folded.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.ShowSchemaAnnotationLabel" xml:space="preserve">
    <value>Show schema anno&amp;tation</value>
    <comment>Check box label.  Toggles on/off the display of xs:annotation/xs:documentation text, found in the schema, alongside the xml intellisense list.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.Title" xml:space="preserve">
    <value>XML Options</value>
    <comment>Name of the xml editor options panel.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlEditorOptionsPanel.XmlCompletionGroupLabel" xml:space="preserve">
    <value>XML Completion</value>
    <comment>Label for xml auto-completion/intellisense options group.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.FileExtensionLabelText" xml:space="preserve">
    <value>&amp;Extension:</value>
    <comment>Label for a drop down list of file extensions.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.FileExtensionsGroupBoxText" xml:space="preserve">
    <value>File Extensions</value>
    <comment>Name of group box containing the file extensions and their associated schemas.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.NamespacePrefixLabelText" xml:space="preserve">
    <value>&amp;Prefix:</value>
    <comment>Label for the namespace prefix (e.g. "xs") that will be associated with a given xml file extension by default.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.SchemaLabelText" xml:space="preserve">
    <value>&amp;Schema:</value>
    <comment>Label for the schema namespace associated with a file extension.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemaPanel.SchemasGroupBoxText" xml:space="preserve">
    <value>Schemas</value>
    <comment>Name of xml schemas group box in the xml schema options dialog.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.NamespaceExists" xml:space="preserve">
    <value>Unable to add schema.  The namespace '{0}' already exists.</value>
    <comment>User tried to add a schema to SharpDevelop but one has been added before with that particular namespace.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.NoTargetNamespace" xml:space="preserve">
    <value>Schema '{0}' does not have a target namespace.</value>
    <comment>For a schema to be added to the xml intellisense it must have a namespace associated with it.  This error occurs when the user tries to add a schema 'filename' that does not have a targetNamespace attribute.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.Title" xml:space="preserve">
    <value>XML Schemas</value>
    <comment>Name of the options panel for configuring xml schemas that SharpDevelop will provide autocomplete/intellisense for.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.UnableToAddSchema" xml:space="preserve">
    <value>Unable to add schema.</value>
    <comment>User browsed for an xml schema on the file system, but we could not add it to SharpDevelop for some reason.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlSchemasPanel.UnableToSaveChanges" xml:space="preserve">
    <value>Unable to save changes.</value>
    <comment>This message is shown if SharpDevelop could not save the changes the user made to the xml schemas options panel.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.AddAttributeMenuLabel" xml:space="preserve">
    <value>Add Attribute...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.AddChildCommentMenuLabel" xml:space="preserve">
    <value>Add Child Comment</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.AddChildElementMenuLabel" xml:space="preserve">
    <value>Add Child Element...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.AddChildTextNodeAfterMenuLabel" xml:space="preserve">
    <value>Add Child Text Node</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertCommentAfterMenuLabel" xml:space="preserve">
    <value>Insert Comment After</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertCommentBeforeMenuLabel" xml:space="preserve">
    <value>Insert Comment Before</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertElementAfterMenuLabel" xml:space="preserve">
    <value>Insert Element After...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertElementBeforeMenuLabel" xml:space="preserve">
    <value>Insert Element Before...</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertTextNodeAfterMenuLabel" xml:space="preserve">
    <value>Insert Text Node After</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.InsertTextNodeBeforeMenuLabel" xml:space="preserve">
    <value>Insert Text Node Before</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.RemoveAttributeMenuLabel" xml:space="preserve">
    <value>Remove Attribute</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XmlTreeView.Title" xml:space="preserve">
    <value>XML Tree</value>
    <comment>The title for the Xml Tree tab.</comment>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.NamespaceColumnHeaderTitle" xml:space="preserve">
    <value>Namespace</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.NamespacesTab" xml:space="preserve">
    <value>Namespaces</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.NoXPathResultsMessage" xml:space="preserve">
    <value>XPath query found 0 items.</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.PrefixColumnHeaderTitle" xml:space="preserve">
    <value>Prefix</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.QueryButton" xml:space="preserve">
    <value>Query</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.ResultsTab" xml:space="preserve">
    <value>Results</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.Title" xml:space="preserve">
    <value>XPath Query</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.XPathLabel" xml:space="preserve">
    <value>XPath:</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XPathQueryPad.XPathMatchColumnHeaderTitle" xml:space="preserve">
    <value>Match</value>
  </data>
  <data name="ICSharpCode.XmlEditor.XslOutputView.Title" xml:space="preserve">
    <value>XSLT Output</value>
  </data>
  <data name="Internal.ExternalTool.CantLoadToolConfigWarining" xml:space="preserve">
    <value>Can't load external tools configuration file</value>
  </data>
  <data name="Internal.Templates.CodeTemplateLoader.CantLoadTemplatesWarning" xml:space="preserve">
    <value>Can't load templates configuration file</value>
  </data>
  <data name="Internal.Templates.ProjectTemplate.LoadingError" xml:space="preserve">
    <value>Error while loading project template:</value>
  </data>
  <data name="MainWindow.CannotCloseWithBuildInProgressMessage" xml:space="preserve">
    <value>The build must finish before SharpDevelop can be closed.</value>
    <comment>Warning message displayed to user if they try to close SharpDevelop whilst a build is running.</comment>
  </data>
  <data name="MainWindow.CompilerMessages.BuildCancelled" xml:space="preserve">
    <value>Build was cancelled.</value>
    <comment>Message when build was cancelled by user</comment>
  </data>
  <data name="MainWindow.CompilerMessages.BuildFailed" xml:space="preserve">
    <value>Build failed.</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildFinished" xml:space="preserve">
    <value>Build finished successfully.</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildStarted" xml:space="preserve">
    <value>Build started.</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildStartedOutput" xml:space="preserve">
    <value>------ Build started: Project: ${Project} Configuration: ${Config} ------</value>
  </data>
  <data name="MainWindow.CompilerMessages.BuildVerb" xml:space="preserve">
    <value>Building</value>
    <comment>Verb describing that SharpDevelop is currently building a project</comment>
  </data>
  <data name="MainWindow.CompilerMessages.CompileVerb" xml:space="preserve">
    <value>Compiling</value>
    <comment>Verb describing that SharpDevelop is currently compiling a project</comment>
  </data>
  <data name="MainWindow.CompilerMessages.CreatingCOMInteropAssembly" xml:space="preserve">
    <value>Building COM interop assembly...</value>
  </data>
  <data name="MainWindow.CompilerMessages.ExecuteScript" xml:space="preserve">
    <value>Execute : ${Script}</value>
  </data>
  <data name="MainWindow.CompilerMessages.MSBuildAlreadyRunning" xml:space="preserve">
    <value>MSBuild is already running!</value>
  </data>
  <data name="MainWindow.CompilerMessages.PerformingMainCompilationOutput" xml:space="preserve">
    <value>Performing main compilation...</value>
  </data>
  <data name="MainWindow.CompilerMessages.ProjectStatsOutput" xml:space="preserve">
    <value>Build complete -- ${Errors} errors, ${Warnings} warnings</value>
  </data>
  <data name="MainWindow.CompilerMessages.SkipProjectNoChanges" xml:space="preserve">
    <value>Skipped ${Name} (no changes inside SharpDevelop)</value>
    <comment>Message when a project is not compiled because it was not modified</comment>
  </data>
  <data name="MainWindow.DialogName" xml:space="preserve">
    <value>SharpDevelop</value>
  </data>
  <data name="MainWindow.DiscardChangesMessage" xml:space="preserve">
    <value>Do you really want to discard your changes ?</value>
  </data>
  <data name="MainWindow.SaveChangesMessage" xml:space="preserve">
    <value>Do you want to save the current changes?</value>
  </data>
  <data name="MainWindow.SaveChangesMessageHeader" xml:space="preserve">
    <value>Save Changes in</value>
  </data>
  <data name="MainWindow.StatusBar.CompilingMessage" xml:space="preserve">
    <value>Compiling ${Project}</value>
  </data>
  <data name="MainWindow.StatusBar.ReadyMessage" xml:space="preserve">
    <value>Ready</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.DeleteAllMarks.ToolTip" xml:space="preserve">
    <value>Delete all bookmarks in all buffers.</value>
    <comment>DeleteAllMarks icon tooltip.</comment>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.DeleteMark.ToolTip" xml:space="preserve">
    <value>Delete bookmark</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.EnableDisableAll.ToolTip" xml:space="preserve">
    <value>Enable/Disable all</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.GotoNext.ToolTip" xml:space="preserve">
    <value>Goto next bookmark</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.GotoPrev.ToolTip" xml:space="preserve">
    <value>Goto previous bookmark</value>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.LineText" xml:space="preserve">
    <value>{0} @line {1}</value>
    <comment>format string for displaying "filename @line #" in the bookmarks pad</comment>
  </data>
  <data name="MainWindow.Windows.BookmarkPad.LocationText" xml:space="preserve">
    <value>Location</value>
    <comment>Column title for the bookmark location</comment>
  </data>
  <data name="MainWindow.Windows.BookmarksLabel" xml:space="preserve">
    <value>Bookmarks</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.BackButton.ToolTip" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.BaseTypes" xml:space="preserve">
    <value>Base types</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowOtherMembers.Label" xml:space="preserve">
    <value>Show &amp;Other Members</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowPrivateMembers.Label" xml:space="preserve">
    <value>Show P&amp;rivate Members</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowProjectReferences.Label" xml:space="preserve">
    <value>Show &amp;Project References</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowProtectedMembers.Label" xml:space="preserve">
    <value>Show Pr&amp;otected Members</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowPublicMembers.Label" xml:space="preserve">
    <value>&amp;Show Public Members</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClassViewSettingsButton.ToolTip" xml:space="preserve">
    <value>Class View Settings</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ClearSearch.ToolTip" xml:space="preserve">
    <value>Clear Search</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.CommitSearch.ToolTip" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.DerivedTypes" xml:space="preserve">
    <value>Derived types</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.ForwardButton.ToolTip" xml:space="preserve">
    <value>Forward</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.NoResultsFound" xml:space="preserve">
    <value>No search results found.</value>
  </data>
  <data name="MainWindow.Windows.ClassBrowser.SearchButton.ToolTip" xml:space="preserve">
    <value>Class View Search</value>
  </data>
  <data name="MainWindow.Windows.ClassScoutLabel" xml:space="preserve">
    <value>Classes</value>
  </data>
  <data name="MainWindow.Windows.CompilerMessageView.ClearAllButton.ToolTip" xml:space="preserve">
    <value>Clear All</value>
  </data>
  <data name="MainWindow.Windows.CompilerMessageView.ShowOutputFromComboBox.ToolTip" xml:space="preserve">
    <value>Show output from:</value>
  </data>
  <data name="MainWindow.Windows.CompilerMessageView.ToggleWordWrapButton.ToolTip" xml:space="preserve">
    <value>Toggle Word Wrap</value>
  </data>
  <data name="MainWindow.Windows.Debug.Breakpoints" xml:space="preserve">
    <value>Breakpoints</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack" xml:space="preserve">
    <value>Callstack</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.CannotSwitchWhileRunning" xml:space="preserve">
    <value>You cannot switch functions while the debugger is running.</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.CannotSwitchWithoutSymbols" xml:space="preserve">
    <value>You cannot switch to a function without symbols.</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ExternalMethods" xml:space="preserve">
    <value>[External methods]</value>
    <comment>Show in the callstack instead of external methods (without symbols)</comment>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.FunctionSwitch" xml:space="preserve">
    <value>Function switch</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ShowArgumentNames" xml:space="preserve">
    <value>Show argument names</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ShowArgumentValues" xml:space="preserve">
    <value>Show argument values</value>
  </data>
  <data name="MainWindow.Windows.Debug.CallStack.ShowExternalMethods" xml:space="preserve">
    <value>Show external methods</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Ask" xml:space="preserve">
    <value>Ask</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Break" xml:space="preserve">
    <value>Break</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Breakpoint" xml:space="preserve">
    <value>Breakpoint</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.BreakpointHit" xml:space="preserve">
    <value>Breakpoint hit!</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.BreakpointHitAt" xml:space="preserve">
    <value>Hit breakpoint at line {0} in {1}.</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.BreakpointHitAtBecause" xml:space="preserve">
    <value>Hit breakpoint at line {0} in {1} because {2}</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Condition" xml:space="preserve">
    <value>Conditional</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.ConditionalColumnHeader" xml:space="preserve">
    <value>Condition</value>
    <comment>column title for a conditional breakpoint's condition</comment>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.DisableBreakpoint" xml:space="preserve">
    <value>Disable breakpoint</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.EnableBreakpoint" xml:space="preserve">
    <value>Enable breakpoint</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.ScriptingWindow.CheckSyntax" xml:space="preserve">
    <value>Check syntax</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.ScriptingWindow.ScriptingLanguage" xml:space="preserve">
    <value>Scripting language</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.ScriptingWindow.Title" xml:space="preserve">
    <value>Edit Debugger Script</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Terminate" xml:space="preserve">
    <value>Terminate</value>
  </data>
  <data name="MainWindow.Windows.Debug.Conditional.Breakpoints.Trace" xml:space="preserve">
    <value>Trace</value>
  </data>
  <data name="MainWindow.Windows.Debug.Console" xml:space="preserve">
    <value>Console</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Break" xml:space="preserve">
    <value>Break</value>
    <comment>Button.
Breaks the execution.  Shows the current location of debuggee in the editor.</comment>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Continue" xml:space="preserve">
    <value>Continue</value>
    <comment>Button.
Continues the execution of debuggee.
Button is enabled only for handled exceptions.</comment>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Error.CannotInterceptException" xml:space="preserve">
    <value>Can not intercept exception. Debugged program can not be continued and properties can not be evaluated.</value>
    <comment>eg. Happens on StackOverflow exception.</comment>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.HideExceptionDetails" xml:space="preserve">
    <value>Hide Exception Details</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.LineFormat.EndOfInnerException" xml:space="preserve">
    <value>--- End of inner exception stack trace ---</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.LineFormat.NoSymbols" xml:space="preserve">
    <value>at {0}</value>
    <comment>NB: Only used for exceptions that can not be intercepted (eg. StackOverflow)</comment>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.LineFormat.Symbols" xml:space="preserve">
    <value>at {0} in {1}:line {2}</value>
    <comment>NB: Only used for exceptions that can not be intercepted (eg. StackOverflow)</comment>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Message" xml:space="preserve">
    <value>An exception of type {0} was thrown:\n{1}</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.ShowExceptionDetails" xml:space="preserve">
    <value>Show Exception Details</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Terminate" xml:space="preserve">
    <value>Terminate</value>
    <comment>Button.
Stop/terminate the debuggee.</comment>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Title" xml:space="preserve">
    <value>Exception</value>
    <comment>NOT USED</comment>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Title.Handled" xml:space="preserve">
    <value>Handled exception</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionForm.Title.Unhandled" xml:space="preserve">
    <value>Unhandled exception</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionHistory" xml:space="preserve">
    <value>Exception history</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionHistory.Exception" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="MainWindow.Windows.Debug.ExceptionHistory.Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="MainWindow.Windows.Debug.HideZoomControl" xml:space="preserve">
    <value>Show/Hide Zoom Control</value>
  </data>
  <data name="MainWindow.Windows.Debug.Local" xml:space="preserve">
    <value>Local</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables" xml:space="preserve">
    <value>Local variables</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.BaseClass" xml:space="preserve">
    <value>Base class</value>
    <comment>Name of submenu which contains members of type's base class</comment>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CannotExploreVariablesWhileRunning" xml:space="preserve">
    <value>You cannot explore variables while the debuggee is running.</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CannotSetValue.BadFormat" xml:space="preserve">
    <value>Can not convert {0} to {1}</value>
    <comment>Occurs when user edits value but enters value in a bad format</comment>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CannotSetValue.Title" xml:space="preserve">
    <value>Can not set value</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CannotSetValue.UnknownError" xml:space="preserve">
    <value>Can not set value</value>
    <comment>Generic error. Occurs when user edits value.</comment>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.CopyToClipboard" xml:space="preserve">
    <value>Copy value to clipboard</value>
    <comment>Item in variable's context menu</comment>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.NonPublicMembers" xml:space="preserve">
    <value>Non-Public members</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.NonPublicStaticMembers" xml:space="preserve">
    <value>Non-Public Static members</value>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.PrivateMembers" xml:space="preserve">
    <value>Private members</value>
    <comment>obsolete</comment>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.PrivateStaticMembers" xml:space="preserve">
    <value>Private Static members</value>
    <comment>obsolete</comment>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.ShowFullError" xml:space="preserve">
    <value>Show full error...</value>
    <comment>Context menu item.
Shown for values that could not be obtained due to error.
Shows the full callstack of the error.</comment>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.ShowInHexadecimal" xml:space="preserve">
    <value>Show values in hexadecimal</value>
    <comment>Item in variable's context menu</comment>
  </data>
  <data name="MainWindow.Windows.Debug.LocalVariables.StaticMembers" xml:space="preserve">
    <value>Static members</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules" xml:space="preserve">
    <value>Loaded modules</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.AddressColumn" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.HasNoSymbols" xml:space="preserve">
    <value>No symbols loaded.</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.HasSymbols" xml:space="preserve">
    <value>Symbols loaded.</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.OrderColumn" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.ProgramColumn" xml:space="preserve">
    <value>Program</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.SymbolsColumn" xml:space="preserve">
    <value>Symbols</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.TimestampColumn" xml:space="preserve">
    <value>Timestamp</value>
  </data>
  <data name="MainWindow.Windows.Debug.Modules.VersionColumn" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="MainWindow.Windows.Debug.ObjectGraph" xml:space="preserve">
    <value>Object Graph</value>
  </data>
  <data name="MainWindow.Windows.Debug.ParallelStack" xml:space="preserve">
    <value>Parallel Stacks</value>
  </data>
  <data name="MainWindow.Windows.Debug.RunToCursor" xml:space="preserve">
    <value>Run to cursor</value>
  </data>
  <data name="MainWindow.Windows.Debug.SetCurrentStatement" xml:space="preserve">
    <value>Set current statement</value>
  </data>
  <data name="MainWindow.Windows.Debug.StopProcessDialog.Message" xml:space="preserve">
    <value>Detach from the process or terminate it?</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads" xml:space="preserve">
    <value>Threads</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.CannotFreezeWhileRunning" xml:space="preserve">
    <value>You cannot freeze or thaw threads while the debugger is running.</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.CannotStepNoActiveFunction" xml:space="preserve">
    <value>You cannot step because there is no active function selected</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.CannotSwitchWhileRunning" xml:space="preserve">
    <value>You cannot switch threads while the debugger is running.</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Freeze" xml:space="preserve">
    <value>Freeze</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Frozen" xml:space="preserve">
    <value>Frozen</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority" xml:space="preserve">
    <value>Priority</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.AboveNormal" xml:space="preserve">
    <value>Above normal</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.BelowNormal" xml:space="preserve">
    <value>Below normal</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.Highest" xml:space="preserve">
    <value>Highest</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.Lowest" xml:space="preserve">
    <value>Lowest</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.Priority.Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="MainWindow.Windows.Debug.Threads.ThreadSwitch" xml:space="preserve">
    <value>Thread switch</value>
  </data>
  <data name="MainWindow.Windows.Debug.ToggleMethodView" xml:space="preserve">
    <value>Toggle Method View</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch" xml:space="preserve">
    <value>Watch</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.AddWatch" xml:space="preserve">
    <value>Add watch</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.EnterExpression" xml:space="preserve">
    <value>Enter an expression to watch:</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.InvalidExpression" xml:space="preserve">
    <value>Invalid expression: {0}</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.RemoveAll" xml:space="preserve">
    <value>Remove all</value>
  </data>
  <data name="MainWindow.Windows.Debug.Watch.RemoveWatch" xml:space="preserve">
    <value>Remove watch</value>
  </data>
  <data name="MainWindow.Windows.DefinitionViewLabel" xml:space="preserve">
    <value>Definition View</value>
    <comment>Title of the definition view pad</comment>
  </data>
  <data name="MainWindow.Windows.ErrorList" xml:space="preserve">
    <value>Errors</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.ErrorButton.Label" xml:space="preserve">
    <value>${TaskService.Errors} Errors</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.ErrorButton.ToolTip" xml:space="preserve">
    <value>Select whether errors are displayed in the list.</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.MessageButton.Label" xml:space="preserve">
    <value>${TaskService.Messages} Messages</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.MessageButton.ToolTip" xml:space="preserve">
    <value>Select whether messages are displayed in the list.</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.WarningButton.Label" xml:space="preserve">
    <value>${TaskService.Warnings} Warnings</value>
  </data>
  <data name="MainWindow.Windows.ErrorList.WarningButton.ToolTip" xml:space="preserve">
    <value>Select whether warnings are displayed in the list.</value>
  </data>
  <data name="MainWindow.Windows.FileScout.DriveType.CD" xml:space="preserve">
    <value>CD</value>
    <comment>CD/DVD</comment>
  </data>
  <data name="MainWindow.Windows.FileScout.DriveType.Fixed" xml:space="preserve">
    <value>Fixed</value>
    <comment>fixed drive =&gt; hard disk</comment>
  </data>
  <data name="MainWindow.Windows.FileScout.DriveType.Remote" xml:space="preserve">
    <value>Remote</value>
    <comment>Network drive</comment>
  </data>
  <data name="MainWindow.Windows.FileScout.DriveType.Removeable" xml:space="preserve">
    <value>Removeable</value>
    <comment>removeable drive, e.g. floppy</comment>
  </data>
  <data name="MainWindow.Windows.FileScout.LastModified" xml:space="preserve">
    <value>Last modified</value>
  </data>
  <data name="MainWindow.Windows.FileScout.MyComputer" xml:space="preserve">
    <value>My Computer</value>
  </data>
  <data name="MainWindow.Windows.FileScout.MyDocuments" xml:space="preserve">
    <value>My Documents</value>
  </data>
  <data name="MainWindow.Windows.FileScout.Size" xml:space="preserve">
    <value>Size</value>
  </data>
  <data name="MainWindow.Windows.FileScoutLabel" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="MainWindow.Windows.HelpScoutLabel" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="MainWindow.Windows.OutlinePad" xml:space="preserve">
    <value>Outline</value>
  </data>
  <data name="MainWindow.Windows.OutlinePad.NoContentAvailable" xml:space="preserve">
    <value>There is no outline content available for this document.</value>
  </data>
  <data name="MainWindow.Windows.OutputWindow" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="MainWindow.Windows.OutputWindow.BuildCategory" xml:space="preserve">
    <value>Build</value>
  </data>
  <data name="MainWindow.Windows.OutputWindow.DebugCategory" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="MainWindow.Windows.ProjectScoutLabel" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="MainWindow.Windows.PropertiesScoutLabel" xml:space="preserve">
    <value>Properties</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.BackToNormalView.ToolTip" xml:space="preserve">
    <value>Back to normal search results</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.ClearHistory" xml:space="preserve">
    <value>&lt;Clear History&gt;</value>
    <comment>Menu command to remove previous searches</comment>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.CollapseAll.ToolTip" xml:space="preserve">
    <value>Collapse all</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.ExpandAll.ToolTip" xml:space="preserve">
    <value>Expand all</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.FileCount" xml:space="preserve">
    <value>${Count} files</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.Flat" xml:space="preserve">
    <value>Flat</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.In" xml:space="preserve">
    <value>in</value>
    <comment>used like this: occurrences IN files</comment>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.OccurrencesCount" xml:space="preserve">
    <value>${Count} occurrences</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.OccurrencesOf" xml:space="preserve">
    <value>Occurrences of '${Pattern}'</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.OneFile" xml:space="preserve">
    <value>1 file</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.OneOccurrence" xml:space="preserve">
    <value>1 occurrence</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.PerFile" xml:space="preserve">
    <value>Per file</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.SelectViewMode.ToolTip" xml:space="preserve">
    <value>Select search list mode</value>
  </data>
  <data name="MainWindow.Windows.SearchResultPanel.ShowLast.ToolTip" xml:space="preserve">
    <value>Show last searches</value>
  </data>
  <data name="MainWindow.Windows.SearchResultsLabel" xml:space="preserve">
    <value>Search Results</value>
  </data>
  <data name="MainWindow.Windows.TaskList" xml:space="preserve">
    <value>Task List</value>
  </data>
  <data name="MainWindow.Windows.ToolbarLabel" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="MainWindow.Windows.TreeView.CollapseCurrent" xml:space="preserve">
    <value>Collapse current</value>
  </data>
  <data name="MainWindow.Windows.TreeView.ExpandCurrent" xml:space="preserve">
    <value>Expand current</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ClearResults" xml:space="preserve">
    <value>Clear results</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ExpandAllFailures" xml:space="preserve">
    <value>Expand all failures</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ExpandAllIgnoredTests" xml:space="preserve">
    <value>Expand all ignored</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ExpandCurrentFailures" xml:space="preserve">
    <value>Expand current failures</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.ExpandCurrentIgnoredTests" xml:space="preserve">
    <value>Expand current ignored</value>
  </data>
  <data name="MainWindow.Windows.UnitTestsTreeView.TreeMenu" xml:space="preserve">
    <value>Tree</value>
  </data>
  <data name="MainWindow.XmlValidationMessages.ValidationFailed" xml:space="preserve">
    <value>Validation: failed</value>
    <comment>Displayed in the output window when the xml validation failed.</comment>
  </data>
  <data name="MainWindow.XmlValidationMessages.ValidationStarted" xml:space="preserve">
    <value>------ Validating XML ------</value>
    <comment>Displayed in output window to indicate that the xml validation has started.</comment>
  </data>
  <data name="MainWindow.XmlValidationMessages.ValidationSuccess" xml:space="preserve">
    <value>Validation:  succeeded</value>
    <comment>Displayed in the output window after the xml has been successfully validated.</comment>
  </data>
  <data name="NUnitPad.NUnitPadContent.CancelItem" xml:space="preserve">
    <value>Unloads the test assemblies, cancels the auto loading.</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.GotoDefinitionContextMenuLabel" xml:space="preserve">
    <value>&amp;Goto definition</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.ReferenceItem" xml:space="preserve">
    <value>Add reference to NUnit to the current selected project</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.RefreshItem" xml:space="preserve">
    <value>Reloads the test assemblies</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.RunAllTests" xml:space="preserve">
    <value>Run all tests</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.RunItem" xml:space="preserve">
    <value>Run tests</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.RunTestsContextMenuLabel" xml:space="preserve">
    <value>Run tests</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.StopTests" xml:space="preserve">
    <value>Stop tests</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.TestTreeView.ClickOnRunInformationNode" xml:space="preserve">
    <value>Click on run tests or refresh to activate testing</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.TestTreeView.LoadingErrorNode" xml:space="preserve">
    <value>Loading error</value>
  </data>
  <data name="NUnitPad.NUnitPadContent.TestTreeView.TestFailedMessage" xml:space="preserve">
    <value>Test case '${TestCase}' failed.</value>
    <comment>Indicates that the test failed if the test has no error message to display. 

Removed the end part of the original message ", reason '${Message}'" since this is often not visible in the errors list if the test case name is long.</comment>
  </data>
  <data name="NUnitPad.NUnitPadContent.TestTreeView.TestNotExecutedMessage" xml:space="preserve">
    <value>Test case '${TestCase}' was not executed.</value>
  </data>
  <data name="ObjectBrowser.Menu.GoBack" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="ObjectBrowser.Menu.LoadAssembly" xml:space="preserve">
    <value>Load Assembly...</value>
  </data>
  <data name="ObjectBrowser.Menu.LoadRef" xml:space="preserve">
    <value>Load Referenced Assemblies</value>
  </data>
  <data name="ObjectBrowser.Menu.LoadStd" xml:space="preserve">
    <value>Load Standard Assemblies</value>
  </data>
  <data name="OpenFileTabEventHandler.ContextMenu.Close" xml:space="preserve">
    <value>C&amp;lose</value>
  </data>
  <data name="OpenFileTabEventHandler.ContextMenu.CloseAllButThis" xml:space="preserve">
    <value>Close all &amp;but this</value>
  </data>
  <data name="OpenFileTabEventHandler.ContextMenu.Save" xml:space="preserve">
    <value>S&amp;ave</value>
  </data>
  <data name="OpenFileTabEventHandler.ContextMenu.SaveAs" xml:space="preserve">
    <value>Save A&amp;s...</value>
  </data>
  <data name="OpenFileTabEventHandler.CopyPathName" xml:space="preserve">
    <value>Copy file path/name</value>
  </data>
  <data name="OpenFileTabEventHandler.FileContainingFolderInExplorer" xml:space="preserve">
    <value>Open Containing Folder In Explorer</value>
    <comment>String for the editor tab context menu that will open the directory in which a documents file is contained in Windows Explorer.</comment>
  </data>
  <data name="ProjectBrowser.Toolbar.CollapseAll" xml:space="preserve">
    <value>Collapse all nodes</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles" xml:space="preserve">
    <value>Add existing files</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.Link" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.Question" xml:space="preserve">
    <value>Do you want to copy the file(s) to the target directory or do you want to create link(s) to the current location of the file(s)?</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.ReplaceExistingFile" xml:space="preserve">
    <value>A file with the name '${FileName}' already exists. Do you want to replace it?</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddExistingFiles.ReplaceExistingFile.Title" xml:space="preserve">
    <value>Replace existing file</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddItem" xml:space="preserve">
    <value>Add &amp;Item...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddMenu" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddReference" xml:space="preserve">
    <value>Add Reference</value>
  </data>
  <data name="ProjectComponent.ContextMenu.AddWebReference" xml:space="preserve">
    <value>Add Web Reference</value>
    <comment>Right click context menu option to add a web reference to the project.</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.Build" xml:space="preserve">
    <value>B&amp;uild</value>
  </data>
  <data name="ProjectComponent.ContextMenu.Clean" xml:space="preserve">
    <value>Clea&amp;n</value>
  </data>
  <data name="ProjectComponent.ContextMenu.CollapseAll" xml:space="preserve">
    <value>Collapse all</value>
    <comment>Collapses this node and all its subtree in project browser (i.e. solution explorer)</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.Delete.Question" xml:space="preserve">
    <value>Delete '${FileName}' permanently?</value>
  </data>
  <data name="ProjectComponent.ContextMenu.DeleteWithContents.Question" xml:space="preserve">
    <value>Delete '${FileName}' and all its contents permanently?</value>
  </data>
  <data name="ProjectComponent.ContextMenu.DeleteWithDependentFiles.Question" xml:space="preserve">
    <value>Delete '${FileName}' and its dependent files permanently?</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExcludeFileFromProject" xml:space="preserve">
    <value>Exclude From Project</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExecuteCustomTool" xml:space="preserve">
    <value>Execute custom tool</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingFolder" xml:space="preserve">
    <value>Existing folder...</value>
    <comment>Project &gt; Add &gt; Existing folder</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingFolder.CopyQuestion" xml:space="preserve">
    <value>Do you want to copy the folder to the target directory?</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingItem" xml:space="preserve">
    <value>Existing Item...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingItemAsDependent" xml:space="preserve">
    <value>Existing Item as Dependent Item...</value>
    <comment>Context menu entry for a file; adds an existing item which will be dependent upon the selected file</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.ExistingProject" xml:space="preserve">
    <value>&amp;Existing Project...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation" xml:space="preserve">
    <value>Build documentation from XML comments</value>
    <comment>Build documentation from XML comments using Sandcastle</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation.NeedToEditBuildOptions" xml:space="preserve">
    <value>You need to edit the project build options to generate a xml documentation file.</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation.ProjectNeedsToBeCompiled" xml:space="preserve">
    <value>You need to compile the project.</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation.ProjectNeedsToBeCompiled2" xml:space="preserve">
    <value>The xml documentation file does not exist, you need to compile the project.</value>
  </data>
  <data name="ProjectComponent.ContextMenu.GenerateDocumentation.SHFBNotFound" xml:space="preserve">
    <value>Generating documentation from XML comments requires the 'Sandcastle Help File Builder' to be installed.</value>
    <comment>Message when clicking on 'generate documentation' and SHFB is missing</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.HtmlExport" xml:space="preserve">
    <value>Html E&amp;xport</value>
  </data>
  <data name="ProjectComponent.ContextMenu.IncludeFileInProject" xml:space="preserve">
    <value>Include In Project</value>
  </data>
  <data name="ProjectComponent.ContextMenu.IncludeMenu.InCompile" xml:space="preserve">
    <value>Compile</value>
  </data>
  <data name="ProjectComponent.ContextMenu.IncludeMenu.InDeploy" xml:space="preserve">
    <value>Deploy</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewDependentItem" xml:space="preserve">
    <value>New Dependent Item...</value>
    <comment>Context menu entry for a file; adds a new file which will be dependent upon the selected file</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.NewFolder" xml:space="preserve">
    <value>N&amp;ew Folder</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewItem" xml:space="preserve">
    <value>&amp;New Item...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewProject" xml:space="preserve">
    <value>&amp;New Project...</value>
  </data>
  <data name="ProjectComponent.ContextMenu.NewSolutionFolder" xml:space="preserve">
    <value>New Solution &amp;Folder</value>
  </data>
  <data name="ProjectComponent.ContextMenu.Open" xml:space="preserve">
    <value>O&amp;pen</value>
  </data>
  <data name="ProjectComponent.ContextMenu.OpenProjectOutputFolder" xml:space="preserve">
    <value>Open Output Folder</value>
    <comment>Opens the output folder (where the project binaries get created) in windows explorer.</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.Rebuild" xml:space="preserve">
    <value>R&amp;ebuild</value>
  </data>
  <data name="ProjectComponent.ContextMenu.RefreshWebReference" xml:space="preserve">
    <value>Refresh Web Reference</value>
    <comment>Right click context menu option that will update/refresh the web reference (i.e. regenerates the web proxy and downloads any extra files from the web service url).</comment>
  </data>
  <data name="ProjectComponent.ContextMenu.Rename" xml:space="preserve">
    <value>Re&amp;name</value>
  </data>
  <data name="ProjectComponent.ContextMenu.RunProject" xml:space="preserve">
    <value>&amp;Run Project</value>
  </data>
  <data name="ProjectComponent.ContextMenu.SetAsStartupProject" xml:space="preserve">
    <value>Set as St&amp;artUp Project</value>
  </data>
  <data name="ProjectComponent.NewFolderString" xml:space="preserve">
    <value>New Folder</value>
  </data>
  <data name="ProjectComponent.ProjectComponent.RemoveAllWebReferences.RemoveAllWebReferencesQuestion" xml:space="preserve">
    <value>Do you want to delete all web references from project {0}?</value>
  </data>
  <data name="ProjectComponent.RemoveAllWebReferences.Title" xml:space="preserve">
    <value>Delete all web references</value>
    <comment>Title of the dialog box when the user tries to remove all web references.</comment>
  </data>
  <data name="ReflectorAddIn.IdeOptions.FindReflectorPath" xml:space="preserve">
    <value>Select Reflector path</value>
    <comment>Button to select the Reflector path</comment>
  </data>
  <data name="ReflectorAddIn.IdeOptions.ReflectorFoundInPath" xml:space="preserve">
    <value>Reflector was found in the following directory:</value>
  </data>
  <data name="ReflectorAddIn.IdeOptions.ReflectorTitle" xml:space="preserve">
    <value>Reflector</value>
    <comment>Title of Reflector path option panel</comment>
  </data>
  <data name="ReflectorAddIn.OpenReflectorCommand" xml:space="preserve">
    <value>Open .NET Reflector</value>
  </data>
  <data name="ReflectorAddIn.ReflectorDoesNotExist" xml:space="preserve">
    <value>Reflector could not be found at the specified location, or SharpDevelop does not have sufficient rights to access it.</value>
  </data>
  <data name="ReflectorAddIn.ReflectorPathNotSet" xml:space="preserve">
    <value>The path to Reflector has not been set yet.</value>
  </data>
  <data name="ReflectorAddIn.ReflectorRemotingFailed" xml:space="preserve">
    <value>Failed to connect to Reflector.</value>
  </data>
  <data name="ReflectorAddIn.SetReflectorPathDialog.PathToReflectorExe" xml:space="preserve">
    <value>Full path to Reflector.exe</value>
  </data>
  <data name="ReflectorAddIn.SetReflectorPathDialog.ReflectorInfo" xml:space="preserve">
    <value>This feature requires Red Gate's .NET Reflector. If you do not have it yet, you can download it for free there:</value>
  </data>
  <data name="ReflectorAddIn.SetReflectorPathDialogTitle" xml:space="preserve">
    <value>Set path to Reflector</value>
  </data>
  <data name="RegExpTk.MainDialog.Assemblies" xml:space="preserve">
    <value>Assemblies (*.dll)|*.dll</value>
  </data>
  <data name="RegExpTk.MainDialog.Assembly" xml:space="preserve">
    <value>Assembly</value>
  </data>
  <data name="RegExpTk.MainDialog.Classname" xml:space="preserve">
    <value>Class name</value>
  </data>
  <data name="RegExpTk.MainDialog.CompileTab" xml:space="preserve">
    <value>Compile</value>
  </data>
  <data name="RegExpTk.MainDialog.CreateAssembly" xml:space="preserve">
    <value>Create assembly</value>
  </data>
  <data name="RegExpTk.MainDialog.ECMA" xml:space="preserve">
    <value>ECMA script</value>
  </data>
  <data name="RegExpTk.MainDialog.EndColumn" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="RegExpTk.MainDialog.ExplicitCapture" xml:space="preserve">
    <value>Explcit capture</value>
  </data>
  <data name="RegExpTk.MainDialog.GroupsColumn" xml:space="preserve">
    <value>Groups</value>
  </data>
  <data name="RegExpTk.MainDialog.IgnoreCase" xml:space="preserve">
    <value>Ignore case</value>
  </data>
  <data name="RegExpTk.MainDialog.IgnoreWhitespace" xml:space="preserve">
    <value>Ignore pattern whitespace</value>
  </data>
  <data name="RegExpTk.MainDialog.Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="RegExpTk.MainDialog.LengthColumn" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="RegExpTk.MainDialog.Multiline" xml:space="preserve">
    <value>Multiline</value>
  </data>
  <data name="RegExpTk.MainDialog.Namespace" xml:space="preserve">
    <value>Namespace</value>
  </data>
  <data name="RegExpTk.MainDialog.PublicVisible" xml:space="preserve">
    <value>Public visible</value>
  </data>
  <data name="RegExpTk.MainDialog.Regex" xml:space="preserve">
    <value>Regular expression</value>
  </data>
  <data name="RegExpTk.MainDialog.Replace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="RegExpTk.MainDialog.Replacement" xml:space="preserve">
    <value>Replacement string</value>
  </data>
  <data name="RegExpTk.MainDialog.ReplaceResult" xml:space="preserve">
    <value>Replace result</value>
  </data>
  <data name="RegExpTk.MainDialog.RightToLeft" xml:space="preserve">
    <value>Right to left</value>
  </data>
  <data name="RegExpTk.MainDialog.ShowGroups" xml:space="preserve">
    <value>Show groups</value>
  </data>
  <data name="RegExpTk.MainDialog.Singleline" xml:space="preserve">
    <value>Singleline</value>
  </data>
  <data name="RegExpTk.MainDialog.StartColumn" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="RegExpTk.MainDialog.StringColumn" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="RegExpTk.MainDialog.TestTab" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="RegExpTk.Messages.ClassNameMissing" xml:space="preserve">
    <value>Class name can't be empty</value>
  </data>
  <data name="RegExpTk.Messages.CompilationError" xml:space="preserve">
    <value>Regex compilation failed, reason:</value>
  </data>
  <data name="RegExpTk.Messages.CreationError" xml:space="preserve">
    <value>Regex creation error, reason:</value>
  </data>
  <data name="RegExpTk.Messages.FileCreated" xml:space="preserve">
    <value>File has been successfully created:</value>
  </data>
  <data name="RegExpTk.Messages.FilenameInvalid" xml:space="preserve">
    <value>Please enter a valid filename</value>
  </data>
  <data name="RegExpTk.Messages.FilenameMissing" xml:space="preserve">
    <value>Please enter a filename</value>
  </data>
  <data name="RegExpTk.Messages.Match" xml:space="preserve">
    <value>match</value>
  </data>
  <data name="RegExpTk.Messages.Matches" xml:space="preserve">
    <value>matches</value>
  </data>
  <data name="RegExpTk.Messages.RegexMissing" xml:space="preserve">
    <value>Please enter a regular expression</value>
  </data>
  <data name="RegExpTk.RegExpMenu.DigitCharacter" xml:space="preserve">
    <value>Digit character</value>
  </data>
  <data name="RegExpTk.RegExpMenu.NonDigitCharacter" xml:space="preserve">
    <value>Non-digit character</value>
  </data>
  <data name="RegExpTk.RegExpMenu.NonWhitespaceCharacter" xml:space="preserve">
    <value>Non-whitespace character</value>
  </data>
  <data name="RegExpTk.RegExpMenu.NonWordCharacter" xml:space="preserve">
    <value>Non-word character value</value>
  </data>
  <data name="RegExpTk.RegExpMenu.UngreedyStar" xml:space="preserve">
    <value>Ungreedy star</value>
    <comment>An ungreedy star can match any number of characters, but unlike the normal star, it only matches as few as required (by the rest of the expression).</comment>
  </data>
  <data name="RegExpTk.RegExpMenu.WhitespaceCharacter" xml:space="preserve">
    <value>Whitespace character</value>
  </data>
  <data name="RegExpTk.RegExpMenu.WordBorder" xml:space="preserve">
    <value>Word border</value>
    <comment>"Word border" is a "character" of length 0 representing a location between word and non-word character - either start or end of a word.</comment>
  </data>
  <data name="RegExpTk.RegExpMenu.WordCharacter" xml:space="preserve">
    <value>Word character value</value>
  </data>
  <data name="ResourceEditor.BitmapView.UpdateBitmap" xml:space="preserve">
    <value>Update bitmap ...</value>
    <comment>Text for the link label that make it possible to update the stored bitmap</comment>
  </data>
  <data name="ResourceEditor.DeleteEntry.Confirm" xml:space="preserve">
    <value>Do you really want to delete the selected resource(s)?</value>
  </data>
  <data name="ResourceEditor.DeleteEntry.Title" xml:space="preserve">
    <value>Delete resource</value>
  </data>
  <data name="ResourceEditor.Messages.CantLoadResource" xml:space="preserve">
    <value>Can't load resource</value>
    <comment>start of messagebox warning text, ex:

"Can't load resource" + resourceName</comment>
  </data>
  <data name="ResourceEditor.ResourceCodeGeneratorTool.ClassConflict" xml:space="preserve">
    <value>Error: Resource code generator is skipping resource file "{0}" because the generated class would conflict with the existing class "{1}".</value>
  </data>
  <data name="ResourceEditor.ResourceCodeGeneratorTool.CouldNotGenerateResourceProperty" xml:space="preserve">
    <value>Resource code generator: No resource property could be generated for resource '{0}'.</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContentColumn" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.AddFiles" xml:space="preserve">
    <value>Add &amp;files...</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.AddStringEntry" xml:space="preserve">
    <value>Add string e&amp;ntry</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.CopyResourceName" xml:space="preserve">
    <value>Copy resource name</value>
    <comment>Context menu item; copies the name of the currently selcted resource item to the clipboard</comment>
  </data>
  <data name="ResourceEditor.ResourceEdit.ContextMenu.Rename" xml:space="preserve">
    <value>&amp;Rename</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.ShowAsHexDump" xml:space="preserve">
    <value>Show as Hex Dump</value>
  </data>
  <data name="ResourceEditor.ResourceEdit.TypeColumn" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ResourceEditor.ResourceList.KeyAlreadyDefinedWarning" xml:space="preserve">
    <value>This key is already defined! Please choose another one.</value>
  </data>
  <data name="SharpDevelop.FileFilter.AllFiles" xml:space="preserve">
    <value>All files (*.*)</value>
  </data>
  <data name="SharpDevelop.FileFilter.AssemblyFiles" xml:space="preserve">
    <value>Assembly Files (*.exe;*.dll)</value>
  </data>
  <data name="SharpDevelop.FileFilter.BinaryFiles" xml:space="preserve">
    <value>Binary files</value>
  </data>
  <data name="SharpDevelop.FileFilter.Boo" xml:space="preserve">
    <value>Boo Files</value>
  </data>
  <data name="SharpDevelop.FileFilter.BooPrjFiles" xml:space="preserve">
    <value>Boo Project Files</value>
  </data>
  <data name="SharpDevelop.FileFilter.CombineFiles" xml:space="preserve">
    <value>Combine Files (*.cmbx)</value>
  </data>
  <data name="SharpDevelop.FileFilter.CPPFiles" xml:space="preserve">
    <value>C++ files (*.cpp;*.c;*.hpp;*.h)</value>
  </data>
  <data name="SharpDevelop.FileFilter.CSharpFiles" xml:space="preserve">
    <value>C# Files (*.cs)</value>
  </data>
  <data name="SharpDevelop.FileFilter.CSharpPrjFiles" xml:space="preserve">
    <value>C# Project Files</value>
  </data>
  <data name="SharpDevelop.FileFilter.CursorFiles" xml:space="preserve">
    <value>Cursor files</value>
  </data>
  <data name="SharpDevelop.FileFilter.ExecutableFiles" xml:space="preserve">
    <value>Executable Files (*.exe;*.com;*.pif;*.bat;*.cmd)</value>
  </data>
  <data name="SharpDevelop.FileFilter.Icons" xml:space="preserve">
    <value>Icon Files (*.ico)</value>
  </data>
  <data name="SharpDevelop.FileFilter.ILAsm" xml:space="preserve">
    <value>IL Files</value>
  </data>
  <data name="SharpDevelop.FileFilter.ILAsmPrjFiles" xml:space="preserve">
    <value>ILAsm Project Files</value>
  </data>
  <data name="SharpDevelop.FileFilter.ImageFiles" xml:space="preserve">
    <value>Image files</value>
  </data>
  <data name="SharpDevelop.FileFilter.KeyFiles" xml:space="preserve">
    <value>Key files</value>
    <comment>File filter for .snk, .pfx and .key files</comment>
  </data>
  <data name="SharpDevelop.FileFilter.NAnt" xml:space="preserve">
    <value>NAnt Build Files</value>
  </data>
  <data name="SharpDevelop.FileFilter.PrjxFiles" xml:space="preserve">
    <value>SharpDevelop 1.1 Project Files (*.prjx)</value>
  </data>
  <data name="SharpDevelop.FileFilter.ResourceFiles" xml:space="preserve">
    <value>Resource Files</value>
  </data>
  <data name="SharpDevelop.FileFilter.SolutionFiles" xml:space="preserve">
    <value>Solutions (*.sln)</value>
  </data>
  <data name="SharpDevelop.FileFilter.VBNetFiles" xml:space="preserve">
    <value>VB Files (*.vb)</value>
  </data>
  <data name="SharpDevelop.FileFilter.VBNetPrjFiles" xml:space="preserve">
    <value>Visual Basic Project Files</value>
  </data>
  <data name="SharpDevelop.FileFilter.XmlFiles" xml:space="preserve">
    <value>XML Files (*.xml)</value>
  </data>
  <data name="SharpDevelop.FileFilter.XmlSchemaFiles" xml:space="preserve">
    <value>XML Schema Files (*.xsd)</value>
    <comment>File filter for .xsd files.</comment>
  </data>
  <data name="SharpDevelop.FileFilter.XslFiles" xml:space="preserve">
    <value>XSL files</value>
  </data>
  <data name="SharpDevelop.FormsDesigner.ContextMenus.SelectionMenu.AlignToGrid" xml:space="preserve">
    <value>Align to &amp;Grid</value>
  </data>
  <data name="SharpDevelop.FormsDesigner.ContextMenus.ViewCodeCommand" xml:space="preserve">
    <value>View &amp;Code</value>
  </data>
  <data name="SharpDevelop.Gui.Dialogs.WizardDialog.StepsLabel" xml:space="preserve">
    <value>Steps</value>
  </data>
  <data name="SharpDevelop.HexEditor.StreamAdded" xml:space="preserve">
    <value>Stream added!</value>
  </data>
  <data name="SharpDevelop.Refactoring.BaseClassesOf" xml:space="preserve">
    <value>Base classes of ${Name}</value>
  </data>
  <data name="SharpDevelop.Refactoring.CannotPerformOperationBecauseOfSyntaxErrors" xml:space="preserve">
    <value>The operation cannot be performed because your source code contains errors:</value>
  </data>
  <data name="SharpDevelop.Refactoring.CannotRenameBecauseNotUserCode" xml:space="preserve">
    <value>The element cannot be renamed because it is not defined in user code.</value>
  </data>
  <data name="SharpDevelop.Refactoring.CannotRenameElement" xml:space="preserve">
    <value>The element at the caret position cannot be renamed.</value>
  </data>
  <data name="SharpDevelop.Refactoring.ClassesDerivingFrom" xml:space="preserve">
    <value>Classes deriving from ${Name}</value>
    <comment>Title for search results for derived classes</comment>
  </data>
  <data name="SharpDevelop.Refactoring.ConvertToAutomaticProperty" xml:space="preserve">
    <value>Convert to automatic property</value>
  </data>
  <data name="SharpDevelop.Refactoring.CreateChangedEvent" xml:space="preserve">
    <value>Create Changed-event</value>
  </data>
  <data name="SharpDevelop.Refactoring.CreateGetter" xml:space="preserve">
    <value>Create &amp;getter</value>
  </data>
  <data name="SharpDevelop.Refactoring.CreateOnEventMethod" xml:space="preserve">
    <value>Create OnEvent-method</value>
  </data>
  <data name="SharpDevelop.Refactoring.CreateProperty" xml:space="preserve">
    <value>Create &amp;property</value>
  </data>
  <data name="SharpDevelop.Refactoring.CurrentMethod" xml:space="preserve">
    <value>Current method</value>
  </data>
  <data name="SharpDevelop.Refactoring.DeclaringType" xml:space="preserve">
    <value>Declaring type</value>
    <comment>Menu item that contains refactoring entries for the class that contains the selected member.</comment>
  </data>
  <data name="SharpDevelop.Refactoring.ExpandAutomaticProperty" xml:space="preserve">
    <value>Expand automatic property</value>
  </data>
  <data name="SharpDevelop.Refactoring.ExtractInterfaceCommand" xml:space="preserve">
    <value>Extract Interface</value>
    <comment>Used by the refactoring context menu to call the Extract Interface dialog.</comment>
  </data>
  <data name="SharpDevelop.Refactoring.FindBaseClassesCommand" xml:space="preserve">
    <value>Find base classes</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindDerivedClassesCommand" xml:space="preserve">
    <value>Find &amp;derived classes</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindDerivedClassesOrOverridesCommand" xml:space="preserve">
    <value>Find derived symbols</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindingReferences" xml:space="preserve">
    <value>Finding references...</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindOverridesCommand" xml:space="preserve">
    <value>Find &amp;overrides</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindReferences" xml:space="preserve">
    <value>Find References</value>
  </data>
  <data name="SharpDevelop.Refactoring.FindReferencesCommand" xml:space="preserve">
    <value>&amp;Find references</value>
  </data>
  <data name="SharpDevelop.Refactoring.GoToBaseClassCommand" xml:space="preserve">
    <value>Go to &amp;base class</value>
  </data>
  <data name="SharpDevelop.Refactoring.GoToBaseCommand" xml:space="preserve">
    <value>Go to &amp;base</value>
  </data>
  <data name="SharpDevelop.Refactoring.GoToProperty" xml:space="preserve">
    <value>Go to &amp;property</value>
  </data>
  <data name="SharpDevelop.Refactoring.ImplementAbstractClass" xml:space="preserve">
    <value>Implement abstract class</value>
  </data>
  <data name="SharpDevelop.Refactoring.ImplementInterface" xml:space="preserve">
    <value>Implement interface</value>
  </data>
  <data name="SharpDevelop.Refactoring.ImplementInterfaceExplicit" xml:space="preserve">
    <value>Implement interface (explicit)</value>
  </data>
  <data name="SharpDevelop.Refactoring.ImplementInterfaceImplicit" xml:space="preserve">
    <value>Implement interface (implicit)</value>
  </data>
  <data name="SharpDevelop.Refactoring.InvalidName" xml:space="preserve">
    <value>Names may only contain letters, digits or underscores.</value>
  </data>
  <data name="SharpDevelop.Refactoring.InvalidNameStart" xml:space="preserve">
    <value>Names must start with a letter or underscore.</value>
  </data>
  <data name="SharpDevelop.Refactoring.LoadSolutionProjectsThreadRunning" xml:space="preserve">
    <value>Find references cannot be executed until all files have been parsed.</value>
  </data>
  <data name="SharpDevelop.Refactoring.MoveClassToFile" xml:space="preserve">
    <value>Move class to file '${FileName}'</value>
  </data>
  <data name="SharpDevelop.Refactoring.OverridesOf" xml:space="preserve">
    <value>Overrides of ${Name}</value>
  </data>
  <data name="SharpDevelop.Refactoring.ReferencesTo" xml:space="preserve">
    <value>References to ${Name}</value>
    <comment>Title for search results for references</comment>
  </data>
  <data name="SharpDevelop.Refactoring.RemoveUnusedImports" xml:space="preserve">
    <value>Remove &amp;unused import statements</value>
  </data>
  <data name="SharpDevelop.Refactoring.Rename" xml:space="preserve">
    <value>Rename</value>
    <comment>Title of rename input box</comment>
  </data>
  <data name="SharpDevelop.Refactoring.RenameClassText" xml:space="preserve">
    <value>Enter the new name of the class:</value>
  </data>
  <data name="SharpDevelop.Refactoring.RenameCommand" xml:space="preserve">
    <value>&amp;Rename</value>
    <comment>Menu command to rename a member</comment>
  </data>
  <data name="SharpDevelop.Refactoring.RenameFieldAndProperty" xml:space="preserve">
    <value>Should SharpDevelop rename the property '{0}' to '{1}'?</value>
    <comment>displayed when a field that has a property is renamed</comment>
  </data>
  <data name="SharpDevelop.Refactoring.RenameFileTo" xml:space="preserve">
    <value>Rename file to '${FileName}'</value>
  </data>
  <data name="SharpDevelop.Refactoring.RenameMemberText" xml:space="preserve">
    <value>Enter the new name of the member</value>
  </data>
  <data name="SharpDevelop.SideBar.AsciiTable" xml:space="preserve">
    <value>ASCII Table</value>
  </data>
  <data name="SharpDevelop.SideBar.ClipboardRing" xml:space="preserve">
    <value>Clipboard Ring</value>
  </data>
  <data name="SharpDevelop.SideBar.CSharpDocumentationTags" xml:space="preserve">
    <value>C# Documentation Tags</value>
  </data>
  <data name="SharpDevelop.SideBar.GeneralCategory" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="SharpDevelop.SideBar.LicensesTags" xml:space="preserve">
    <value>Licenses</value>
  </data>
  <data name="SharpDevelop.SideBar.NoToolsAvailableForCurrentDocument" xml:space="preserve">
    <value>There are no tools available for the current document.</value>
    <comment>Text shown in the 'tools' pad when there are no tools available</comment>
  </data>
  <data name="SharpDevelop.SideBar.XSLTTags" xml:space="preserve">
    <value>XSL-T</value>
  </data>
  <data name="SharpDevelop.Solution.AllKnownProjectFormats" xml:space="preserve">
    <value>All known project formats</value>
  </data>
  <data name="SharpDevelop.Solution.CannotLoadOldSolution" xml:space="preserve">
    <value>This SharpDevelop version cannot load projects created using Visual Studio .NET 2003 (or earlier).
Try using SharpDevelop 3.2 for the conversion; or create a new project and add the existing source code files.</value>
  </data>
  <data name="SharpDevelop.Solution.CannotSave.IOException" xml:space="preserve">
    <value>Could not save {0}:\n{1}</value>
    <comment>{0} is the name of the solution.
{1} is the IOException.Message property.</comment>
  </data>
  <data name="SharpDevelop.Solution.CannotSave.ReadOnly" xml:space="preserve">
    <value>Cannot save solution file {0}. It is marked readonly.</value>
    <comment>{0} is the name of the sln file.
Message shown when Solution.Save() is called on a solution with the ReadOnly attribute.</comment>
  </data>
  <data name="SharpDevelop.Solution.CannotSave.UnauthorizedAccessException" xml:space="preserve">
    <value>Could not save {0}:\n{1}\n\nEnsure the file is writable.</value>
    <comment>{0} is the file name of the solution.
{1} is the value of the property UnauthorizedAccessException.Message.</comment>
  </data>
  <data name="SharpDevelop.Solution.ImportResourceWarning" xml:space="preserve">
    <value>There were resource files in the project.
SharpDevelop 2 compiles resources different: the resource name is not just the file name; but it is prefixed with the root namespace and the directory name.

The resources files have been renamed/moved accordingly.</value>
  </data>
  <data name="SharpDevelop.Solution.ImportResourceWarningErrorText" xml:space="preserve">
    <value>The following files could not be renamed/moved automatically:</value>
    <comment>used when moving of files failed</comment>
  </data>
  <data name="SharpDevelop.Solution.InvalidSolutionFile" xml:space="preserve">
    <value>'{0}' is not a valid solution file.</value>
    <comment>Shown when .sln file contains invalid data.</comment>
  </data>
  <data name="SharpDevelop.Solution.UnknownSolutionVersion" xml:space="preserve">
    <value>Can't read Microsoft Solution file format {0}.</value>
  </data>
  <data name="SharpQuery.Error.InvalidValue" xml:space="preserve">
    <value>One (or more) of the parameter values are invalid.</value>
    <comment>Message displayed when the user write an invalid value into the prameter input windows</comment>
  </data>
  <data name="SharpQuery.Error.NotSuported" xml:space="preserve">
    <value>not supported by</value>
  </data>
  <data name="SharpQuery.Error.OpenError" xml:space="preserve">
    <value>Can't open the connection. Check your connection string.</value>
    <comment>Message displayed when #Query can't open a connection</comment>
  </data>
  <data name="SharpQuery.Error.ProcedureExecution" xml:space="preserve">
    <value>Can't execute the procedure due to an error.</value>
    <comment>Message displayed when an error occur during the execution of a procedure.</comment>
  </data>
  <data name="SharpQuery.Error.SQLExecution" xml:space="preserve">
    <value>Can't execute your SQL query due to an error</value>
    <comment>Message displayed when an error occur during a data extract or a SQL query</comment>
  </data>
  <data name="SharpQuery.Error.WrongConnectionString" xml:space="preserve">
    <value>Invalid connection string!</value>
    <comment>Message displayed when the connection string is wrong.</comment>
  </data>
  <data name="SharpQuery.Error.WrongKeyType" xml:space="preserve">
    <value>key must be of type String.</value>
  </data>
  <data name="SharpQuery.Error.WrongValueType" xml:space="preserve">
    <value>Value must be of type String.</value>
  </data>
  <data name="SharpQuery.Label.AddConnection" xml:space="preserve">
    <value>Add Connection ...</value>
    <comment>Context menu for add a connection in the sharpquery's treeview</comment>
  </data>
  <data name="SharpQuery.Label.Connect" xml:space="preserve">
    <value>Connect to database</value>
    <comment>context menu in the sharpquery's treeview</comment>
  </data>
  <data name="SharpQuery.Label.DataBasesRoot" xml:space="preserve">
    <value>Database connections</value>
    <comment>text of the root node into the sharpquery's treeview</comment>
  </data>
  <data name="SharpQuery.Label.Disconnect" xml:space="preserve">
    <value>Disconnect</value>
    <comment>context menu of the sharpquery's treeview</comment>
  </data>
  <data name="SharpQuery.Label.Execute" xml:space="preserve">
    <value>Execute</value>
    <comment>context menu that execute a SQL procedure</comment>
  </data>
  <data name="SharpQuery.Label.ExtractData" xml:space="preserve">
    <value>Extract Data</value>
    <comment>context menu command that extracts data from a table and display it into a grid.</comment>
  </data>
  <data name="SharpQuery.Label.ModifyConnection" xml:space="preserve">
    <value>Modify the connection ...</value>
    <comment>context menu that displays the windows connection properties to change a connection string.</comment>
  </data>
  <data name="SharpQuery.Label.ProceduresRoot" xml:space="preserve">
    <value>Procedures</value>
    <comment>name of the root procedures node into the sharpquery's treeview</comment>
  </data>
  <data name="SharpQuery.Label.Refresh" xml:space="preserve">
    <value>Refresh</value>
    <comment>context menu to refresh a connection</comment>
  </data>
  <data name="SharpQuery.Label.Remove" xml:space="preserve">
    <value>Remove</value>
    <comment>context menu to remove a connection from the sharpquery's treeview</comment>
  </data>
  <data name="SharpQuery.Label.Schemas" xml:space="preserve">
    <value>Schemas</value>
    <comment>i think this translatiopn is invariant because it's the technical name of schemas ...</comment>
  </data>
  <data name="SharpQuery.Label.SharpQuery" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="SharpQuery.Label.TablesRoot" xml:space="preserve">
    <value>Tables</value>
    <comment>Name of the root tables node in the treeview</comment>
  </data>
  <data name="SharpQuery.Label.ViewsRoot" xml:space="preserve">
    <value>Views</value>
    <comment>name of the root views node</comment>
  </data>
  <data name="SharpQuery.PadTitle" xml:space="preserve">
    <value>Database Explorer</value>
  </data>
  <data name="SharpQuery.ToolTip.AddConnection" xml:space="preserve">
    <value>Add connection</value>
    <comment>context menu to add a connection</comment>
  </data>
  <data name="SharpQuery.ToolTip.Refresh" xml:space="preserve">
    <value>Refresh</value>
    <comment>tooltip of the context menu taht refreshs a connection</comment>
  </data>
  <data name="SharpQuery.XMLForm.ResetButton" xml:space="preserve">
    <value>Reset</value>
    <comment>Caption a the button that reset the user parameters input</comment>
  </data>
  <data name="SharpQuery.XMLForm.SQLParameterDataType" xml:space="preserve">
    <value>Parameter's data type</value>
    <comment>Listview header column caption that list parameters data type</comment>
  </data>
  <data name="SharpQuery.XMLForm.SQLParameterInputTitle" xml:space="preserve">
    <value>Parameters input</value>
    <comment>Caption of the windows that allows a user to input parameters values while he executes a procedure in #Query.</comment>
  </data>
  <data name="SharpQuery.XMLForm.SQLParameterName" xml:space="preserve">
    <value>Parameter's name</value>
    <comment>displayed in column header of the listview that lists all parameters of a procedure</comment>
  </data>
  <data name="SharpQuery.XMLForm.SQLParameterType" xml:space="preserve">
    <value>Parameter's type</value>
    <comment>Caption of a listview header column that display parameters type</comment>
  </data>
  <data name="SharpQuery.XMLForm.SQLParameterValue" xml:space="preserve">
    <value>Parameter's value</value>
    <comment>Caption of a listview header column that display parameters values</comment>
  </data>
  <data name="SharpReport.AddinName" xml:space="preserve">
    <value>SharpDevelop Reports</value>
  </data>
  <data name="SharpReport.ContextMenu.Cut" xml:space="preserve">
    <value>Cut Field</value>
  </data>
  <data name="SharpReport.ContextMenu.FieldsList" xml:space="preserve">
    <value>Fields</value>
  </data>
  <data name="SharpReport.ContextMenu.Functions" xml:space="preserve">
    <value>Add Functions</value>
  </data>
  <data name="SharpReport.ContextMenu.Grouping" xml:space="preserve">
    <value>Grouping/Sorting</value>
    <comment>Manage grouping and sorting of the Data</comment>
  </data>
  <data name="SharpReport.ContextMenu.Paste" xml:space="preserve">
    <value>Paste Field</value>
  </data>
  <data name="SharpReport.ContextMenu.Preview" xml:space="preserve">
    <value>Show Preview</value>
  </data>
  <data name="SharpReport.ContextMenu.SectionVisible" xml:space="preserve">
    <value>Section Visible</value>
  </data>
  <data name="SharpReport.ContextMenu.Settings" xml:space="preserve">
    <value>Base Settings</value>
  </data>
  <data name="SharpReport.Design" xml:space="preserve">
    <value>Design</value>
  </data>
  <data name="SharpReport.Designer.DetailSection" xml:space="preserve">
    <value>DetailSection</value>
  </data>
  <data name="SharpReport.Designer.PageFooter" xml:space="preserve">
    <value>PageFooter</value>
  </data>
  <data name="SharpReport.Designer.PageHeader" xml:space="preserve">
    <value>PageHeader</value>
  </data>
  <data name="SharpReport.Designer.ReportFooter" xml:space="preserve">
    <value>ReportFooter</value>
  </data>
  <data name="SharpReport.Designer.ReportHeader" xml:space="preserve">
    <value>ReportHeader</value>
  </data>
  <data name="SharpReport.DesignView.Toolbar.Printer" xml:space="preserve">
    <value>Send report to printer</value>
  </data>
  <data name="Sharpreport.Error.NoPrinter" xml:space="preserve">
    <value>To run SharpDevelop Reports you need at least one(1) installed Printer</value>
    <comment>Errormessage when no printer is installed</comment>
  </data>
  <data name="SharpReport.Error.NoReport" xml:space="preserve">
    <value>This is not a valid report created with 'SharpReport'.</value>
  </data>
  <data name="SharpReport.Error.WrongFileFormat" xml:space="preserve">
    <value>Could not read file , file corrupt (SharpReportFile is improperly formatted)</value>
    <comment>Message when something is wrong with the file format</comment>
  </data>
  <data name="SharpReport.FieldsExplorer.AvailableFields" xml:space="preserve">
    <value>Available Fields</value>
  </data>
  <data name="SharpReport.FieldsExplorer.ContextMenu.Columns.Remove" xml:space="preserve">
    <value>Remove Node</value>
  </data>
  <data name="SharpReport.FieldsExplorer.ContextMenu.Columns.ToggleSort" xml:space="preserve">
    <value>Toggle Sortorder</value>
  </data>
  <data name="SharpReport.FieldsExplorer.ContextMenu.Section.Clear" xml:space="preserve">
    <value>Remove Nodes</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Functions" xml:space="preserve">
    <value>Functions</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Grouping" xml:space="preserve">
    <value>Grouping</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Parameters" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Sorting" xml:space="preserve">
    <value>Sorting</value>
  </data>
  <data name="SharpReport.FieldsExplorer.Title" xml:space="preserve">
    <value>Report Explorer</value>
  </data>
  <data name="SharpReport.Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="SharpReport.ReportGenerator" xml:space="preserve">
    <value>Report Generator</value>
  </data>
  <data name="SharpReport.ReportViewer" xml:space="preserve">
    <value>ReportViewer</value>
  </data>
  <data name="SharpReport.ReportViewer.FirstPageMessage" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="SharpReport.ReportViewer.LastPageMessage" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="SharpReport.ReportViewer.NextPage" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="SharpReport.ReportViewer.PagesCreatedMessage" xml:space="preserve">
    <value>Pages created</value>
  </data>
  <data name="SharpReport.ReportViewer.PdfFileMessage" xml:space="preserve">
    <value>Create PdfFile</value>
  </data>
  <data name="SharpReport.ReportViewer.PreviousPage" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="SharpReport.ReportViewer.ZoomMessage" xml:space="preserve">
    <value>Zoom</value>
  </data>
  <data name="SharpReport.Toolbar.Circle" xml:space="preserve">
    <value>Circle</value>
  </data>
  <data name="SharpReport.Toolbar.Controls" xml:space="preserve">
    <value>Reporting - Controls</value>
  </data>
  <data name="SharpReport.Toolbar.DataField" xml:space="preserve">
    <value>DataField</value>
  </data>
  <data name="SharpReport.Toolbar.DataRow" xml:space="preserve">
    <value>DataRow</value>
  </data>
  <data name="SharpReport.Toolbar.Functions" xml:space="preserve">
    <value>Reporting - Functions</value>
  </data>
  <data name="SharpReport.Toolbar.Functions.PageNumber" xml:space="preserve">
    <value>PageNumber</value>
  </data>
  <data name="SharpReport.Toolbar.Functions.PageNumberofNumbers" xml:space="preserve">
    <value>PageNumber of Numbers</value>
  </data>
  <data name="SharpReport.Toolbar.Functions.TodaysDate" xml:space="preserve">
    <value>Today</value>
  </data>
  <data name="SharpReport.Toolbar.GroupFooter" xml:space="preserve">
    <value>GroupFooter</value>
  </data>
  <data name="SharpReport.Toolbar.GroupHeader" xml:space="preserve">
    <value>GroupHeader</value>
  </data>
  <data name="SharpReport.Toolbar.Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="SharpReport.Toolbar.Line" xml:space="preserve">
    <value>Line</value>
  </data>
  <data name="SharpReport.Toolbar.Pointer" xml:space="preserve">
    <value>Pointer</value>
  </data>
  <data name="SharpReport.Toolbar.Rectangle" xml:space="preserve">
    <value>Rectangle</value>
  </data>
  <data name="SharpReport.Toolbar.Table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="SharpReport.Toolbar.TextBox" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings" xml:space="preserve">
    <value>Base settings</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings,ReportType" xml:space="preserve">
    <value>Report Type</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.GraphicsUnit" xml:space="preserve">
    <value>Graphics Unit</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.Group" xml:space="preserve">
    <value>Basic report settings</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportModel" xml:space="preserve">
    <value>Report Model</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportModel.FormSheet" xml:space="preserve">
    <value>Form Sheet</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportModel.Pull" xml:space="preserve">
    <value>Pull Data</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportModel.Push" xml:space="preserve">
    <value>Push Data</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportName" xml:space="preserve">
    <value>Report Name</value>
  </data>
  <data name="SharpReport.Wizard.BaseSettings.ReportType" xml:space="preserve">
    <value>Report Type</value>
  </data>
  <data name="SharpReport.Wizard.Layout.Column" xml:space="preserve">
    <value>Select the GroupColumn</value>
  </data>
  <data name="SharpReport.Wizard.Layout.Grouping" xml:space="preserve">
    <value>Grouping</value>
  </data>
  <data name="SharpReport.Wizard.Layout.ListLayout" xml:space="preserve">
    <value>List Layout</value>
  </data>
  <data name="SharpReport.Wizard.Layout.ReportLayout" xml:space="preserve">
    <value>Report layout</value>
  </data>
  <data name="SharpReport.Wizard.Layout.TableLayout" xml:space="preserve">
    <value>Table Layout</value>
  </data>
  <data name="SharpReport.Wizard.PullModel" xml:space="preserve">
    <value>Pull Data Model</value>
  </data>
  <data name="SharpReport.Wizard.PullModel.CommandText" xml:space="preserve">
    <value>Command Text</value>
  </data>
  <data name="SharpReport.Wizard.PullModel.CommandText.ToolTip" xml:space="preserve">
    <value>[Delete this text and enter a valid Sql String]</value>
  </data>
  <data name="SharpReport.Wizard.PushModel" xml:space="preserve">
    <value>Push Data Model</value>
  </data>
  <data name="SharpReport.Wizard.PushModel.AvailableFields" xml:space="preserve">
    <value>Available Fields</value>
  </data>
  <data name="SharpReport.Wizard.PushModel.Path" xml:space="preserve">
    <value>Path to Schema (.xsd) File</value>
  </data>
  <data name="SharpReport.Wizard.ResultPanel.SaveXsdComplete" xml:space="preserve">
    <value>Save Result (Schema and Data)</value>
    <comment>Save displayed Data to *.xsd File</comment>
  </data>
  <data name="SharpReport.Wizard.ResultPanel.SaveXsdSchemaOnly" xml:space="preserve">
    <value>Save Result (Schema only)</value>
    <comment>Save only the Schema to *.xsd File</comment>
  </data>
  <data name="SharpReport.Wizard.ShowQueryResult" xml:space="preserve">
    <value>Show Query result</value>
  </data>
  <data name="SideBarComponent.ContextMenu.AddTab" xml:space="preserve">
    <value>&amp;Add Tab</value>
  </data>
  <data name="SideBarComponent.ContextMenu.DeleteTab" xml:space="preserve">
    <value>&amp;Delete Tab</value>
  </data>
  <data name="SideBarComponent.ContextMenu.DeleteTabHeaderQuestion" xml:space="preserve">
    <value>Do you really want to delete tab "${TabHeader}" (this will also delete all items in tab)?</value>
  </data>
  <data name="SideBarComponent.ContextMenu.DeleteTabItem" xml:space="preserve">
    <value>&amp;Delete Item</value>
  </data>
  <data name="SideBarComponent.ContextMenu.DeleteTabItemQuestion" xml:space="preserve">
    <value>Do you really want to delete item "${TabItem}"?</value>
  </data>
  <data name="SideBarComponent.ContextMenu.RenameTab" xml:space="preserve">
    <value>&amp;Rename Tab</value>
  </data>
  <data name="SideBarComponent.ContextMenu.RenameTabItem" xml:space="preserve">
    <value>&amp;Rename Item</value>
  </data>
  <data name="StartPage.AuthorsMenu.BarNameName" xml:space="preserve">
    <value>Show Authors</value>
  </data>
  <data name="StartPage.AuthorsMenu.Name" xml:space="preserve">
    <value>Authors</value>
  </data>
  <data name="StartPage.ChangeLogMenu.BarNameName" xml:space="preserve">
    <value>Show Change Log</value>
  </data>
  <data name="StartPage.ChangeLogMenu.Name" xml:space="preserve">
    <value>ChangeLog</value>
  </data>
  <data name="StartPage.ContactUs" xml:space="preserve">
    <value>Contact Us</value>
  </data>
  <data name="StartPage.HelpWantedMenu.BarNameName" xml:space="preserve">
    <value>Help Wanted</value>
  </data>
  <data name="StartPage.HelpWantedMenu.Name" xml:space="preserve">
    <value>Help Wanted</value>
  </data>
  <data name="StartPage.StartMenu.BarNameName" xml:space="preserve">
    <value>Choose Project</value>
  </data>
  <data name="StartPage.StartMenu.LocationTable" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="StartPage.StartMenu.ModifiedTable" xml:space="preserve">
    <value>Modified</value>
  </data>
  <data name="StartPage.StartMenu.Name" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="StartPage.StartMenu.NewCombineButton" xml:space="preserve">
    <value>New solution</value>
  </data>
  <data name="StartPage.StartMenu.OpenCombineButton" xml:space="preserve">
    <value>Open solution</value>
  </data>
  <data name="StartPage.StartPageContentName" xml:space="preserve">
    <value>Start Page</value>
  </data>
  <data name="StatusBarService.CaretModes.Insert" xml:space="preserve">
    <value>INS</value>
  </data>
  <data name="StatusBarService.CaretModes.Overwrite" xml:space="preserve">
    <value>OVR</value>
  </data>
  <data name="StatusBarService.CursorStatusBarPanelText" xml:space="preserve">
    <value>ln ${Line} col ${Column} ch ${Character}</value>
  </data>
  <data name="Templates.File.#Develop.AddInOptions.Description" xml:space="preserve">
    <value>This class provides an easy access to persistent properties.</value>
  </data>
  <data name="Templates.File.#Develop.AddInOptions.Name" xml:space="preserve">
    <value>AddIn Options</value>
  </data>
  <data name="Templates.File.#Develop.MenuCommand.Description" xml:space="preserve">
    <value>An empty menu command for #D.</value>
  </data>
  <data name="Templates.File.#Develop.MenuCommand.Name" xml:space="preserve">
    <value>Menu Command</value>
  </data>
  <data name="Templates.File.#Develop.OptionPanel.Description" xml:space="preserve">
    <value>A #D option panel.</value>
  </data>
  <data name="Templates.File.#Develop.OptionPanel.Name" xml:space="preserve">
    <value>Option Panel</value>
  </data>
  <data name="Templates.File.#Develop.SimpleCommand.Description" xml:space="preserve">
    <value>A command which can be used for various occasions.</value>
  </data>
  <data name="Templates.File.#Develop.SimpleCommand.Name" xml:space="preserve">
    <value>Simple Command</value>
  </data>
  <data name="Templates.File.#Develop.SimplePad.Description" xml:space="preserve">
    <value>A #D pad content (for example the #D scouts).</value>
  </data>
  <data name="Templates.File.#Develop.SimplePad.Name" xml:space="preserve">
    <value>Empty Pad</value>
  </data>
  <data name="Templates.File.#Develop.View.Description" xml:space="preserve">
    <value>A #D view content (for example text editor or resource editor).</value>
  </data>
  <data name="Templates.File.#Develop.View.Name" xml:space="preserve">
    <value>Empty View</value>
  </data>
  <data name="Templates.File.Categories.Misc" xml:space="preserve">
    <value>Misc</value>
  </data>
  <data name="Templates.File.Categories.Setup" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="Templates.File.Categories.WindowsApplications" xml:space="preserve">
    <value>Windows Applications</value>
    <comment>Category for windows applications project/file templates.</comment>
  </data>
  <data name="Templates.File.ConfigurationElement.Description" xml:space="preserve">
    <value>Class that implements ConfigurationElement.</value>
    <comment>Description for CSharp.ConfigurationElement.xft</comment>
  </data>
  <data name="Templates.File.ConfigurationElement.Name" xml:space="preserve">
    <value>Configuration Element</value>
    <comment>Name of the CSharp.ConfigurationElement</comment>
  </data>
  <data name="Templates.File.ConfigurationElementCollection.Description" xml:space="preserve">
    <value>Class that inherits ConfigurationElementCollection.</value>
    <comment>Description string for ConfigurationElementCollection.xft</comment>
  </data>
  <data name="Templates.File.ConfigurationElementCollection.Name" xml:space="preserve">
    <value>Configuration Element Collection</value>
    <comment>Name string for ConfigurationElementCollection.xft</comment>
  </data>
  <data name="Templates.File.ConfigurationSection.Description" xml:space="preserve">
    <value>Class that implements ConfigurationSection</value>
    <comment>Description for CSharp.ConfigurationSection.xft</comment>
  </data>
  <data name="Templates.File.ConfigurationSection.Name" xml:space="preserve">
    <value>Configuration Section</value>
    <comment>Name for CSharp.ConfigurationSection.xft</comment>
  </data>
  <data name="Templates.File.EmptyClass.Description" xml:space="preserve">
    <value>An empty class declaration.</value>
  </data>
  <data name="Templates.File.EmptyClass.Name" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="Templates.File.EmptyFile.Description" xml:space="preserve">
    <value>Creates an empty file.</value>
  </data>
  <data name="Templates.File.EmptyFile.Name" xml:space="preserve">
    <value>Empty File</value>
  </data>
  <data name="Templates.File.Exception.Name" xml:space="preserve">
    <value>Exception</value>
  </data>
  <data name="Templates.File.GtkSharpWindow.Description" xml:space="preserve">
    <value>A window for a Gtk# application.</value>
    <comment>Description for Gtk# Window file template.</comment>
  </data>
  <data name="Templates.File.GtkSharpWindow.Name" xml:space="preserve">
    <value>Gtk# Window</value>
    <comment>Name of the file template for a Gtk# Window.</comment>
  </data>
  <data name="Templates.File.HeaderFile.Description" xml:space="preserve">
    <value>Creates an empty header file.</value>
  </data>
  <data name="Templates.File.HeaderFile.Name" xml:space="preserve">
    <value>Header File</value>
  </data>
  <data name="Templates.File.Html.EmptyHtml.Name" xml:space="preserve">
    <value>Empty HTML file</value>
  </data>
  <data name="Templates.File.Html.EmptyHtmlFile.Description" xml:space="preserve">
    <value>Creates an empty HTML file.</value>
  </data>
  <data name="Templates.File.Interface.Description" xml:space="preserve">
    <value>An empty interface declaration.</value>
  </data>
  <data name="Templates.File.Interface.Name" xml:space="preserve">
    <value>Interface</value>
  </data>
  <data name="Templates.File.Module.Description" xml:space="preserve">
    <value>An empty module declaration.</value>
  </data>
  <data name="Templates.File.Module.Name" xml:space="preserve">
    <value>Module</value>
    <comment>VB Module</comment>
  </data>
  <data name="Templates.File.MsBuild.Description" xml:space="preserve">
    <value>Creates a MSBuild file with an empty "Build" target.</value>
  </data>
  <data name="Templates.File.MsBuild.Name" xml:space="preserve">
    <value>MSBuild file</value>
  </data>
  <data name="Templates.File.MyExtensionClass.Description" xml:space="preserve">
    <value>A template for a class extending the "My" namespace.</value>
  </data>
  <data name="Templates.File.MyExtensionClass.Name" xml:space="preserve">
    <value>"My" extension</value>
  </data>
  <data name="Templates.File.NAnt.NAntBuildFile.Description" xml:space="preserve">
    <value>Creates a new NAnt build file.</value>
    <comment>Description for the NAnt build file template.</comment>
  </data>
  <data name="Templates.File.NAnt.NAntBuildFile.Name" xml:space="preserve">
    <value>NAnt Build File</value>
    <comment>Name for the template that creates a new  NAnt build file.</comment>
  </data>
  <data name="Templates.File.Properties.AddIFDEFTest" xml:space="preserve">
    <value>Add '#if TEST ... #endif'</value>
  </data>
  <data name="Templates.File.Properties.AddIFDEFTest.Description" xml:space="preserve">
    <value>If true, the class is only compiled when the TEST symbol is defined.</value>
  </data>
  <data name="Templates.File.Properties.AddSetupCode" xml:space="preserve">
    <value>Add setup code</value>
  </data>
  <data name="Templates.File.Properties.AddSetupCode.Description" xml:space="preserve">
    <value>If true, setup code will be generated.</value>
  </data>
  <data name="Templates.File.Properties.AddTearDownCode" xml:space="preserve">
    <value>Add tear down code</value>
  </data>
  <data name="Templates.File.Properties.AddTearDownCode.Description" xml:space="preserve">
    <value>If true, tear down code will be generated.</value>
  </data>
  <data name="Templates.File.Properties.ContextCategory" xml:space="preserve">
    <value>Context</value>
  </data>
  <data name="Templates.File.Properties.IsSealed.Description" xml:space="preserve">
    <value>Set to true to declare the class as sealed.</value>
    <comment>Class templates should use this property if they want to offer the user the option of creating their class as sealed.</comment>
  </data>
  <data name="Templates.File.Properties.OptionCategory" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="Templates.File.RecentFilesCollection.Description" xml:space="preserve">
    <value>Implements ConfigurationCollection for storing recently opened files in your application.</value>
  </data>
  <data name="Templates.File.RecentFilesCollection.Name" xml:space="preserve">
    <value>Recent files collection</value>
  </data>
  <data name="Templates.File.Resource.EmptyResourceFile.Description" xml:space="preserve">
    <value>creates an empty resource file</value>
  </data>
  <data name="Templates.File.Resource.EmptyResourceFile.Name" xml:space="preserve">
    <value>Empty resource file</value>
  </data>
  <data name="Templates.File.SingletonClass.Description" xml:space="preserve">
    <value>A class following the singleton pattern.</value>
  </data>
  <data name="Templates.File.SingletonClass.Name" xml:space="preserve">
    <value>Singleton Class</value>
  </data>
  <data name="Templates.File.Struct.Description" xml:space="preserve">
    <value>A struct declaration including Equals() and GetHashCode() implementation.</value>
  </data>
  <data name="Templates.File.Struct.Name" xml:space="preserve">
    <value>Struct</value>
  </data>
  <data name="Templates.File.Structure.Description" xml:space="preserve">
    <value>A structure declaration including Equals() and GetHashCode() implementation.</value>
  </data>
  <data name="Templates.File.Structure.Name" xml:space="preserve">
    <value>Structure</value>
  </data>
  <data name="Templates.File.Text.EmptyText.Name" xml:space="preserve">
    <value>Empty text file</value>
  </data>
  <data name="Templates.File.Text.EmptyTextFile.Description" xml:space="preserve">
    <value>Creates a new text file.</value>
  </data>
  <data name="Templates.File.UnitTest.Description" xml:space="preserve">
    <value>Creates a basic unit test.</value>
  </data>
  <data name="Templates.File.UnitTest.Name" xml:space="preserve">
    <value>Unit Test</value>
  </data>
  <data name="Templates.File.WebControl.Description" xml:space="preserve">
    <value>A custom Web Control.</value>
  </data>
  <data name="Templates.File.WebControl.Name" xml:space="preserve">
    <value>ASP.NET Web Control</value>
  </data>
  <data name="Templates.File.WebForm.Description" xml:space="preserve">
    <value>Web Form: .aspx page with Code Behind.</value>
  </data>
  <data name="Templates.File.WebForm.Name" xml:space="preserve">
    <value>ASP.NET Web Form</value>
  </data>
  <data name="Templates.File.WebHandler.Name" xml:space="preserve">
    <value>ASP.NET Web Handler</value>
  </data>
  <data name="Templates.File.WebService.Description" xml:space="preserve">
    <value>Component Frame for ASMX Web Service.</value>
  </data>
  <data name="Templates.File.WebService.Name" xml:space="preserve">
    <value>ASP.NET Web Service</value>
  </data>
  <data name="Templates.File.WindowsForm.Description" xml:space="preserve">
    <value>A form for a windows application.</value>
  </data>
  <data name="Templates.File.WindowsForm.Name" xml:space="preserve">
    <value>Form</value>
  </data>
  <data name="Templates.File.WindowsUserControl.Description" xml:space="preserve">
    <value>A user control for a windows application.</value>
  </data>
  <data name="Templates.File.WindowsUserControl.Name" xml:space="preserve">
    <value>User Control</value>
  </data>
  <data name="Templates.File.WinFXFlowDocument.Name" xml:space="preserve">
    <value>WPF Flow Document</value>
  </data>
  <data name="Templates.File.WinFXPage.Name" xml:space="preserve">
    <value>WPF Page</value>
  </data>
  <data name="Templates.File.WinFXPageFunction.Name" xml:space="preserve">
    <value>WPF Page Function</value>
  </data>
  <data name="Templates.File.WinFXResourceDictionary.Name" xml:space="preserve">
    <value>WPF Resource Dictionary</value>
  </data>
  <data name="Templates.File.WinFXUserControl.Description" xml:space="preserve">
    <value>A WPF Custom Control</value>
  </data>
  <data name="Templates.File.WinFXUserControl.Name" xml:space="preserve">
    <value>WPF User Control</value>
  </data>
  <data name="Templates.File.WinFXWindow.Description" xml:space="preserve">
    <value>A WPF Window</value>
  </data>
  <data name="Templates.File.WinFXWindow.Name" xml:space="preserve">
    <value>WPF Window</value>
  </data>
  <data name="Templates.File.WiX.EmptyWiX.Description" xml:space="preserve">
    <value>empty fragment file for WiX</value>
  </data>
  <data name="Templates.File.WiX.EmptyWiX.Name" xml:space="preserve">
    <value>Empty WiX Fragment File</value>
  </data>
  <data name="Templates.File.Wix.EmptyWixDialog.Description" xml:space="preserve">
    <value>Creates an empty setup dialog.</value>
  </data>
  <data name="Templates.File.Wix.EmptyWixDialog.Name" xml:space="preserve">
    <value>Empty Setup Dialog</value>
  </data>
  <data name="Templates.File.Wix.WixDialog.Description" xml:space="preserve">
    <value>Creates a setup dialog with some default controls on it.</value>
  </data>
  <data name="Templates.File.Wix.WixDialog.Name" xml:space="preserve">
    <value>Setup Dialog</value>
  </data>
  <data name="Templates.File.Wix.WixFile.Description" xml:space="preserve">
    <value>Creates an empty setup document.</value>
  </data>
  <data name="Templates.File.Wix.WixFile.Name" xml:space="preserve">
    <value>Empty Setup Document</value>
  </data>
  <data name="Templates.File.Wix.WixProject.Description" xml:space="preserve">
    <value>Creates an empty setup project.</value>
  </data>
  <data name="Templates.File.Wix.WixProject.Name" xml:space="preserve">
    <value>Empty Setup Project</value>
  </data>
  <data name="Templates.File.Xml.AppConfig.Description" xml:space="preserve">
    <value>Generates an app.config file. For your application. MSBuild will rename this to appname.exe.config if this project is an executable.</value>
    <comment>Describes the app.config template.</comment>
  </data>
  <data name="Templates.File.Xml.AppConfig.Name" xml:space="preserve">
    <value>App.Config File</value>
    <comment>File name for the app.config template.</comment>
  </data>
  <data name="Templates.File.Xml.EmptyXml.Name" xml:space="preserve">
    <value>Empty XML file</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlFile.Description" xml:space="preserve">
    <value>Creates an empty XML file.</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlForm.Description" xml:space="preserve">
    <value>Creates an empty XML form.</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlForm.Name" xml:space="preserve">
    <value>XML Form</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlUserControl.Description" xml:space="preserve">
    <value>Creates an empty XML user control.</value>
  </data>
  <data name="Templates.File.Xml.EmptyXmlUserControl.Name" xml:space="preserve">
    <value>XML User Control</value>
  </data>
  <data name="Templates.Project.BlankCombine.Description" xml:space="preserve">
    <value>Creates an empty solution without projects.</value>
  </data>
  <data name="Templates.Project.BlankCombine.Name" xml:space="preserve">
    <value>Empty solution</value>
  </data>
  <data name="Templates.Project.ClassLibrary.Description" xml:space="preserve">
    <value>A project for creating classes which are used in other Applications.</value>
  </data>
  <data name="Templates.Project.ClassLibrary.Name" xml:space="preserve">
    <value>Class Library</value>
  </data>
  <data name="Templates.Project.ConsoleProject.Description" xml:space="preserve">
    <value>A project that creates a command line application.</value>
  </data>
  <data name="Templates.Project.ConsoleProject.Name" xml:space="preserve">
    <value>Console Application</value>
  </data>
  <data name="Templates.Project.ConsoleProject.Unmanaged.Description" xml:space="preserve">
    <value>A project that creates a command line application in unmanaged (native) code.</value>
  </data>
  <data name="Templates.Project.ConsoleProject.Unmanaged.Name" xml:space="preserve">
    <value>Unmanaged console project</value>
    <comment>Name for project template (A project that creates a command line application in unmanaged (native) code.)</comment>
  </data>
  <data name="Templates.Project.Direct3DApplication.Description" xml:space="preserve">
    <value>A project for creating an Application with Direct3D interface.</value>
  </data>
  <data name="Templates.Project.Direct3DApplication.Name" xml:space="preserve">
    <value>Direct3D Application</value>
  </data>
  <data name="Templates.Project.EmptyProject.Description" xml:space="preserve">
    <value>An empty Project.</value>
  </data>
  <data name="Templates.Project.EmptyProject.Name" xml:space="preserve">
    <value>Empty Project</value>
  </data>
  <data name="Templates.Project.GladeSharpProject.Description" xml:space="preserve">
    <value>A project that creates a Glade# application</value>
    <comment>Glade# project template description.</comment>
  </data>
  <data name="Templates.Project.GladeSharpProject.Name" xml:space="preserve">
    <value>Glade# Application</value>
    <comment>Name of Glade# project template.</comment>
  </data>
  <data name="Templates.Project.GtkSharpProject.Description" xml:space="preserve">
    <value>A project that creates a Gtk# application</value>
    <comment>Gtk# project template description.</comment>
  </data>
  <data name="Templates.Project.GtkSharpProject.Name" xml:space="preserve">
    <value>Gtk# Application</value>
    <comment>Name of Gtk# project template.</comment>
  </data>
  <data name="Templates.Project.SetupProject.Description" xml:space="preserve">
    <value>A windows installer project for creating a MSI installer.</value>
  </data>
  <data name="Templates.Project.SetupProject.Name" xml:space="preserve">
    <value>Setup Project</value>
  </data>
  <data name="Templates.Project.SharedAddin.Description" xml:space="preserve">
    <value>Creates a shared add-in for COM applications.</value>
  </data>
  <data name="Templates.Project.SharedAddin.Name" xml:space="preserve">
    <value>Shared Add-in</value>
  </data>
  <data name="Templates.Project.SharpDevelopAddin.Description" xml:space="preserve">
    <value>A project template to quickly create a SharpDevelop addin</value>
  </data>
  <data name="Templates.Project.SharpDevelopAddin.Name" xml:space="preserve">
    <value>SharpDevelop addin</value>
  </data>
  <data name="Templates.Project.SharpDevelopMacro.Description" xml:space="preserve">
    <value>AddIn template that defines an entry in the "Tools" menu that takes the active text editor and modifies the selected text.</value>
  </data>
  <data name="Templates.Project.SharpDevelopMacro.Name" xml:space="preserve">
    <value>Tools menu entry</value>
  </data>
  <data name="Templates.Project.SilverlightApplication.Description" xml:space="preserve">
    <value>A project that creates a Silverlight application.</value>
  </data>
  <data name="Templates.Project.SilverlightApplication.Name" xml:space="preserve">
    <value>Silverlight Application</value>
  </data>
  <data name="Templates.Project.SysTrayIcon.Description" xml:space="preserve">
    <value>A project that creates an application with a icon in the notification area on the taskbar.</value>
    <comment>Note: "System Tray" is NOT a valid name for the notification area. See http://blogs.msdn.com/oldnewthing/archive/2003/09/10/54831.aspx</comment>
  </data>
  <data name="Templates.Project.SysTrayIcon.Name" xml:space="preserve">
    <value>NotifyIcon Application</value>
  </data>
  <data name="Templates.Project.UserControlLibrary.Description" xml:space="preserve">
    <value>A project that creates user controls which are used in windows applications.</value>
  </data>
  <data name="Templates.Project.UserControlLibrary.Name" xml:space="preserve">
    <value>Windows User Control Library</value>
  </data>
  <data name="Templates.Project.WebPage.Description" xml:space="preserve">
    <value>ASP.net web application</value>
  </data>
  <data name="Templates.Project.WebPage.Name" xml:space="preserve">
    <value>ASP.net webpage project</value>
  </data>
  <data name="Templates.Project.WebService.Description" xml:space="preserve">
    <value>A project that creates an ASP.NET Web Service</value>
  </data>
  <data name="Templates.Project.WebService.Name" xml:space="preserve">
    <value>ASP.NET Web Service</value>
  </data>
  <data name="Templates.Project.WindowsApplication.Description" xml:space="preserve">
    <value>A project that creates an application with a Windows interface.</value>
  </data>
  <data name="Templates.Project.WindowsApplication.Name" xml:space="preserve">
    <value>Windows Application</value>
  </data>
  <data name="Templates.Project.WindowsService.Description" xml:space="preserve">
    <value>A project for creating a windows service.</value>
  </data>
  <data name="Templates.Project.WindowsService.Name" xml:space="preserve">
    <value>Windows Service</value>
  </data>
  <data name="Templates.Project.WinFXApplication.Description" xml:space="preserve">
    <value>Creates a simple WPF application.</value>
  </data>
  <data name="Templates.Project.WinFXApplication.Name" xml:space="preserve">
    <value>WPF Application</value>
  </data>
  <data name="Templates.Project.WinFXNavigationApplication.Description" xml:space="preserve">
    <value>Creates a simple WPF application with one navigation page.</value>
  </data>
  <data name="Templates.Project.WinFXNavigationApplication.Name" xml:space="preserve">
    <value>WPF Navigation Application</value>
  </data>
  <data name="Templates.SharpReport.NewReport" xml:space="preserve">
    <value>Create a new report using the Report Wizard</value>
  </data>
  <data name="XML.FormsDesigner.SideBar.CustomizeSidebar" xml:space="preserve">
    <value>Configure Sidebar...</value>
  </data>
  <data name="XML.MainMenu.Analysis" xml:space="preserve">
    <value>&amp;Analysis</value>
    <comment>Analysis / Quality Tools main menu entry</comment>
  </data>
  <data name="XML.MainMenu.BuildMenu" xml:space="preserve">
    <value>B&amp;uild</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.AbortBuild" xml:space="preserve">
    <value>Abort build</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.BreakKey" xml:space="preserve">
    <value>Break</value>
    <comment>The caption of the Pause/Break key on the keyboard, as shortcut for aborting the build</comment>
  </data>
  <data name="XML.MainMenu.BuildMenu.BuildProject" xml:space="preserve">
    <value>B&amp;uild ${CurrentProjectName}</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.BuildSolution" xml:space="preserve">
    <value>&amp;Build Solution</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.CleanProject" xml:space="preserve">
    <value>Clea&amp;n ${CurrentProjectName}</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.CleanSolution" xml:space="preserve">
    <value>&amp;Clean Solution</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.EditConfigurationsPlatforms" xml:space="preserve">
    <value>Edit configurations/platforms</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.PublishProject" xml:space="preserve">
    <value>Publish ${CurrentProjectName}</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.PublishSolution" xml:space="preserve">
    <value>&amp;Publish Solution</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.RebuildProject" xml:space="preserve">
    <value>R&amp;ebuild ${CurrentProjectName}</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.RebuildSolution" xml:space="preserve">
    <value>&amp;Rebuild Solution</value>
  </data>
  <data name="XML.MainMenu.BuildMenu.SetConfiguration" xml:space="preserve">
    <value>Set configuration</value>
    <comment>Set the project configuration (debug/release)</comment>
  </data>
  <data name="XML.MainMenu.BuildMenu.SetPlatform" xml:space="preserve">
    <value>Set platform</value>
  </data>
  <data name="XML.MainMenu.DebugMenu" xml:space="preserve">
    <value>&amp;Debug</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Attach" xml:space="preserve">
    <value>Attach to Process...</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Break" xml:space="preserve">
    <value>&amp;Break</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Break.Description" xml:space="preserve">
    <value>Break the debugging process</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Continue" xml:space="preserve">
    <value>&amp;Continue debugging</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Continue.Description" xml:space="preserve">
    <value>Continues the process execution.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Detach" xml:space="preserve">
    <value>Detach</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.BadAssembly" xml:space="preserve">
    <value>Can not get .NET Framework version of program. Check that the program is managed assembly.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.CannotAttachToProcess" xml:space="preserve">
    <value>Can not attach to process.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.CannotStartProcess" xml:space="preserve">
    <value>Can not start process.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.Debugging" xml:space="preserve">
    <value>Can not perform action because some process is debugged.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.KernelDebuggerEnabled" xml:space="preserve">
    <value>Can not start SharpDevelop debugger because kernel debugger is enabled.  To disable the kernel debugger, remove the switch "/debug" from the file Boot.ini and reboot your computer.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.Net10NotSupported" xml:space="preserve">
    <value>Debugging of .NET Framework 1.0 programs is not supported.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.NotDebugging" xml:space="preserve">
    <value>Can not perform action because no process is debugged.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.ProcessPaused" xml:space="preserve">
    <value>Can not perform action because process is paused.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Error.ProcessRunning" xml:space="preserve">
    <value>Can not perform action because process is running.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.RemoveAllBreakpoints" xml:space="preserve">
    <value>Remove all breakpoints</value>
    <comment>Main menu command for removing all breakpoints + tooltip for the corresponding toolbar button (in the breakpoints pad)</comment>
  </data>
  <data name="XML.MainMenu.DebugMenu.RunWithoutDebug" xml:space="preserve">
    <value>Run &amp;without debugger</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.RunWithoutDebug.Description" xml:space="preserve">
    <value>Runs the program without attached debugger.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepInto" xml:space="preserve">
    <value>Step into</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepInto.Description" xml:space="preserve">
    <value>Step into</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepOut" xml:space="preserve">
    <value>Step out</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepOut.Description" xml:space="preserve">
    <value>Step out</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepOver" xml:space="preserve">
    <value>&amp;Step over</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.StepOver.Description" xml:space="preserve">
    <value>Step over</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Stop" xml:space="preserve">
    <value>Stop process</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.Stop.Description" xml:space="preserve">
    <value>Stops the current process and terminates debugging.</value>
  </data>
  <data name="XML.MainMenu.DebugMenu.ToggleBreakpoint" xml:space="preserve">
    <value>Toggle Breakpoint</value>
    <comment>Set/remove breakpoint on current line</comment>
  </data>
  <data name="XML.MainMenu.EditMenu" xml:space="preserve">
    <value>&amp;Edit</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Copy" xml:space="preserve">
    <value>&amp;Copy</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Copy.Description" xml:space="preserve">
    <value>Copy selection to clipboard</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Cut" xml:space="preserve">
    <value>Cu&amp;t</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Cut.Description" xml:space="preserve">
    <value>Cut selection to clipboard</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Delete" xml:space="preserve">
    <value>&amp;Delete</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Delete.Description" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FoldingMenu" xml:space="preserve">
    <value>F&amp;olding</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FoldingMenu.ShowDefinitions" xml:space="preserve">
    <value>Show &amp;definitions only</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FoldingMenu.ToggleAllFoldings" xml:space="preserve">
    <value>Toggle &amp;all folds</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FoldingMenu.ToggleFolding" xml:space="preserve">
    <value>&amp;Toggle fold</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu" xml:space="preserve">
    <value>&amp;Format</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.Capitalize" xml:space="preserve">
    <value>Capitalize</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.InvertCase" xml:space="preserve">
    <value>Invert Case</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab" xml:space="preserve">
    <value>Leading Spaces to Tabs</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.LdTab2Space" xml:space="preserve">
    <value>Leading Tabs to Spaces</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.LowerCase" xml:space="preserve">
    <value>To Lower Case</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.RlWs" xml:space="preserve">
    <value>Remove Leading Whitespace</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.RtWs" xml:space="preserve">
    <value>Remove Trailing Whitespace</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.SortLines" xml:space="preserve">
    <value>Sort Lines...</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.Space2Tab" xml:space="preserve">
    <value>Spaces to Tabs</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.Tab2Space" xml:space="preserve">
    <value>Tabs to Spaces</value>
  </data>
  <data name="XML.MainMenu.EditMenu.FormatMenu.UpperCase" xml:space="preserve">
    <value>To Upper Case</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Insert" xml:space="preserve">
    <value>&amp;Insert</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Paste" xml:space="preserve">
    <value>&amp;Paste</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Paste.AsComment" xml:space="preserve">
    <value>Paste as comment</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Paste.AsString" xml:space="preserve">
    <value>Paste as string</value>
    <comment>Pastes the clipboard content as string literal</comment>
  </data>
  <data name="XML.MainMenu.EditMenu.Paste.Description" xml:space="preserve">
    <value>Paste text from clipboard</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Redo" xml:space="preserve">
    <value>&amp;Redo</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Redo.Description" xml:space="preserve">
    <value>Redo last undo action</value>
  </data>
  <data name="XML.MainMenu.EditMenu.SelectAll" xml:space="preserve">
    <value>Select &amp;All</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Undo" xml:space="preserve">
    <value>&amp;Undo</value>
  </data>
  <data name="XML.MainMenu.EditMenu.Undo.Description" xml:space="preserve">
    <value>Undo last action</value>
  </data>
  <data name="XML.MainMenu.EditMenu.WordCount" xml:space="preserve">
    <value>&amp;Word Count…</value>
  </data>
  <data name="XML.MainMenu.FileMenu" xml:space="preserve">
    <value>&amp;File</value>
  </data>
  <data name="XML.MainMenu.FileMenu.ClearRecentFiles" xml:space="preserve">
    <value>Clear recent files list</value>
  </data>
  <data name="XML.MainMenu.FileMenu.ClearRecentProjects" xml:space="preserve">
    <value>Clear recent projects list</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Close" xml:space="preserve">
    <value>&amp;Close</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Close.File" xml:space="preserve">
    <value>&amp;File</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Close.Project" xml:space="preserve">
    <value>&amp;Solution</value>
  </data>
  <data name="XML.MainMenu.FileMenu.CloseAll" xml:space="preserve">
    <value>C&amp;lose All Documents</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Exit" xml:space="preserve">
    <value>E&amp;xit</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New" xml:space="preserve">
    <value>&amp;New</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New.File" xml:space="preserve">
    <value>&amp;File…</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New.File.Description" xml:space="preserve">
    <value>Open new buffer</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New.Project" xml:space="preserve">
    <value>&amp;Project...</value>
  </data>
  <data name="XML.MainMenu.FileMenu.New.Solution" xml:space="preserve">
    <value>&amp;Solution...</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open" xml:space="preserve">
    <value>&amp;Open</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open.File" xml:space="preserve">
    <value>&amp;File…</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open.File.Description" xml:space="preserve">
    <value>Open buffer from disc</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open.Project" xml:space="preserve">
    <value>&amp;Project/Solution…</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Open.Project.Description" xml:space="preserve">
    <value>Open Project/Solution</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Print" xml:space="preserve">
    <value>P&amp;rint</value>
  </data>
  <data name="XML.MainMenu.FileMenu.PrintPreview" xml:space="preserve">
    <value>Print &amp;Preview</value>
    <comment>Changed hotkey:
P&amp;rint Preview to Print &amp;Preview</comment>
  </data>
  <data name="XML.MainMenu.FileMenu.RecentFiles" xml:space="preserve">
    <value>Recent &amp;Files</value>
  </data>
  <data name="XML.MainMenu.FileMenu.RecentProjects" xml:space="preserve">
    <value>Recent Pro&amp;jects</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Reload" xml:space="preserve">
    <value>R&amp;eload file</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Save" xml:space="preserve">
    <value>&amp;Save</value>
  </data>
  <data name="XML.MainMenu.FileMenu.Save.Description" xml:space="preserve">
    <value>Save current buffer</value>
  </data>
  <data name="XML.MainMenu.FileMenu.SaveAll" xml:space="preserve">
    <value>Save A&amp;ll</value>
  </data>
  <data name="XML.MainMenu.FileMenu.SaveAll.Description" xml:space="preserve">
    <value>Save all buffers currently open</value>
  </data>
  <data name="XML.MainMenu.FileMenu.SaveAs" xml:space="preserve">
    <value>Save &amp;As…</value>
  </data>
  <data name="XML.MainMenu.FileMenu.SaveWithEncoding" xml:space="preserve">
    <value>Save with &amp;encoding...</value>
    <comment>Saves a text file by choosing the target encoding</comment>
  </data>
  <data name="XML.MainMenu.FormatMenu" xml:space="preserve">
    <value>F&amp;ormat</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu" xml:space="preserve">
    <value>&amp;Align</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignBottom" xml:space="preserve">
    <value>&amp;Bottoms</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignHorizontalCenters" xml:space="preserve">
    <value>&amp;Centers</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignHorizontalLeft" xml:space="preserve">
    <value>&amp;Lefts</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignHorizontalRight" xml:space="preserve">
    <value>&amp;Rights</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignToGrid" xml:space="preserve">
    <value>To &amp;Grid</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignTop" xml:space="preserve">
    <value>Top&amp;s</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.AlignMenu.AlignVerticalCenters" xml:space="preserve">
    <value>&amp;Middles</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.CenterMenu" xml:space="preserve">
    <value>&amp;Center in Form</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.CenterMenu.CenterHorizontally" xml:space="preserve">
    <value>&amp;Horizontally</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.CenterMenu.CenterVertically" xml:space="preserve">
    <value>&amp;Vertically</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu" xml:space="preserve">
    <value>&amp;Horizontal Spacing</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.BringToFront" xml:space="preserve">
    <value>&amp;Bring to Front</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.HorizSpaceConcatenate" xml:space="preserve">
    <value>&amp;Remove</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.HorizSpaceDecrease" xml:space="preserve">
    <value>&amp;Decrease</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.HorizSpaceIncrease" xml:space="preserve">
    <value>&amp;Increase</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.HorizSpaceMakeEqual" xml:space="preserve">
    <value>Make &amp;Equal</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.HorizontalSpacingMenu.SendToBack" xml:space="preserve">
    <value>&amp;Send to Back</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.LineUpIcons" xml:space="preserve">
    <value>&amp;Line up icons</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.Lock" xml:space="preserve">
    <value>&amp;Lock Controls</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.OrderMenu" xml:space="preserve">
    <value>&amp;Order</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.OrderMenu.BringToFront" xml:space="preserve">
    <value>&amp;Bring to Front</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.OrderMenu.SendToBack" xml:space="preserve">
    <value>&amp;Send to Back</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu" xml:space="preserve">
    <value>&amp;Make Same Size</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu.SizeToControl" xml:space="preserve">
    <value>&amp;Both</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu.SizeToControlHeight" xml:space="preserve">
    <value>&amp;Height</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu.SizeToControlWidth" xml:space="preserve">
    <value>&amp;Width</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.SameSizeMenu.SizeToGrid" xml:space="preserve">
    <value>Size to Gri&amp;d</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.ShowLargeIcons" xml:space="preserve">
    <value>&amp;Show large icons</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.ShowProperties" xml:space="preserve">
    <value>&amp;Properties</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.ShowTabOrder" xml:space="preserve">
    <value>Show &amp;tab order</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu" xml:space="preserve">
    <value>&amp;Vertical Spacing</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu.VertSpaceConcatenate" xml:space="preserve">
    <value>&amp;Remove</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu.VertSpaceDecrease" xml:space="preserve">
    <value>&amp;Decrease</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu.VertSpaceIncrease" xml:space="preserve">
    <value>&amp;Increase</value>
  </data>
  <data name="XML.MainMenu.FormatMenu.VerticalSpacingMenu.VertSpaceMakeEqual" xml:space="preserve">
    <value>Make &amp;Equal</value>
  </data>
  <data name="XML.MainMenu.HelpMenu" xml:space="preserve">
    <value>&amp;Help</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.About" xml:space="preserve">
    <value>&amp;About…</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.ContextHelp" xml:space="preserve">
    <value>Context help</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.DynamicHelp" xml:space="preserve">
    <value>&amp;Dynamic Help</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.GPL" xml:space="preserve">
    <value>&amp;GPL...</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.ReadMe" xml:space="preserve">
    <value>&amp;ReadMe…</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.StyleGuide" xml:space="preserve">
    <value>Coding Style Guide</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.Tips" xml:space="preserve">
    <value>&amp;Tip of the Day…</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.Topics" xml:space="preserve">
    <value>&amp;Help Topics</value>
  </data>
  <data name="XML.MainMenu.HelpMenu.WebMenu" xml:space="preserve">
    <value>Web</value>
  </data>
  <data name="XML.MainMenu.Navigation.Back" xml:space="preserve">
    <value>Navigate Back</value>
  </data>
  <data name="XML.MainMenu.Navigation.ClearHistory" xml:space="preserve">
    <value>Clear Navigation History</value>
  </data>
  <data name="XML.MainMenu.Navigation.Forward" xml:space="preserve">
    <value>Navigate Forward</value>
  </data>
  <data name="XML.MainMenu.ProjectMenu" xml:space="preserve">
    <value>&amp;Project</value>
  </data>
  <data name="XML.MainMenu.ProjectMenu.Options" xml:space="preserve">
    <value>Project &amp;Options…</value>
  </data>
  <data name="XML.MainMenu.RefactorMenu" xml:space="preserve">
    <value>&amp;Refactor</value>
  </data>
  <data name="XML.MainMenu.RunMenu.BuildProject.Description" xml:space="preserve">
    <value>Builds the current project.</value>
  </data>
  <data name="XML.MainMenu.RunMenu.BuildSolution.Description" xml:space="preserve">
    <value>Builds all projects in the current solution.</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Compile.Description" xml:space="preserve">
    <value>Build active project or buffer (when no project is open) (does autosave)</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Compile.StopDebuggingQuestion" xml:space="preserve">
    <value>You have to stop the debugger to build the project.
Do you want to stop debugging?</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Compile.StopDebuggingTitle" xml:space="preserve">
    <value>Stop Debugging</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Run" xml:space="preserve">
    <value>&amp;Run</value>
  </data>
  <data name="XML.MainMenu.RunMenu.Run.Description" xml:space="preserve">
    <value>Run compiled exe (does recompile)</value>
  </data>
  <data name="XML.MainMenu.SearchMenu" xml:space="preserve">
    <value>&amp;Search</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ClrBookmark" xml:space="preserve">
    <value>&amp;Clear All Bookmarks</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ClrBookmark.Description" xml:space="preserve">
    <value>Clear all bookmarks in current buffer</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.Find" xml:space="preserve">
    <value>&amp;Find…</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.FindNext" xml:space="preserve">
    <value>Find &amp;Next</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.FindNextSelected" xml:space="preserve">
    <value>Find Next &amp;Selected</value>
    <comment>Search menu option that finds the next match based on the currently selected text.</comment>
  </data>
  <data name="XML.MainMenu.SearchMenu.Goto" xml:space="preserve">
    <value>&amp;Go To...</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.GotoBrace" xml:space="preserve">
    <value>Goto &amp;Matching Brace</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.IncrementalSearch" xml:space="preserve">
    <value>Incremental Search</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.NextBookmark" xml:space="preserve">
    <value>Ne&amp;xt Bookmark</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.NextBookmark.Description" xml:space="preserve">
    <value>Goto next bookmark</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.PrevBookmark" xml:space="preserve">
    <value>&amp;Prev Bookmark</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.PrevBookmark.Description" xml:space="preserve">
    <value>Goto previous bookmark</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.Replace" xml:space="preserve">
    <value>&amp;Replace…</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ReverseIncrementalSearch" xml:space="preserve">
    <value>Reverse Incremental Search</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ToggleBookmark" xml:space="preserve">
    <value>&amp;Toggle Bookmark</value>
  </data>
  <data name="XML.MainMenu.SearchMenu.ToggleBookmark.Description" xml:space="preserve">
    <value>Set/unset bookmark at current line</value>
  </data>
  <data name="XML.MainMenu.ToolMenu" xml:space="preserve">
    <value>&amp;Tools</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.ConvertCodeTo" xml:space="preserve">
    <value>&amp;Convert code to</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.ExternalTools.EnterArguments" xml:space="preserve">
    <value>Enter arguments for the tool:</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.ExternalTools.ExecutionFailed" xml:space="preserve">
    <value>External program execution failed.
Error while starting:
</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.ExternalTools.ExitedWithCode" xml:space="preserve">
    <value>Exited with code:</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.GenerateCode" xml:space="preserve">
    <value>Auto code generation</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.InsColor" xml:space="preserve">
    <value>Insert Color…</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.InsGUID" xml:space="preserve">
    <value>Insert new &amp;GUID</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.Options" xml:space="preserve">
    <value>O&amp;ptions…</value>
  </data>
  <data name="XML.MainMenu.ToolMenu.QuickXmlDoc" xml:space="preserve">
    <value>Quick XML doc</value>
  </data>
  <data name="XML.MainMenu.ToolsMenu.RegularExpressionToolkit" xml:space="preserve">
    <value>Regular Expressions Toolkit</value>
  </data>
  <data name="XML.MainMenu.ViewMenu" xml:space="preserve">
    <value>&amp;View</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.DebugMenu" xml:space="preserve">
    <value>&amp;Debug</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.FullScreen" xml:space="preserve">
    <value>&amp;Fullscreen</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.SetupMenu" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.SetupMenu.DialogsMenu" xml:space="preserve">
    <value>Dialogs</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.SetupMenu.FilesMenu" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.ShowStartPage" xml:space="preserve">
    <value>&amp;Show start page</value>
  </data>
  <data name="XML.MainMenu.ViewMenu.ToolsMenu" xml:space="preserve">
    <value>&amp;Tools</value>
  </data>
  <data name="XML.MainMenu.WindowMenu" xml:space="preserve">
    <value>&amp;Window</value>
  </data>
  <data name="XML.MainMenu.WindowMenu.NxtWindow" xml:space="preserve">
    <value>&amp;Next Window</value>
  </data>
  <data name="XML.MainMenu.WindowMenu.PrvWindow" xml:space="preserve">
    <value>&amp;Prev Window</value>
  </data>
  <data name="XML.MainMenu.WindowMenu.Split" xml:space="preserve">
    <value>&amp;Split</value>
  </data>
  <data name="XML.StandardHeader.CreatedBySharpDevelop" xml:space="preserve">
    <value>Created by SharpDevelop.</value>
  </data>
  <data name="XML.StandardHeader.Date" xml:space="preserve">
    <value>Date:</value>
  </data>
  <data name="XML.StandardHeader.HowToChangeTemplateInformation" xml:space="preserve">
    <value>To change this template use Tools | Options | Coding | Edit Standard Headers.</value>
  </data>
  <data name="XML.StandardHeader.Time" xml:space="preserve">
    <value>Time:</value>
  </data>
  <data name="XML.StandardHeader.User" xml:space="preserve">
    <value>User:</value>
  </data>
  <data name="XML.StartupTips.Tip1" xml:space="preserve">
    <value>That you should look out for new SharpDevelop versions and tell all your friends how good SharpDevelop is and write cool C# programs with it!</value>
  </data>
  <data name="XML.StartupTips.Tip2" xml:space="preserve">
    <value>That you can open the template completion window with Ctrl+J?</value>
  </data>
  <data name="XML.StartupTips.Tip3" xml:space="preserve">
    <value>That you can type "? name = ...;" (C#) or "Dim name As ? = ..." (VB) and SharpDevelop will substitute the question mark with the type of "..."?</value>
  </data>
  <data name="XML.TextAreaContextMenu.BufferOptions" xml:space="preserve">
    <value>Buffer Options</value>
  </data>
  <data name="XML.TextAreaContextMenu.CommentUncommentSelection" xml:space="preserve">
    <value>Comment region</value>
  </data>
  <data name="XML.TextAreaContextMenu.Copy" xml:space="preserve">
    <value>&amp;Copy</value>
  </data>
  <data name="XML.TextAreaContextMenu.Cut" xml:space="preserve">
    <value>Cu&amp;t</value>
  </data>
  <data name="XML.TextAreaContextMenu.FileMode" xml:space="preserve">
    <value>File mode</value>
  </data>
  <data name="XML.TextAreaContextMenu.Indent" xml:space="preserve">
    <value>Indent</value>
  </data>
  <data name="XML.TextAreaContextMenu.Paste" xml:space="preserve">
    <value>&amp;Paste</value>
  </data>
  <data name="XML.TextAreaContextMenu.Refactoring" xml:space="preserve">
    <value>Refactoring</value>
  </data>
  <data name="XML.TextAreaContextMenu.UncommentSelection" xml:space="preserve">
    <value>Uncomment region</value>
  </data>
  <data name="_Internal.Bogus.Translation.Test1" xml:space="preserve">
    <value>This resource is not being used. Its purpose is to test the translation database and has 
a line break</value>
  </data>
</root>