<ChangeLog project="SharpDevelop">
  <Change author="Matt Ward" date="08/01/2010">Fixed null reference exception when typing a comma to add a new parameter to an existing class method.</Change>
  <Change author="Martin Koníček" date="08/01/2010">Fixed minor CC bug.</Change>
  <Change author="Mathias Simmack" date="08/01/2010">removed a few more ArgumentNullExceptions</Change>
  <Change author="Siegfried Pammer" date="08/01/2010">- added missing VB keywords to VBNET-Mode.xshd
- fixed code completion in CastExpressions</Change>
  <Change author="Martin Koníček" date="08/01/2010">Derived classes etc. popup opens at cursor position again.</Change>
  <Change author="Siegfried Pammer" date="08/01/2010">fixed Unit Tests</Change>
  <Change author="Matt Ward" date="08/01/2010">Updated NUnit to version 2.5.7</Change>
  <Change author="Martin Koníček" date="08/01/2010">Updated string resources.
</Change>
  <Change author="Martin Koníček" date="08/01/2010">Ctrl+T in the editor opens and focuses Context actions popup. Added tooltip so that the shortcut is discoverable.</Change>
  <Change author="Siegfried Pammer" date="08/01/2010">- fixed missing instructions in EF Parser
- fixed handling of Enum - End Enum</Change>
  <Change author="kumardevvrat" date="08/01/2010">Fix error in the Tools order.</Change>
  <Change author="kumardevvrat" date="08/01/2010">- Re-adjust styles.
- Move following attached properties to Popular category: [Grid.Row,RowSpan,Column,ColumnSpan], DockPanel.Dock,[Canvas.Left,Top,Bottom,Right]
- Arrange Tools in alphabetical order.
- Hide not-functioning menu items from the context menu in Property pad.</Change>
  <Change author="Martin Koníček" date="08/01/2010">Fixed minor bug with context action popup closing.</Change>
  <Change author="Martin Koníček" date="08/01/2010">VBNetLanguageBinding returns LanguageProperties.VBNet, so that Context actions now work also for VB.

Context actions and Highlight symbol are enabled only for .cs and .vb files.</Change>
  <Change author="Daniel Grunwald" date="08/01/2010">Avoid ArgumentNullException(Help3Service.ActiveCatalog) when pressing F1 on machine without Windows SDK 7.1 installed.</Change>
  <Change author="Matt Ward" date="08/01/2010">Move IL Binding to samples.</Change>
  <Change author="kumardevvrat" date="08/01/2010">- Fix various issues related to alignments,width and height.
- Fix margin of the elements when creating new Rows/Columns in Grid.
- Fix possible null reference in QuickOperationMenuExtension.cs</Change>
  <Change author="Martin Koníček" date="08/01/2010">Removed reparse from ContextActionsService, it hangs WPF designer.</Change>
  <Change author="Siegfried Pammer" date="08/01/2010">- added frames for indentation strategy
- converted TextEditorOptions to WPF
- added filter for snippets to VB .NET binding</Change>
  <Change author="David Srbecký" date="08/01/2010">Hack to ignore unloaded interfaces (will fix properly later)</Change>
  <Change author="Martin Koníček" date="08/01/2010">Context actions popup has pencil icon.</Change>
  <Change author="Martin Koníček" date="08/01/2010">Split ContextActionsControl to 2 different classes: one for Popup in the margin, one for "Derived classes" popup.</Change>
  <Change author="kumardevvrat" date="07/31/2010">Fix null reference exception.</Change>
  <Change author="kumardevvrat" date="07/31/2010">- Fix in-place editor placement and resolve issue when resizing while editing text too;caused an exception due to nested transactions.
- Highlight text that can be edited with a border.</Change>
  <Change author="Martin Koníček" date="07/31/2010">TranslateMenuItemToWpf sets also shortcut on WPF MenuItem, so that menus show shortcuts.</Change>
  <Change author="Siegfried Pammer" date="07/31/2010">- improved handling of highlighting of current parameter
- added SYNC to EndOfStmt to allow parser to continue at EOL and : in VB</Change>
  <Change author="Martin Koníček" date="07/31/2010">Moved "Find derived classes", "Find base classes", "Find overrides" to Class/Member menu builders, where they logically belong. Now they are available also in class browser.</Change>
  <Change author="Matt Ward" date="07/31/2010">Updated string resources.</Change>
  <Change author="Martin Koníček" date="07/31/2010">Moved context menu items from submenu to top level. 
Removed goto from RefactoringMenuBuilder. Commented part calling RefactoringService.FixIndexerExpression - the menu for indexer seems to work well.</Change>
  <Change author="Martin Koníček" date="07/31/2010">- Removed context menu items which are now represented by Context actions (it will be possible to add context actions also to any menu if we decide to do so). ResolveExtensionMethod and ResolveAttribute will be implemented as context actions soon.
- ParserService.ParseCurrentViewContent() when getting context actions, so that the DOM is up to date. Context actions will be moved to background thread.
</Change>
  <Change author="kumardevvrat" date="07/31/2010">- Add StackPanelPlacementSupport.cs in .csproj to be compiled.
- Change some styles.
- Register [Alt]+Enter for Quick operation menu</Change>
  <Change author="Siegfried Pammer" date="07/31/2010">implemented SD-631 for VB .NET</Change>
  <Change author="kumardevvrat" date="07/30/2010">Extend top left drag handle for Image and MediaElement.</Change>
  <Change author="kumardevvrat" date="07/30/2010">- Modify and add more default sizes for controls.
- Fix a bug where the editor used to highlight NaN for double as "Not in range."</Change>
  <Change author="kumardevvrat" date="07/30/2010">- Do not select the outer list box that displays images.
- Refresh the ProjectBrowser rather than adding FileNode(image file) to the ProjectNode.
- Update the URL text box when adding image files.</Change>
  <Change author="Siegfried Pammer" date="07/30/2010">created IInsightWindowHandler (general API)</Change>
  <Change author="Siegfried Pammer" date="07/30/2010">extracted insight window handling to InsightWindowHandler</Change>
  <Change author="Siegfried Pammer" date="07/30/2010">- fixed some FxCop warnings in VBNetBinding
- added missing documentation comment to Indentation member of SnippetSelectionElement</Change>
  <Change author="Siegfried Pammer" date="07/30/2010">- fixed infinite loop in VBNetExpressionFinder
- fixed context detection at Inherts/Implements
- removed unused variable from VBNetBracketSearcher
- added InsightWindowHandler
- implemented method insight in VB</Change>
  <Change author="Daniel Grunwald" date="07/30/2010">Merge remote branch 'svn/reports'</Change>
  <Change author="Daniel Grunwald" date="07/29/2010">Fix build errors after merge.</Change>
  <Change author="Daniel Grunwald" date="07/29/2010">Merge remote branch 'svn/wpfdesigner'</Change>
  <Change author="Daniel Grunwald" date="07/29/2010">Fix IsTypeInInheritanceTree for classes differing only in numbers of type parameters.</Change>
  <Change author="Christoph Wille" date="07/29/2010">Change Name attribute in &lt;Product&gt; tag to "SharpDevelop 4.0 Beta 2"</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Expand all menu builders in main menu once at startup to ensure that all shortcuts get registered. Fixed issue "Properties window not brought to front using keyboard shortcut"</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Remove Ctrl+Alt shortcuts from SharpDevelop Reports.</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Combine Run/Continue on F5. Move FindDerivedClassesOrOverrideCommand to F6; change F9 back to Build Project.</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Allow using a single shortcut for multiple main menu entries (we will use the first non-disabled item).</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Disable bookmarks and breakpoints pads.</Change>
  <Change author="Matt Ward" date="07/28/2010">Fixed incorrect relative filenames in setup. Fixed incorrect release output path in projects.</Change>
  <Change author="Siegfried Pammer" date="07/28/2010">- added test for GenericConstraints
- added test for bug in ForNextStatement output of C#
- fixed bug in ForNextStatement output of C#</Change>
  <Change author="Matt Ward" date="07/28/2010">Restructured AddIns folder - removed nested AddIns\AddIns folder and added Analysis folder.</Change>
  <Change author="Siegfried Pammer" date="07/28/2010">added keyword mapping for VB snippets</Change>
  <Change author="Christoph Wille" date="07/28/2010">Remove css directory</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Remove incomplete settings AddIn from build and setup.</Change>
  <Change author="Siegfried Pammer" date="07/28/2010">fixed isUserModified detection in CodeSnippet</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Report the file types opened in the text editor to UDC (but only known file types)</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Simplify code using FileFilter</Change>
  <Change author="Daniel Grunwald" date="07/28/2010">Track feature use in UDC: snippets, NewLineConsistencyCheck, ClassMemberBookmark menu.</Change>
  <Change author="Siegfried Pammer" date="07/28/2010">fixed IndexOutOfRangeException when caret is at the start of the line in EditorContext.SymbolUnderCaret</Change>
  <Change author="tomaslinhart" date="07/27/2010">MetricsReader now use FullName type checking. Fixes a bug with nested types and so on.</Change>
  <Change author="Siegfried Pammer" date="07/27/2010">fixed unit tests (fixes build)</Change>
  <Change author="Siegfried Pammer" date="07/27/2010">fixed NullReferenceException when working with VB files outside of a VB project</Change>
  <Change author="Daniel Grunwald" date="07/27/2010">Fixed SD-1706 - Windows Forms Designer resets IsDirty flag</Change>
  <Change author="Martin Koníček" date="07/27/2010">First implementation of GUI for editor context actions.

A WPF Popup is shown over the editor when some actions are available. Can be opened by mouse click (TODO open by shortcut).
A Popup is probably not the best solution: it is not "tied" to current editor line anyhow so it stays open when region is collapsed, active ViewContent changes etc. (for active ViewContent change I added explicit handling). It should be probably part of editor's visual tree, in a special layer. Alternatively it could be displayed in the bookmark margin, but that would make it too small. This way it resembles ReSharper.
Have to consult this with Daniel.</Change>
  <Change author="Daniel Grunwald" date="07/27/2010">Fix forum-11486: pressing Enter key in toolbar's search box replaces currently selected text</Change>
  <Change author="Daniel Grunwald" date="07/27/2010">Remove references to CF framework</Change>
  <Change author="tomaslinhart" date="07/27/2010">Added ProgressBar into StatusBar.
Assembly is now loaded in BackgroundWorker.</Change>
  <Change author="Daniel Grunwald" date="07/27/2010">Fix setup after removing CF files</Change>
  <Change author="Daniel Grunwald" date="07/27/2010">Fix typo in comment</Change>
  <Change author="Daniel Grunwald" date="07/27/2010">Remove support for compact framework.</Change>
  <Change author="tomaslinhart" date="07/27/2010">Added a Status Bar which shows a number of nodes (namespaces, types and so on).</Change>
  <Change author="David Srbecký" date="07/27/2010">Friendlier error message in debugger console</Change>
  <Change author="Daniel Grunwald" date="07/27/2010">Add Git AddIn (not complete, so its not part of SharpDevelop.sln and won't be compiled by default)</Change>
  <Change author="tomaslinhart" date="07/27/2010">Selection for nodes is now done by DependencyProperties. Style for selected node was moved to XAML.</Change>
  <Change author="Siegfried Pammer" date="07/27/2010">added option to disable advanced highlighting for XAML</Change>
  <Change author="Daniel Grunwald" date="07/27/2010">Fix NullReferenceException in GeneralEditorOptions.SaveOptions when closing options dialog before the font list is fully loaded.</Change>
  <Change author="David Srbecký" date="07/27/2010">Still step over properties in form "return field;" even if the GetBackingField method fails.</Change>
  <Change author="Siegfried Pammer" date="07/27/2010">added new icon for extension methods</Change>
  <Change author="Siegfried Pammer" date="07/27/2010">fixed build</Change>
  <Change author="Martin Koníček" date="07/26/2010">Attempt to fix IntroduceMethodTests.</Change>
  <Change author="David Srbecký" date="07/26/2010">Fixed DebugMethodInfo.GetBackingField for fields</Change>
  <Change author="tomaslinhart" date="07/26/2010">Added an icon to nodes in Dependency Graph.</Change>
  <Change author="Martin Koníček" date="07/26/2010">Fixed build of SharpDevelop (will fix build of tests as well).</Change>
  <Change author="Siegfried Pammer" date="07/26/2010">- fixed NullReferenceException if current method cannot be parsed correctly
- fixed bugs when using IntroduceMethod in CompoundClass (e. g. partial classes)</Change>
  <Change author="Martin Koníček" date="07/26/2010">Implemented "Introduce method" context action.</Change>
  <Change author="Matt Ward" date="07/26/2010">Ruby and Python form designers now generate the correct code for System.Environment.SpecialFolder.</Change>
  <Change author="Martin Koníček" date="07/26/2010">Decoupled "IntroduceMethod" from context menu to separate file GenerateCode.cs, so that it is now available for context actions as well.</Change>
  <Change author="David Srbecký" date="07/26/2010">Fixed Forum-31266:  Intercepting FileIOPermission deny exception.</Change>
  <Change author="Martin Koníček" date="07/26/2010">Moved MenuItemFactories in SharpRefactoring.adding to subfolder.</Change>
  <Change author="tomaslinhart" date="07/26/2010">- Tree for browsing has been rewritten to XAML. It allows nice styling options.
- Collection's properties got private setter.
- First draft of Dependency Matrix which uses a tree.</Change>
  <Change author="David Srbecký" date="07/26/2010">Crash earlier when type is not found by name</Change>
  <Change author="David Srbecký" date="07/26/2010">Fixed problem with locking of assembly - the COM method GetReaderForFile was creating new object even though it returned error code</Change>
  <Change author="David Srbecký" date="07/26/2010">Removed some COM objects which were marked as deprecated</Change>
  <Change author="Daniel Grunwald" date="07/26/2010">Merge reports bugfix (FileLoadException on Data AddIn)</Change>
  <Change author="Siegfried Pammer" date="07/26/2010">- fixed Dispose in LATextReader
- don't store PerformanceCounterDescriptors in the Options, they're not configurable, so it does not make sense. fixes http://community.sharpdevelop.net/forums/t/10481.aspx</Change>
  <Change author="Daniel Grunwald" date="07/26/2010">Merge reports branch into trunk.</Change>
  <Change author="Siegfried Pammer" date="07/26/2010">fixed code snippets in code completion list</Change>
  <Change author="tomaslinhart" date="07/26/2010">Implemented caching for names. It provides significant performance improvement.</Change>
  <Change author="Daniel Grunwald" date="07/26/2010">Handle BadImageFormatException when trying to load code completion info from non-.NET dll.</Change>
  <Change author="tomaslinhart" date="07/26/2010">Implemented VirtualMode for Dependency Matrix. It should improve performance a little bit.</Change>
  <Change author="Daniel Grunwald" date="07/25/2010">Install FoldingElementGenerator first to ensure that fold markers are always drawn. Fixes InvalidOperationException in ICSharpCode.AvalonEdit.Rendering.TextView.BuildVisualLine.</Change>
  <Change author="Siegfried Pammer" date="07/25/2010">implemented basic code completion in Console pad</Change>
  <Change author="David Srbecký" date="07/25/2010">Show more friendly error message when trying to debug 64-bit executable.</Change>
  <Change author="Matt Ward" date="07/25/2010">Unit tests for RubyBinding will now be run on build server.</Change>
  <Change author="tomaslinhart" date="07/25/2010">- Rewrite Dependency Matrix Control to WinForms</Change>
  <Change author="Daniel Grunwald" date="07/25/2010">Revert accidentally merged change.</Change>
  <Change author="David Srbecký" date="07/25/2010">Fixed DebugType.GetInterfaces().  It did not return interfaces implemented by base classes.</Change>
  <Change author="David Srbecký" date="07/25/2010">Marked #D as DPI aware</Change>
  <Change author="David Srbecký" date="07/25/2010">Tweaked ToString output of methods and properties in debugger tests</Change>
  <Change author="Siegfried Pammer" date="07/25/2010">fixed insertion of text in "surround with"</Change>
  <Change author="tomaslinhart" date="07/25/2010">- Cleaned AssemblyInfo.cs
- Small tweaks to Dependency Matrix
- Implementation of Relationships. For now only for Namespace.</Change>
  <Change author="Matt Ward" date="07/25/2010">Component Inspector is now a sample.</Change>
  <Change author="Daniel Grunwald" date="07/25/2010">Merge remote branch 'svn/vbnet'</Change>
  <Change author="David Srbecký" date="07/25/2010">Don't add interface methods to type - use only the defined ones</Change>
  <Change author="Matt Ward" date="07/25/2010">Update NUnit to version 2.5.6</Change>
  <Change author="Matt Ward" date="07/25/2010">Added Apache license for IronRuby to installer.</Change>
  <Change author="David Srbecký" date="07/25/2010">Fixed DebugType.GetMember in case of explicit interface implementation and interface inheritance</Change>
  <Change author="Daniel Grunwald" date="07/24/2010">Don't reuse the TextView's text formatter - this causes crashes on some machines (e.g. Tomáš)</Change>
  <Change author="Martin Koníček" date="07/24/2010">Context actions: fixed logical bug when resolving class declarations on current line by name - more classes with same name and different type arguments can exist, of course.</Change>
  <Change author="Matt Ward" date="07/24/2010">Updated IronRuby to version 1.1</Change>
  <Change author="Martin Koníček" date="07/24/2010">Implemented "Add using" editor context action.</Change>
  <Change author="Matt Ward" date="07/24/2010">Stopped the XML editor from downloading xml.xsd from the internet.</Change>
  <Change author="Martin Koníček" date="07/24/2010">Decoupled "Add using" functionality from context menu building.</Change>
  <Change author="tomaslinhart" date="07/24/2010">A first draft of dependency matrix.</Change>
  <Change author="Martin Koníček" date="07/24/2010">"Implement abstract class" editor context action.</Change>
  <Change author="Siegfried Pammer" date="07/23/2010">fixed NullReferenceException in CSharpMethodExtractor</Change>
  <Change author="Martin Koníček" date="07/22/2010">Fix recently introduced bug when opening files with other than C#/VB content.</Change>
  <Change author="Martin Koníček" date="07/22/2010">Implemented new "Implement interface" editor context action using the code recently decoupled from context menus.
It is turned off so far because the GUI is unfinished.</Change>
  <Change author="Martin Koníček" date="07/22/2010">"Implement interface" and "Implement abstract class" editor context menu items are shown only when needed (that is the class/interface is not yet implemented).</Change>
  <Change author="Martin Koníček" date="07/22/2010">Refactoring: decoupled code to implement abstract class from building the menus.</Change>
  <Change author="Martin Koníček" date="07/22/2010">Refactoring: decoupled 'Implement interface' actions from menu building.</Change>
  <Change author="Martin Koníček" date="07/22/2010">Progress with editor Context actions.</Change>
  <Change author="Daniel Grunwald" date="07/22/2010">Fix NullReferenceException when drawing collapsed fold markers (bug introduced by optimization in r6169)</Change>
  <Change author="Daniel Grunwald" date="07/21/2010">AvalonEdit perf optimization: Use a single TextLine for tab and space markers instead of creating FormattedText on demand.</Change>
  <Change author="Daniel Grunwald" date="07/21/2010">AvalonEdit perf optimization: when the selection changes, don't redraw the whole selection but only the text added/removed from the selection.</Change>
  <Change author="Martin Koníček" date="07/21/2010">Split ContextActionsControl into 2 user controls: the TreeView and the Header.</Change>
  <Change author="Martin Koníček" date="07/20/2010">Added basic classes for editor Context actions (ReSharper-like "bulb").</Change>
  <Change author="Daniel Grunwald" date="07/20/2010">Fix bug in global styles that caused crash on startup.</Change>
  <Change author="Siegfried Pammer" date="07/19/2010">fixed selection handling in ExtractPropertiesAsStyleCommand</Change>
  <Change author="Siegfried Pammer" date="07/19/2010">only display snippets that are mapped to a currently available keyword</Change>
  <Change author="Daniel Grunwald" date="07/19/2010">Fixed build.</Change>
  <Change author="Siegfried Pammer" date="07/19/2010">save only changed snippets in the SharpDevelop options</Change>
  <Change author="Daniel Grunwald" date="07/19/2010">Make sure buttons have the correct size (using a style with MinWidth=75 and Padding=9,1).
Use UniformGridWithSpacing for layout of OK and Cancel buttons (these should have the same size even in languages where the OK button needs more space than 75 pixels).
Option Panels: give check boxes a bit more space</Change>
  <Change author="Matt Ward" date="07/18/2010">Code coverage addin is now working again.</Change>
  <Change author="Matt Ward" date="07/17/2010">Restructured code coverage unit tests.</Change>
  <Change author="Martin Koníček" date="07/15/2010">Moved
Rename, Move class to file, Rename file, Extract interface class context menu items from SharpDevelop to SharpRefactoring.addin.

Added comments to MenuBuilders about Addin tree paths where they are registered, for better clarity on how the menu builders work.</Change>
  <Change author="Martin Koníček" date="07/15/2010">Moved context menu items "Implement interface" from SharpDevelop to SharpRefactoring.addin, where "Implement abstract class" is.</Change>
  <Change author="Martin Koníček" date="07/15/2010">Code completion respects suggested item: e.g. when typing "DateTimeKind k =", the completion window pres-selects the DateTimeKind entry.</Change>
  <Change author="Siegfried Pammer" date="07/13/2010">reactivated IL Rewrite</Change>
  <Change author="David Srbecký" date="07/12/2010">Ignore 0x80131C3B The application did not supply symbols when it loaded or created this module, or they are not yet available.</Change>
  <Change author="David Srbecký" date="07/12/2010">Rewritten filename -&gt; symbol document resolution</Change>
  <Change author="David Srbecký" date="07/12/2010">Improved the filename -&gt; symbol document resolution</Change>
  <Change author="David Srbecký" date="07/12/2010">Added unit test for dynamic code</Change>
  <Change author="David Srbecký" date="07/12/2010">In .NET 4.0, we use the LoadClass callback to load dynamic modules because it always works - UpdateModuleSymbols does not.
  - Simple dynamic code generation seems to trigger both callbacks.
  - IronPython for some reason causes just the LoadClass callback so we choose to rely on it out of the two.</Change>
  <Change author="David Srbecký" date="07/12/2010">Support for new dynamic debugging features in .NET 4.0</Change>
  <Change author="Matt Ward" date="07/12/2010">Add files to support unit testing in IronRuby.</Change>
  <Change author="Matt Ward" date="07/12/2010">IronRuby addin now adds the directories of referenced projects to the load path when running unit tests. This allows unit tests to be put in a separate project to the code under test.</Change>
  <Change author="Matt Ward" date="07/12/2010">Fix null reference exception when using ProjectReferenceProjectItem in unit tests - LocalizedObject checks for null workbench when refiltering properties.</Change>
  <Change author="Martin Koníček" date="07/12/2010">Changed F11 -&gt; F9 also in editor context menu labels.</Change>
  <Change author="Martin Koníček" date="07/12/2010">Shortcuts:
Find derived classes: F11 (used for debugger Step in, of course..) -&gt; F9
Build project: F9 -&gt; Ctrl+F8 (F8 is used for Build solution, so Ctrl+F8 sounds quite logical and it was free. Feel free to write me if it is not a good shortcut)</Change>
  <Change author="Martin Koníček" date="07/11/2010">"F12 to Find references" also works on local variables.
Added error messages if F11 is pressed when caret is not over valid symbol. (Go to definition / Find references stays without error message - error message might be annoying; I think F11 needs some explanation to the user though)</Change>
  <Change author="Martin Koníček" date="07/11/2010">ContextActionsPopup (Used by Find derived classes, base classes and overrides) is closed by ESC.</Change>
  <Change author="Martin Koníček" date="07/11/2010">Shortcuts:
Replace - Ctrl+H (like in Visual Studio; F2 collides with "Rename" used in several places)
Toggle bookmark / prev bookmark / next bookmark - Ctrl+M / Ctrl+, / Ctrl+.</Change>
  <Change author="Matt Ward" date="07/11/2010">Added support for running tests with Ruby's unit testing framework.</Change>
  <Change author="Martin Koníček" date="07/11/2010">Shortcuts:
Rename - Ctrl+R (Replace changed Ctrl+R -&gt; Alt+R),
Find references - F12 (VS uses F12 for Go to definition)
Go to derived class / override - F11
Go to base class - no shortcut

To make these shortcuts work, added items to "Search" menu.

Modified AbstractEntity.IsOverridable to return true also for interface members.
</Change>
  <Change author="Matt Ward" date="07/10/2010">WiX addin now generates unique ids for directories. </Change>
  <Change author="tomaslinhart" date="07/09/2010">The summary box provides now basic summary of node.</Change>
  <Change author="Martin Koníček" date="07/09/2010">Enhanced look of ContextActionPopup.</Change>
  <Change author="tomaslinhart" date="07/09/2010">Added a support for a selected vertex. The selected vertex got different color and can be deselected by clicking its again.</Change>
  <Change author="Siegfried Pammer" date="07/09/2010">Show only snippets with a ${Selection} in Ctrl+J list.</Change>
  <Change author="Siegfried Pammer" date="07/09/2010">fixed http://usagedatacollector.sharpdevelop.net/analysis/ExceptionGroup/Edit/59</Change>
  <Change author="Daniel Grunwald" date="07/09/2010">Add CompressingTreeList.GetRunLength method.</Change>
  <Change author="Daniel Grunwald" date="07/08/2010">IncludeDoozer: show error message only if included path was not found (don't catch unrelated TreePathNotFoundException)</Change>
  <Change author="Daniel Grunwald" date="07/08/2010">Apply patch from Boris Kozorovitzky:
1. Change order of creating a project from a template:
 - users are asked about overwriting files first before anything gets written to disk
 - write files to disk before calling CreateProject so that the IProjectBinding implementation can use the files that were written by the template
2. Don't read binary files used in file/project templates into memory. Instead, use File.Copy to copy the file directly into the new project.
3. Avoid crash if IProject implementation does not provide IProjectItemListProvider.</Change>
  <Change author="tomaslinhart" date="07/06/2010">Images can be saved in more formats. Removed measuring which was transforming graph.</Change>
  <Change author="tomaslinhart" date="07/06/2010">Implemented context menu for vertices.

Implemented operations for removing vertices (eg. by what use what)
Implemented an option to save graph to an image.
Implemented an option to reset graphs.</Change>
  <Change author="Martin Koníček" date="07/06/2010">Editor context menus for Find derived classes etc. open at right position: added GetScreenPosition(int line, int column) to IEditorUIService.
TODO test on higher DPI.</Change>
  <Change author="tomaslinhart" date="07/06/2010">Graphs are cached now. Should improve performance a little bit.</Change>
  <Change author="Daniel Grunwald" date="07/06/2010">Add workaround to ICSharpCode.Core that makes assemblies in the LoadFrom context also available in the Load context. This fixes some problems using WPF or .NET remoting in SharpDevelop AddIns.</Change>
  <Change author="Daniel Grunwald" date="07/06/2010">Upgrade to AvalonDock 1.3.3571</Change>
  <Change author="Martin Koníček" date="07/06/2010">"Insert Constructor" refactoring works also with properties. By default, all fields and properties are checked, rather than unchecked. Field and property names are converted to parameter names (first character is lowercase).</Change>
  <Change author="Daniel Grunwald" date="07/06/2010">Show progress running unit tests in status bar.</Change>
  <Change author="Daniel Grunwald" date="07/06/2010">When running unit tests in multiple projects, perform a single build for all those projects before executing any tests.</Change>
  <Change author="tomaslinhart" date="07/06/2010">Fixed a small issue with generic instance.</Change>
  <Change author="tomaslinhart" date="07/06/2010">Vertixes are clickable. Single click shows summary. Double click show internal dependency. Created a new GraphLayout component.</Change>
  <Change author="David Srbecký" date="07/05/2010">Reset JMC after obtaining dynamic symbols update.  Some extra log messages.  (This still does not fix IronPython 4.0)</Change>
  <Change author="tomaslinhart" date="07/05/2010">Added a support for method parameters. Added a support for generic instance of types.</Change>
  <Change author="tomaslinhart" date="07/05/2010">Added a new template for graphs from GraphSharp. Added new buttons for layouting. Replaced WPFExtension ZoomControl with ICSharpCode ZoomControl.</Change>
  <Change author="tomaslinhart" date="07/04/2010">Implemented icons in tree. Added a lof of properties with information about fields, methods and so on.</Change>
  <Change author="Daniel Grunwald" date="07/04/2010">Remove ICSharpCode.SharpDevelop.DefaultEditor namespace.</Change>
  <Change author="Daniel Grunwald" date="07/04/2010">Merge from /branches/3.0:
r5983 Fixed bug that caused MSBuild item metadata values to always be escaped on project creation.
r5998 Fix label edit operation in ExtTreeView (original text was shown behind label edit text box).</Change>
  <Change author="tomaslinhart" date="07/04/2010">Added a module dependency graph where are dependencies between namespacies.</Change>
  <Change author="tomaslinhart" date="07/04/2010">Nested types wasn't properly assigned to a parent type. Added comments for every method.</Change>
  <Change author="tomaslinhart" date="07/03/2010">Added a support for Events. Some refactoring and fixes with declaring types.</Change>
  <Change author="Daniel Grunwald" date="07/03/2010">Remove ICSharpCode.TextEditor.</Change>
  <Change author="tomaslinhart" date="07/03/2010">Fixed reading Nested Types.</Change>
  <Change author="Martin Koníček" date="07/03/2010">Implemented "Find overrides" popup in the context menu of methods and properties.</Change>
  <Change author="Daniel Grunwald" date="07/01/2010">Adjust CSharpCodeCompletion sample to DOM changes (NamespaceEntry/KeywordEntry).</Change>
  <Change author="Martin Koníček" date="06/29/2010">Find overrides menu item is available for interface members.</Change>
  <Change author="Martin Koníček" date="06/28/2010">Derived/base classes popups show class names using AmbienceService.GetCurrentAmbience().</Change>
  <Change author="Martin Koníček" date="06/28/2010">Derived classes popup and Base classes popup show partial classes only once.</Change>
  <Change author="Martin Koníček" date="06/26/2010">Derived classes popup closes when action used or focus lost.
</Change>
  <Change author="Martin Koníček" date="06/26/2010">Renamed ContextAction to IContextAction.</Change>
  <Change author="Martin Koníček" date="06/26/2010">Added "Find derived classes command" to class context menu, which shows in-place popup with inheritance tree.
  - Implemented this in SharpDevelop.addin (not SharpRefactoring.addin) because original Find references is implemented in SharpDevelop as well
  - Implemented as new separate command, because original "Find references" command makes sense in other class contexts (Class browser) where the new command doesn't make sense
  - TODO: positon the popup on caret - HOW?, close the popup

Implemented Context actions - the ReSharper-like popup with context-relevant actions that will be shown over editor.
  - Actions can form a tree, mostly will be a flat list
  - Used to implement inheritance tree popup

Removed "Save", "Save As", "Save with encoding" and "Close" items from editor context menu. They occupy space, are rarely used, and are accessible from File menu.</Change>
  <Change author="Martin Koníček" date="06/24/2010">Renamed code snippet "props" to "prop", as the short property form is usually preferred.
Property with backing field is now "propfull", added "propg" for property with private setter. These names match Visual Studio names, to make switch to SharpDevelop easier.</Change>
  <Change author="Martin Koníček" date="06/24/2010">Cleaned up RefactoringService.FindDerivedClasses a bit.
Removed IClass.GetBaseType(int index) - it had only one implementation returning this.BaseTypes[index] -&gt; user can always use IClass.BaseTypes.</Change>
  <Change author="Matt Ward" date="06/22/2010">IronPython addin now using AvalonEdit.</Change>
  <Change author="kumardevvrat" date="06/22/2010">Copy ICSharpCode.SharpDevelop.Widgets to output directory to resolve missing references, see http://community.sharpdevelop.net/forums/t/11421.aspx</Change>
  <Change author="Matt Ward" date="06/19/2010">Add IronRuby addin to SharpDevelop unit tests solution.</Change>
  <Change author="Matt Ward" date="06/19/2010">IronRuby addin now uses AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="06/17/2010">Remove all ctrl+alt+letter shortcuts. These conflict with text input methods on some keyboard layouts (e.g. Ctrl+Alt+Q='@' on German keyboard; Ctrl+Alt+B='{' on Slovenian, etc.).</Change>
  <Change author="Daniel Grunwald" date="06/17/2010">Fixed forum-11419: FxCop showing errors in file 'positionof#...'</Change>
  <Change author="Martin Koníček" date="06/15/2010">Kind of fixed SD2-1683, should be fixed properly by refactoring RenamedClass (which is only used at one place as special suggested entry in CC).</Change>
  <Change author="Martin Koníček" date="06/15/2010">Fixed bug in CC when typing fully qualified name.</Change>
  <Change author="Daniel Grunwald" date="06/13/2010">Fixed DefinitionViewPad.</Change>
  <Change author="Daniel Grunwald" date="06/12/2010">Handle error when trying to create a C++ project on a machine without Windows SDK installed.</Change>
  <Change author="Daniel Grunwald" date="06/12/2010">Add missing file (CSharp.Exception.xft) to setup.</Change>
  <Change author="Daniel Grunwald" date="06/12/2010">Require .NET 3.5 SP1 when installing SharpDevelop 4.0.</Change>
  <Change author="Daniel Grunwald" date="06/12/2010">Use global lock when running Boo parser (Boo compiler's type system is static, so we cannot run the parser concurrently for multiple files)</Change>
  <Change author="Daniel Grunwald" date="06/12/2010">Try to fix SD2-1681 NullReferenceException in AvalonDock.DocumentContent.Close</Change>
  <Change author="Daniel Grunwald" date="06/12/2010">Re-read MSBuild items list when target framework is changed.</Change>
  <Change author="Daniel Grunwald" date="06/12/2010">WpfSynchronizeInvoke.Invoke: pass exceptions to the calling thread</Change>
  <Change author="Daniel Grunwald" date="06/12/2010">Fix SD2-1680: DirectoryNotFoundException when creating new Form while Task List is open</Change>
  <Change author="Daniel Grunwald" date="06/11/2010">Make editor read-only when opening a read-only file.</Change>
  <Change author="Daniel Grunwald" date="06/11/2010">Use [Browsable(false)] on IProject properties that should not be shown in property grid.</Change>
  <Change author="Daniel Grunwald" date="06/11/2010">Fix ActivatePad() implementation so that it doesn't force the pad to be docked in the main window (forum-11355).</Change>
  <Change author="Daniel Grunwald" date="06/11/2010">Cache svn status results; fixes SD2-1672 - Subversion AddIn extremely slow</Change>
  <Change author="Daniel Grunwald" date="06/11/2010">Fixed bug in TaskBoundLoggerFilter that caused the "Suppress message" command to not be available on FxCop warnings.</Change>
  <Change author="Daniel Grunwald" date="06/11/2010">Add comment why we can't use this.CommandBindings in SDWindowsFormsHost.</Change>
  <Change author="Daniel Grunwald" date="06/11/2010">Fix SD2-1671 - Delete key is processed both by Windows Forms and WPF</Change>
  <Change author="Daniel Grunwald" date="06/10/2010">UDC: use system time only on startup and then work with timespans relative to that. This ensures we don't collect confusing data if the system time changes while SharpDevelop is running.</Change>
  <Change author="Daniel Grunwald" date="06/10/2010">UpdateAssemblyInfo: enable reading revision number from git-svn</Change>
  <Change author="Siegfried Pammer" date="06/07/2010">added additional null checking - possible fix for ExceptionGroupId 126</Change>
  <Change author="Mathias Simmack" date="06/06/2010">intercepting DocumentComplete to hide the lightweight TOC in the help content (required after using Search, for example)</Change>
  <Change author="Matt Ward" date="06/05/2010">Code coverage addin now uses the new text editor - AvalonEdit.</Change>
  <Change author="Mathias Simmack" date="06/05/2010">some Combobox improvements in the Search pad (MRU ability, reverse order for saved terms)</Change>
  <Change author="Matt Ward" date="06/05/2010">Added option to generate Visual Studio style event handlers in the Windows Forms designer.</Change>
  <Change author="Matt Ward" date="06/05/2010">Python addin now recognises tests that use the unittest2 library.</Change>
  <Change author="Martin Koníček" date="06/04/2010">The hint in CodeCompletion is now shown also when showing CC after dot.</Change>
  <Change author="Martin Koníček" date="06/04/2010">Bugfix - CodeCompletion does not insert using if user is types fully qualified type name.</Change>
  <Change author="Martin Koníček" date="06/04/2010">CodeCompletion window is empty when no EmptyText is set.</Change>
  <Change author="Martin Koníček" date="06/04/2010">CC window shows the hint "Press Ctrl+Space to show items from all namespaces" only if Ctrl+Space was not already pressed, and only for NRefactoryCodeCompletionBinding (C# and VB languages).

Implementation:
- added bool ICompletionItemList.ContainsAllAvailableItems - the list tells if it could contain even more items and anyone displaying it (SharpDevelopCompletionWindow) can handle this
- bool ContainsAllAvailableItems is always true except for NRefactoryCompletionItemList returned by NRefactoryCtrlSpaceCompletionItemProvider, where it can be set to false</Change>
  <Change author="Mathias Simmack" date="06/04/2010">replaced TextBox by ComboBox in the Search pad</Change>
  <Change author="Daniel Grunwald" date="06/02/2010">Remove EmptyTemplate from AvalonEdit, instead re-style the CompletionListBox within SharpDevelopCompletionWindow.xaml</Change>
  <Change author="Martin Koníček" date="06/02/2010">Commented out the style for SharpDevelopCompletionWindow so that the "Set property 'System.Windows.Setter.Property' threw an exception.' Value cannot be null."  crash in ctor of CompletionWindow dissapears.</Change>
  <Change author="Martin Koníček" date="06/02/2010">Changed CompletionListBox.EmptyTemplate to ContentPresenter. Attempt to provide TextBlock in SharpDevelopCompletionWindow.xaml, but nothing gets displayed.</Change>
  <Change author="tomaslinhart" date="06/02/2010">Created basic ingtegration of CodeQualityAnalysis AddIn to SharpDevelop.</Change>
  <Change author="tomaslinhart" date="06/02/2010">Initial commit of Code Quality Analysis AddIn.</Change>
  <Change author="Martin Koníček" date="06/01/2010">Localized 3 new resource strings.</Change>
  <Change author="Martin Koníček" date="06/01/2010">When CodeCompletion window is empty, it shows "Press Ctrl+Space to show items from all namespaces", so that user learns how to use Ctrl+Space naturally.</Change>
  <Change author="Daniel Grunwald" date="06/01/2010">Fix compiler error in AvalonEdit.Sample.</Change>
  <Change author="Daniel Grunwald" date="06/01/2010">Fix SD2-1669: Exception when opening DatabasesTreeViewPad</Change>
  <Change author="Daniel Grunwald" date="06/01/2010">UDC: Upload name of feature branch</Change>
  <Change author="Daniel Grunwald" date="06/01/2010">Prevent ArgumentOutOfRangeException in XmlFoldingStrategy if .NET reports XML error at line 0.</Change>
  <Change author="Daniel Grunwald" date="06/01/2010">Remove unused references to ICSharpCode.TextEditor.</Change>
  <Change author="Mathias Simmack" date="06/01/2010">fixed exception when opening the options dialog with no catalogs installed</Change>
  <Change author="Martin Koníček" date="05/31/2010">CodeCompletion shows only imported types. Shows all available types on Ctrl+Space press. After using it for a few days, I found that always showing all types can be confusing, like always showing all extension methods. Now both types and extension methods need Ctrl+Space.</Change>
  <Change author="Martin Koníček" date="05/31/2010">CodeCompletion inserts Attributes without the "Attribute" suffix (correctly - only in attribute contexts, that is [*expr*] class *expr*).</Change>
  <Change author="Martin Koníček" date="05/31/2010">Added option to turn on/off symbol highlighting to Options/TextEditor/Markers and Rulers.
Deleted unused Debugger visualize files.</Change>
  <Change author="Daniel Grunwald" date="05/31/2010">Update to AvalonDock 1.3.3391</Change>
  <Change author="Daniel Grunwald" date="05/31/2010">Remove AvalonDock 1.2 (prepare for update to 1.3)</Change>
  <Change author="Daniel Grunwald" date="05/31/2010">Update string resources.</Change>
  <Change author="Mathias Simmack" date="05/30/2010">simple Search pad for the Help system included</Change>
  <Change author="Matt Ward" date="05/30/2010">Update setup solution and project to use MSBuild 4.0 so it can be built inside SharpDevelop 4.0.</Change>
  <Change author="Matt Ward" date="05/29/2010">Fixed null reference when compiling IronPython projects or projects that explicitly do not reference mscorlib.</Change>
  <Change author="Matt Ward" date="05/29/2010">Added support for integrated unit testing with IronPython.</Change>
  <Change author="Daniel Grunwald" date="05/28/2010">Store RecentOpen lists in array (instead of joining strings)</Change>
  <Change author="Martin Koníček" date="05/27/2010">Added C# New file template for user Exception.</Change>
  <Change author="Daniel Grunwald" date="05/27/2010">Update Mono.Cecil to commit a9195cc682bece967677152d7d6bc433a58d746c.
Should fix ArgumentException in Mono.Cecil.TypeParser.GetMetadataScope.</Change>
  <Change author="Daniel Grunwald" date="05/27/2010">Fixed C# parser when casting the result of a default-expression "(int)default(short)".
Code cleanup in OptionPanel.</Change>
  <Change author="Daniel Grunwald" date="05/27/2010">Fix build.</Change>
  <Change author="Daniel Grunwald" date="05/27/2010">Remove unused parameter "buildServices" from IBuildable.StartBuild.</Change>
  <Change author="Daniel Grunwald" date="05/27/2010">Suppress MSB3644: The reference assemblies for framework ... were not found.</Change>
  <Change author="Daniel Grunwald" date="05/27/2010">Report error code when deleting file fails.</Change>
  <Change author="Mathias Simmack" date="05/26/2010">included external help option (to display the help in the default viewer/browser)</Change>
  <Change author="Mathias Simmack" date="05/26/2010">new properties for the Help3Catalog class and translatable messages and labels</Change>
  <Change author="Matt Ward" date="05/24/2010">Added a custom unit test runner sample that supports running MbUnit tests with Gallio.</Change>
  <Change author="Mathias Simmack" date="05/24/2010">checking in the Contents control (again)</Change>
  <Change author="Mathias Simmack" date="05/24/2010">included (with his permission) Sebastian Ullrich's code for the Contents pad</Change>
  <Change author="Martin Koníček" date="05/23/2010">CodeCompletion after dot shows only extension methods from imported namespaces. If Ctrl+Space is pressed, all extension methods from all referenced projects are shown.

Original Ctrl+Space (types shown when user starts typing in the editor) still always shows types from all referenced projects. Maybe we could change this to show only items from imported namespaces by default, and all items for Ctrl+Space press, for consistency (ReSharper-like). If we want this, NRefactoryResolver.CtrlSpace() method is ready for this change. I am not sure yet, I quite like current state (all types shown in CC don't bother me), but it is a little inconsistent.</Change>
  <Change author="Matt Ward" date="05/23/2010">Unit testing addin can now be extended with custom test runners.</Change>
  <Change author="Mathias Simmack" date="05/23/2010">new property for catalog class replaces the ToString() usage, fixed a misspelling in a debug message, options dialog uses data binding</Change>
  <Change author="Siegfried Pammer" date="05/23/2010">Integrated HelpViewer by Mathias Simmack into setup and removed old HtmlHelp2</Change>
  <Change author="Mathias Simmack" date="05/23/2010">set core classes to public, fixed a bug in the search help URL and removed the DisplayCatalog menu command</Change>
  <Change author="Mathias Simmack" date="05/22/2010">renamed a few methods and includes the HelpLibraryManager.cs class (unused at this point)</Change>
  <Change author="kumardevvrat" date="05/20/2010">Fix bugs
-Invert Row lengths that appears in left GridRailAdorner
-Update code which caused Row/Column lengths to be displayed at wrong positions after creation of new RowDefinition/ColumnDefinition. 
</Change>
  <Change author="Mathias Simmack" date="05/20/2010">fixed a probleme with the BrowserScheme extension and a few minor problems</Change>
  <Change author="Mathias Simmack" date="05/20/2010">ShowErrorHelpCommand included and HelpMenu.cs renamed into Commands.cs</Change>
  <Change author="Mathias Simmack" date="05/20/2010">checked in the initial version of the new HelpViewer addin</Change>
  <Change author="kumardevvrat" date="05/16/2010">Fix error in commit:5827</Change>
  <Change author="kumardevvrat" date="05/16/2010">Filter DefaultEvent for controls derived from ItemsControl : Menu, TreeView, StatusBar</Change>
  <Change author="kumardevvrat" date="05/16/2010">Fix bug : clicking on a selected control, if two or more controls were already selected in WPF designer did not change the selection. </Change>
  <Change author="Daniel Grunwald" date="05/14/2010">Add SharpDevelop.TargetingPack.targets to setup.</Change>
  <Change author="Daniel Grunwald" date="05/13/2010">StartPage: Move check if solution files still exist onto a background thread (solutions might be stored on slow network drive)</Change>
  <Change author="Daniel Grunwald" date="05/13/2010">Add "CopyLocalWorkaround" to build. (part of fix for SD2-1670 - Allow compiling .NET 4 projects without having the .NET 4 SDK installed)</Change>
  <Change author="Daniel Grunwald" date="05/08/2010">Fixed build.</Change>
  <Change author="Martin Koníček" date="05/08/2010">CodeCompletion shows only imported extension methods again (original behavior). Will show all available extension methods on Ctrl+Space.</Change>
  <Change author="Daniel Grunwald" date="05/08/2010">Fixed build order.</Change>
  <Change author="Daniel Grunwald" date="05/08/2010">Move Analysis AddIns to src/AddIns/Analysis</Change>
  <Change author="Daniel Grunwald" date="05/08/2010">Merge /branches/3.0 to /trunk.</Change>
  <Change author="Daniel Grunwald" date="05/07/2010">C# parser: add support for named arguments in attributes.</Change>
  <Change author="Daniel Grunwald" date="05/07/2010">AvalonEdit Rope: Corrections for XML documentation.
Analysis/ExcelReport: add automatic detection of most commonly used versions for use as 'known versions'.</Change>
  <Change author="Daniel Grunwald" date="05/06/2010">Fixed SD2-1667: Putting caret into "dynamic" causes ArgumentNullException</Change>
  <Change author="Daniel Grunwald" date="05/06/2010">Fixed SD2-1666: Arrays of dynamic don't show code completion</Change>
  <Change author="Daniel Grunwald" date="05/06/2010">Update to Mono.Cecil 0.9.2 (commit f59c382).</Change>
  <Change author="Daniel Grunwald" date="05/06/2010">Fixed NullReferenceException in TypeResolveResult.IsReferenceTo.</Change>
  <Change author="Daniel Grunwald" date="05/06/2010">Fixed ArgumentException in TextView.Redraw when deleting line in XML document.</Change>
  <Change author="Daniel Grunwald" date="05/06/2010">XamlOutlineContentHost: update outline view only if parse info of the correct file was updated (previously was updating whenever there was any new parse info)</Change>
  <Change author="Daniel Grunwald" date="05/06/2010">Remove incorrect mime-type (layout xmls are text files)</Change>
  <Change author="Martin Koníček" date="05/06/2010">Fixed bug in CodeCompletion filtering by substring.</Change>
  <Change author="Daniel Grunwald" date="05/05/2010">Fixed SD2-784 - File still considered dirty after undoing all changes.
Fixed incorrect behavior of TextEditor.IsModified when continued undo groups are used.</Change>
  <Change author="Daniel Grunwald" date="05/05/2010">Fixed NullReferenceException in CodeCompletionItem.Complete.
Simplify some code.</Change>
  <Change author="Daniel Grunwald" date="05/05/2010">AvalonEdit: add TextEditor.IsModified property</Change>
  <Change author="Martin Koníček" date="05/05/2010">CodeCompletion optimization - as the user types, the filtered result is filtered again instead of always filtering the whole completion data.</Change>
  <Change author="Martin Koníček" date="05/05/2010">Show fully qualified type names in CC tooltip (to distinguish between more types with same name in the CC list).</Change>
  <Change author="Martin Koníček" date="05/05/2010">The new auto-insert-using CodeCompletion now works for Extension methods too.</Change>
  <Change author="Martin Koníček" date="05/04/2010">Fixes failing XAML test (caused by change in CodeCompletionItem.Complete()).</Change>
  <Change author="Martin Koníček" date="05/04/2010">Attempt to fix build, Mock projects in Tests also implement 2 new methods in IProjectContent by throwing NotImplementedException.</Change>
  <Change author="Martin Koníček" date="05/04/2010">CC shows all types from all referenced assemblies. If type which is missing using is selected, the using is added automatically. TODO make work for extension methods.
How I did this (please Daniel check if it's OK):
- added new method CtrlSpaceResolveHelper.AddReferencedProjectsContents()
- use this method in NRefactoryResolver.CtrlSpaceInternal() instead of CtrlSpaceResolveHelper.AddImportedNamespaceContents(), that means this will work for NRefactory languages. I believe there is no simple way to make it work for XAML, F#, Boo and Python at the same time, as they have different IResolvers that don't share any code, (although they maybe could?)
-&gt; that means CC list always contains all referenced APIs
- Extend CodeCompletionItem.Complete() method to look if IClass being completed can be resolved in current context, and if not, add the using

The CC list gets larger now - I am profiling this to achieve the best speed possible.

Minor CC improvement:
- if there are more types with the same name, all of them are shown in CC. If user selects type which is not the one closest to current scope, CC inserts full name (e.g. if user has his own XmlNode class in current namespace, he can still choose to insert "System.Xml.XmlNode" from CC). TODO show fully qualified name in CC tooltips.
- compare to VS 2010 behavior: shows only the type that is closest to current scope (i.e. only shows user's XmlNode)</Change>
  <Change author="Siegfried Pammer" date="05/04/2010">profiler suggestion by Martin: use short name (Class.Method) in profiler treeview to save space; tooltip still shows full signature</Change>
  <Change author="Siegfried Pammer" date="05/03/2010">use code generator for string.Format() call in OverrideToStringMethodRefactoring (fixes invalid newlines in generated code)</Change>
  <Change author="Martin Koníček" date="05/03/2010">CodeCompletion: filtered items are shown in the same order as they were before filtering. The best match is selected.</Change>
  <Change author="Siegfried Pammer" date="05/02/2010">fixed minor bugs in ExtractMethod</Change>
  <Change author="Siegfried Pammer" date="05/02/2010">replaced IndexerDeclaration by PropertyDeclaration with IsIndexer property (uses Default modifier)</Change>
  <Change author="Daniel Grunwald" date="05/01/2010">Detect when newlines are inconsistent and allow user to fix them.</Change>
  <Change author="Siegfried Pammer" date="05/01/2010">fixed bugs in IntroduceMethod (including SD2-1665)</Change>
  <Change author="Daniel Grunwald" date="05/01/2010">Fixed unhandled exceptions during UDC upload.
Remove dead code.</Change>
  <Change author="Martin Koníček" date="04/30/2010">Switch snippet prefixes enum cases by namespace only when needed, thanks to CodeGenerator.ConvertType.</Change>
  <Change author="Martin Koníček" date="04/30/2010">Code completion window sizes height to content.</Change>
  <Change author="Martin Koníček" date="04/29/2010">Fixed build, sorry.</Change>
  <Change author="Martin Koníček" date="04/29/2010">CompletionList - implemented ReSharper (and VS2010)-like Code completion:
- search by substring
- search by camel case: writing "fs" finds "FileStream"
- filtering the items (showing only the matching ones) and sorting them by quality
- the exact old behavior (with search by camel case added) can be turned on by setting CompletionList.IsSearchByStartOnly = true

TODO make the CompletionWindow size to content when the list is short - have to ask Daniel for the best way to do this</Change>
  <Change author="Martin Koníček" date="04/28/2010">Highlight references to expression under caret - changed the color to light blue.</Change>
  <Change author="Martin Koníček" date="04/27/2010">Implemented CaretReferencesRenderer - highlighting of all references to symbol under caret in the editor (VS2010 like).
Please provide feedback (usefulness, performance, highlight color, ...)
It should have no effect on editor performance - when moving caret by holding an arrow in the editor, nothing gets executed. After the caret stops for 100ms at one place, expression under caret is resolved to e.g. hide current highlight if no expression is under caret. Then, if the caret stays in place for 1000ms, "Find references in current document" is executed (on the main thread, but it's quite fast, maybe could be moved to background thread).
The timeouts are done using two DispatcherTimers.

Added "Find references in given document" (RefactoringService.FindReferencesLocal) to RefactoringService.
Refactored RefactoringService a bit, but public API and its behavior stays unchanged.

Fixed comment of DebuggerService.HandleToolTipRequest.
</Change>
  <Change author="Siegfried Pammer" date="04/27/2010">it is now possible to use C# ExtractMethod in:
- properties (getters and setters, implicit value parameter is added automatically)
- operators
- constructors</Change>
  <Change author="Daniel Grunwald" date="04/25/2010">Fix TimeoutException during UDC upload.</Change>
  <Change author="Martin Koníček" date="04/24/2010">Switch snippet code improved based on Daniel's advice. 
TODO: now fully qualified names of enum fields are used in case labels, even though namespace is unnecessary when it is present in document's 'using' section (very common case - have to improve this).</Change>
  <Change author="Daniel Grunwald" date="04/22/2010">Fixed SD2-1630: NotImplementedException in ICSharpCode.SharpDevelop.Internal.Templates.ProjectDescriptor.CreateProject</Change>
  <Change author="Daniel Grunwald" date="04/22/2010">Add workaround for Cecil bug causing unit test failure.</Change>
  <Change author="Daniel Grunwald" date="04/21/2010">Copy profiler hook dll into correct output directory.</Change>
  <Change author="Daniel Grunwald" date="04/21/2010">Allow building profiler with Windows SDK 7.0 (don't require 7.0a) by using the old .vcproj format instead of .vcxproj.</Change>
  <Change author="Martin Koníček" date="04/21/2010">Implemented switch snippet which inserts switch body dependent on switch condition. For enum condition prefills are enum cases. For non-enum condition inserts generic switch body with one case, like the old snippet.
TODO: make the code generation work for VB (using CodeGenerator), now C# switch is always inserted.</Change>
  <Change author="Daniel Grunwald" date="04/19/2010">Update to Mono.Cecil 0.9 (commit 8e50e24)</Change>
  <Change author="Siegfried Pammer" date="04/18/2010">improved display of strings and characters in debugger tooltips</Change>
  <Change author="Daniel Grunwald" date="04/17/2010">Fixed position of EOF token.</Change>
  <Change author="Siegfried Pammer" date="04/17/2010">removed *.sln file filter from "Add existing project" dialog to avoid adding .sln files to a solution.</Change>
  <Change author="Siegfried Pammer" date="04/15/2010">[VB9] added further unit tests for QueryExpressionVB</Change>
  <Change author="Siegfried Pammer" date="04/14/2010">[VB9]
- Updated AST to definition of FromClause
- Updated parser
- Added Unit Tests for QueryExpressionVB</Change>
  <Change author="Matt Ward" date="04/13/2010">Merge IronPython and IronRuby addins to trunk.</Change>
  <Change author="Siegfried Pammer" date="04/13/2010">[VB9]
- added QueryExpressionVB
- fixed grammar for Take and Skip clauses
- clauses where not added to QueryExpression
- fixed Idenitifier assignment in From clause
----
- fixed newlines in NRefactoryASTGenerator</Change>
  <Change author="Daniel Grunwald" date="04/12/2010">Use .NET 4 RTM (v4.0.30319) in .bat files and version check.</Change>
  <Change author="Daniel Grunwald" date="04/12/2010">Make NUnit compatible with .NET 4 RTM (instead of .NET 4 Beta 2).</Change>
  <Change author="Siegfried Pammer" date="04/12/2010">[VB9] Set Dom.IMethodOrProperty.IsExtensionMethod to True if &lt;Extension&gt; is used on VB methods.</Change>
  <Change author="Daniel Grunwald" date="04/12/2010">Merge /branches/3.0 to /trunk.</Change>
  <Change author="Siegfried Pammer" date="04/09/2010">add class code generators to refactorings context menu</Change>
  <Change author="Siegfried Pammer" date="04/09/2010">remove bookmarks from refactoring context menu</Change>
  <Change author="Matt Ward" date="04/07/2010">Prevent xml.xsd from being downloaded whilst running xml editor unit tests.</Change>
  <Change author="Daniel Grunwald" date="04/07/2010">Fixed a possible cause for SD2-1640 - DirectoryNotFoundException when adding source file</Change>
  <Change author="Daniel Grunwald" date="04/07/2010">Fixed tests</Change>
  <Change author="Daniel Grunwald" date="04/07/2010">Fixed build.
Assign priority to keywords in code completion.</Change>
  <Change author="Daniel Grunwald" date="04/07/2010">Fixed SD2-1604 - Code completion does not learn commonly used items</Change>
  <Change author="Daniel Grunwald" date="04/06/2010">Close InsightWindow when typing ')'.
Close code completion window after '.'-completion when deleting the dot with backspace.</Change>
  <Change author="Daniel Grunwald" date="04/06/2010">Fixed "is assembly in GAC" check for .NET 4 assemblies (thanks to Feng Chen).</Change>
  <Change author="Siegfried Pammer" date="04/06/2010">fixed XAML CC unit tests</Change>
  <Change author="Siegfried Pammer" date="04/05/2010">fixed partially invisible description in XAML code completion options pad</Change>
  <Change author="Siegfried Pammer" date="04/05/2010">fixed insertion bugs in XAML code completion and added unit tests</Change>
  <Change author="Siegfried Pammer" date="04/05/2010">fixed bug in XAML code completion: some accessible classes where not shown in CC</Change>
  <Change author="Martin Koníček" date="04/04/2010">Fixed build - removed Graphviz binaries from setup.</Change>
  <Change author="Martin Koníček" date="04/04/2010">Fixed build (forgot to remove post build event to xcopy Graphviz assemblies).</Change>
  <Change author="Martin Koníček" date="04/04/2010">Object graph visualizer - replaced Graphviz's neato.exe by my custom spline routing. Removed all native Graphviz libraries.

Routing algorithm (Graphviz's algorithm is similar): search shortest path (Dijkstra - fast enough, A* would be faster) in the following graph: vertices are corners off all boxes, moved outside of the boxes a little. Edges: any pair of vertices that can be connected by straight line not while not intersecting any box. Having the shortest path as poly-line. Just curve the corners (looks surprisingly good). Edges are routed independently, so they can cross. Having our own implementation, we could work on edge non-crossing algorithm in the future. That is, if the whole layout and routing won't be replaced by GraphSharp in the end.</Change>
  <Change author="Daniel Grunwald" date="03/30/2010">Move NumericUpDown and ZoomScrollViewer to SharpDevelop.Widgets.
Remove WPF designer's copy of NumericUpDown and ZoomControl and use SD.Widgets instead.</Change>
  <Change author="Daniel Grunwald" date="03/30/2010">Prevent XmlFoldParser from loading external DTDs.</Change>
  <Change author="Daniel Grunwald" date="03/30/2010">Improved Ctrl+MouseWheel Zoom</Change>
  <Change author="Daniel Grunwald" date="03/30/2010">Removed unused code from ICSharpCode.SharpDevelop.Widgets.</Change>
  <Change author="Daniel Grunwald" date="03/30/2010">Implemented Ctrl+MouseWheel zooming.</Change>
  <Change author="Daniel Grunwald" date="03/30/2010">Use AvalonEdit in definition view.</Change>
  <Change author="Siegfried Pammer" date="03/27/2010">fixed console output
- \n was missing after command in Debugger ConsolePad
- 1 \n too much in Boo Interpreter output</Change>
  <Change author="Daniel Grunwald" date="03/27/2010">Fixed lookup of relative paths for build errors.</Change>
  <Change author="Siegfried Pammer" date="03/27/2010">XamlOutlineContentHost now recreates outline tree only if the ParseInformation has been updated and not every 2 seconds</Change>
  <Change author="Siegfried Pammer" date="03/27/2010">fixed OverrideEqualsGetHashCodeMethodsDialog</Change>
  <Change author="Daniel Grunwald" date="03/26/2010">Fixed race condition in XmlFoldParser that could cause parser threads to get stuck in an infinite loop.</Change>
  <Change author="Daniel Grunwald" date="03/26/2010">Don't use &lt;TrackFileAccess&gt;false&lt;/TrackFileAccess&gt; because it forces a recompile every time. Move the resgen-requiring projects to .NET 4.0 instead.</Change>
  <Change author="Daniel Grunwald" date="03/26/2010">Make verbose MSBuild output even more verbose.
Fixed potential deadlock between IProjectContent.ReferencedContents lock and IProject.SyncRoot when switching a project to another target framework.</Change>
  <Change author="Daniel Grunwald" date="03/26/2010">Allow SharpDevelop AddIn to filter the logger output. Removed mutable 'CurrentErrorOrWarning' in BuildEngine and use logger filters instead.</Change>
  <Change author="Daniel Grunwald" date="03/26/2010">Add option to print MSBuild diagnostic output to SharpDevelop output pad.
Fixed bug that caused MSBuild to compile one project several times (possibly even in parallel, thus failing the build).</Change>
  <Change author="Daniel Grunwald" date="03/26/2010">Use external BuildWorker process for compilation. Use MSBuild 3.5 for compiling projects with ToolsVersion&lt;"4.0".</Change>
  <Change author="Daniel Grunwald" date="03/25/2010">Revive old BuildWorker.</Change>
  <Change author="Daniel Grunwald" date="03/24/2010">Fixed InvalidCastException when opening class diagram.</Change>
  <Change author="Daniel Grunwald" date="03/24/2010">WPF Designer: removed incorrect cast that caused columns to be sized incorrectly when inserting into a Grid</Change>
  <Change author="Daniel Grunwald" date="03/24/2010">Fixed encoding autodetection in ChooseEncodingDisplayBinding to match that when normally opening a file.
LoadSolutionProjectThread: Send progress report for the number of files parsed.</Change>
  <Change author="Matt Ward" date="03/20/2010">Merge Python and Ruby addin changes to trunk.</Change>
  <Change author="Daniel Grunwald" date="03/19/2010">Fixed SD2-1610 - Add back file encoding option</Change>
  <Change author="Daniel Grunwald" date="03/19/2010">Fixed SD2-1652: "Cannot save with current encoding" not implemented in AvalonEdit.AddIn</Change>
  <Change author="Daniel Grunwald" date="03/19/2010">Allow user to specify an encoding when saving a text file.</Change>
  <Change author="Daniel Grunwald" date="03/19/2010">Fixed NullReferenceException in ParseInformationEventArgs.get_NewCompilationUnit.</Change>
  <Change author="Daniel Grunwald" date="03/19/2010">Allow user to specify an encoding when opening a text file.</Change>
  <Change author="Daniel Grunwald" date="03/19/2010">Use "cannot load file" dialog only for IOException and UnauthorizedAccessException; let other exceptions unhandled.</Change>
  <Change author="Daniel Grunwald" date="03/19/2010">Implemented support for 'dynamic' type in SharpDevelop.Dom.</Change>
  <Change author="Daniel Grunwald" date="03/17/2010">Fixed bug that could cause the text editor's ParseInformation to get out-of-sync with the parser service's.
Removed IParseInformationListener as it was unreliable (depended on view content), use ParserService.ParseInformationUpdated instead.</Change>
  <Change author="Daniel Grunwald" date="03/17/2010">Fixed indeterminate progress bar in search dialog.
InsertCtorDialog: select readonly fields by default.
SVN addin: remove "Checkout" and "Export" options as those aren't really useful and confusing to users (no other SVN commands are in Tools menu).</Change>
  <Change author="Daniel Grunwald" date="03/17/2010">Handle InvalidProjectFileException when loading MSBuild projects.</Change>
  <Change author="Daniel Grunwald" date="03/17/2010">UDC: include date and environment block on first upload</Change>
  <Change author="Daniel Grunwald" date="03/16/2010">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="03/15/2010">Fixed SdaUser sample. Remove old ICSharpCode.TextEditor samples.
Remove some unused ICSharpCode.TextEditor-related code.</Change>
  <Change author="Daniel Grunwald" date="03/15/2010">Fixed compilation errors in LineCounter, Mono and NAnt sample addins.</Change>
  <Change author="Christoph Wille" date="03/15/2010">Beta 1 designation for setup</Change>
  <Change author="Daniel Grunwald" date="03/15/2010">Updated some of the SharpDevelop samples.</Change>
  <Change author="Matt Ward" date="03/13/2010">Merge Python and Ruby addin to trunk.</Change>
  <Change author="Daniel Grunwald" date="03/10/2010">Fixed SD2-1608 - 'Bookmark All' is not implemented</Change>
  <Change author="Siegfried Pammer" date="03/08/2010">applied improvements suggested by Daniel:
- changed ClassType mappings
- use cast with CodeGenerator.ConvertMember in XamlCompletionItemList
- pass on targetContext recursively in ConvertClass</Change>
  <Change author="Daniel Grunwald" date="03/08/2010">Fixed HighlightingColorizer crash in combination with folding.</Change>
  <Change author="Daniel Grunwald" date="03/08/2010">C# parser: added support for method invocations with named arguments.</Change>
  <Change author="Daniel Grunwald" date="03/08/2010">AvalonEdit: Fixed repainting issues when document was modified above the visible region (e.g. using split view) and the highlighting stack changed.</Change>
  <Change author="Daniel Grunwald" date="03/07/2010">Highlighting editor: allow changing the default text color and selection color.</Change>
  <Change author="Daniel Grunwald" date="03/07/2010">Highlighting editor: allow editing colors of highlighting definitions defined in AddIns.</Change>
  <Change author="Daniel Grunwald" date="03/07/2010">Fixed race conditions in AddIn system when Runtime.Load is triggered from multiple threads at once.</Change>
  <Change author="Daniel Grunwald" date="03/07/2010">Fixed bug in syntax highlighting when keywords start with a special character (e.g. ".maxstack" in IL highlighting).</Change>
  <Change author="Daniel Grunwald" date="03/05/2010">Fixed unit tests (the previous commit fixed a minor bug in the C# syntax definition, and the unit test was expecting the incorrect output)</Change>
  <Change author="Daniel Grunwald" date="03/05/2010">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="03/04/2010">Editing highlighting colors is now supported for C#, VB, XML and .patch files.
Fixed FxCop issues in AvalonEdit.

Still missing in highlighting editor:
 - edit environment colors (normal text, line number margin, etc.)
 - support all syntax definitions shipping with SharpDevelop</Change>
  <Change author="Daniel Grunwald" date="03/04/2010">SD2-1592 (Add back highlighting editor for AvalonEdit):
 - implemented CustomizableHighlightingColorizer
 - add preview to highlighting editor</Change>
  <Change author="Daniel Grunwald" date="03/04/2010">UsageDataCollector: improved StackTrace upload:
 - always use English for "at", "in" and "line".
 - when no debug information available, upload IL offset
 - when debug information is available, upload filename only, not full file path</Change>
  <Change author="Daniel Grunwald" date="03/03/2010">Started work on SD2-1592 - Add back highlighting editor for AvalonEdit</Change>
  <Change author="Daniel Grunwald" date="02/28/2010">Detect C++ runtime when its installed only as part of .NET 3.5.</Change>
  <Change author="Daniel Grunwald" date="02/28/2010">Try using VC9 compiler for profiler hook (trying to get rid of VC10 runtime dependency).</Change>
  <Change author="Daniel Grunwald" date="02/28/2010">Require Visual C++ 2008 Runtime to be installed for running the SharpDevelop setup.</Change>
  <Change author="David Srbecký" date="02/28/2010">Fixed SD2-1646 - "Run to cursor" is broken</Change>
  <Change author="David Srbecký" date="02/28/2010">Fixed SD2-1651 - Crash in debugger when showing value of variable with value string.Empty</Change>
  <Change author="Siegfried Pammer" date="02/28/2010">updated string resources</Change>
  <Change author="Daniel Grunwald" date="02/28/2010">Move ISnippetElementProvider to ICSharpCode.SharpDevelop.Editor.AvalonEdit.</Change>
  <Change author="Siegfried Pammer" date="02/28/2010">override ToString shows now full member variable name in list</Change>
  <Change author="Daniel Grunwald" date="02/28/2010">Remove unused neato plugins. Add neato to setup.</Change>
  <Change author="Siegfried Pammer" date="02/28/2010">- implemented InsertCtorCommand as Snippet
- implemented OverrideEqualsGetHashCodeMethodsCommand and OverrideToStringMethodCommand as ICompletionItemHandlers</Change>
  <Change author="Siegfried Pammer" date="02/28/2010">added ISnippetElementProvider</Change>
  <Change author="Siegfried Pammer" date="02/28/2010">added ICompletionItemHandler</Change>
  <Change author="Daniel Grunwald" date="02/28/2010">Fixed NullReferenceException in Caret.BringCaretToView when TextEditor.Document==null.</Change>
  <Change author="Daniel Grunwald" date="02/27/2010">Update to AvalonDock 1.2.2702.</Change>
  <Change author="Daniel Grunwald" date="02/27/2010">Fixed StringResourceTool "Find missing resources".</Change>
  <Change author="Siegfried Pammer" date="02/26/2010">- added GridUnitSelector for columns
- fixed some bugs and exceptions</Change>
  <Change author="Daniel Grunwald" date="02/26/2010">Fixed bug introduced in last revision that caused test failure.</Change>
  <Change author="Daniel Grunwald" date="02/26/2010">Fixed SD2-1621 - WinForms designer: events are not created in source code</Change>
  <Change author="Daniel Grunwald" date="02/26/2010">Remove unused DesignItem.ValueOnInstance setter.</Change>
  <Change author="Daniel Grunwald" date="02/26/2010">Fixed NullReferenceException in ICSharpCode.SharpDevelop.LoadSolutionProjects.JobQueue.RunThread() when canceling LoadSolutionProjects thread.</Change>
  <Change author="Siegfried Pammer" date="02/26/2010">improved GridRailAdorner with GridUnitSelector (only for rows currently)</Change>
  <Change author="Daniel Grunwald" date="02/26/2010">Fixed small selection bug in snippet completion window (Ctrl+J).</Change>
  <Change author="Daniel Grunwald" date="02/26/2010">Fixed System.ArgumentOutOfRangeException in ICSharpCode.SharpDevelop.ErrorPainter.AddTask(Task task).</Change>
  <Change author="Daniel Grunwald" date="02/25/2010">Fixed issue in CodeEditorView: CustomTabCommand was modifying a KeyBinding shared by all AvalonEdit instances. The code now creates a new KeyBinding instead.
AvalonEdit: mark shared KeyBindings as frozen if possible (only possible on .NET 4).</Change>
  <Change author="Daniel Grunwald" date="02/25/2010">Use DispatcherTimer instead of animation for blinking caret. This reduces the frame rate WPF uses. The processor has to wake up less often -&gt; computer uses less power.</Change>
  <Change author="Daniel Grunwald" date="02/25/2010">Add "Switch Layout" stress test.</Change>
  <Change author="Daniel Grunwald" date="02/25/2010">Fixed ProjectBrowserPad selecting the currently opened file.</Change>
  <Change author="Daniel Grunwald" date="02/25/2010">Fixed updating of the IWorkbench.ActiveWorkbenchWindow property.
This fixes the bug "System.NullReferenceException in AvalonDock.DocumentContent.Close()"</Change>
  <Change author="Daniel Grunwald" date="02/22/2010">"Normalize" file headers.
Enable $Revision$ keyword expansion for all existing .cs files.</Change>
  <Change author="Daniel Grunwald" date="02/22/2010">Disable low-priority rendering after text input: it did not work correctly and caused WPF to render twice per character entered into AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="02/22/2010">Ported HtmlSyntaxColorizer to AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="02/22/2010">Add "StressTest" AddIn (running performance tests for interactive operations, e.g. editor speed)</Change>
  <Change author="Daniel Grunwald" date="02/22/2010">Work around strange .NET feature in command-line parsing.
Update SharpDevelopAddIn.xpt for SD 4 (add WPF references).</Change>
  <Change author="Matt Ward" date="02/20/2010">Removed missing IronRuby assemblies from installer.</Change>
  <Change author="Matt Ward" date="02/20/2010">Use IronRuby 1.0 RC2 assemblies for .NET 4.0 RC1.</Change>
  <Change author="Matt Ward" date="02/20/2010">Merge python addin to trunk and use IronPython 2.6.1 RC1 for .NET 4.0 RC1</Change>
  <Change author="Siegfried Pammer" date="02/19/2010">temporarily disabled IL rewriting in profiler (profiler fails with BadImageFormatException on some assemblies)</Change>
  <Change author="Christoph Wille" date="02/18/2010">UsageDataCollector skeleton project </Change>
  <Change author="Christoph Wille" date="02/17/2010">Add service contract, change proxy namespace to not collide with newly added service contract.</Change>
  <Change author="Christoph Wille" date="02/17/2010">Moved all DataContracts to Contracts namespace (UsageDataCollector)</Change>
  <Change author="Siegfried Pammer" date="02/16/2010">corrected offsets of inserted code in InsertCtorDialog.GenerateCode</Change>
  <Change author="Siegfried Pammer" date="02/16/2010">fixed scrolling bug in TextView.MakeVisible</Change>
  <Change author="Siegfried Pammer" date="02/15/2010">- Added translations for refactorings and updated string resources
- set StringResourceTool to 32bit compilation (needed for ODBC drivers on x64 systems)</Change>
  <Change author="Daniel Grunwald" date="02/14/2010">Added support for default parameters and variance annotations to C# parser.</Change>
  <Change author="Daniel Grunwald" date="02/13/2010">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="02/13/2010">Don't install the SharpDevelop start menu shortcut to a folder. Include the version number in the shortcut name (this helps when using the Vista start menu search and several SharpDevelop versions are installed).</Change>
  <Change author="Daniel Grunwald" date="02/12/2010">Improved F# interactive pad.
Add InitiallyFocusedControl to pads.</Change>
  <Change author="Daniel Grunwald" date="02/11/2010">Install debugger to correct directory.</Change>
  <Change author="Daniel Grunwald" date="02/11/2010">Fixed hard-binding attributes for ICSharpCode.SharpDevelop.</Change>
  <Change author="Daniel Grunwald" date="02/11/2010">Fixed references to F# binding in solution files.</Change>
  <Change author="Daniel Grunwald" date="02/11/2010">Ported F# binding to C#. (merge from 3.0 branch + added back adjustments for SD 4.0)
The F# binding written in F# was problematic because the F# runtime is not installed on all computers where SharpDevelop is running.</Change>
  <Change author="Daniel Grunwald" date="02/10/2010">Show progress of SD status bar also in Windows 7 taskbar.
Delay hiding the progress bar a bit in case of errors to give the user a visual clue that his build failed in the screen area he's looking at (the progress bar).</Change>
  <Change author="Daniel Grunwald" date="02/10/2010">Fixed unit tests.</Change>
  <Change author="Daniel Grunwald" date="02/10/2010">Test for .NET 4 RC in setup.</Change>
  <Change author="Christoph Wille" date="02/10/2010">Temporary build fix for &lt;PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' "&gt;. Set &lt;OtherFlags&gt; to value "--standalone". Only fixes build server, might cause runtime issues (deferred for fixing).</Change>
  <Change author="Siegfried Pammer" date="02/09/2010">fixed bug in XAML binding: x:ClassModifier was not visible in CC in root element, but x:FieldModifier was.</Change>
  <Change author="Siegfried Pammer" date="02/09/2010">XAML binding now uses correct modifiers for classes and fields (implemented x:ClassModifier and x:FieldModifier support)</Change>
  <Change author="Christoph Wille" date="02/09/2010">Update build scripts for .NET Framework 4.0 RC (v4.0.30128)</Change>
  <Change author="Daniel Grunwald" date="02/08/2010">Rewritten IProgressMonitor:
 - allow nested progress monitors
 - use .NET 4 cancellation framework</Change>
  <Change author="Daniel Grunwald" date="02/07/2010">Fixed forum-10719: AvalonEdit swallows Alt+Space</Change>
  <Change author="Daniel Grunwald" date="02/07/2010">Fixed some FxCop warnings in WPF designer.</Change>
  <Change author="Martin Koníček" date="02/07/2010">Object graph visualizer shows values again - modified AtomicType.IsAtomic to work again after the reimplementation of Debugger.Core.DebugType (DebugType being derived from System.Type).</Change>
  <Change author="Siegfried Pammer" date="02/07/2010">- implemented SelectCulturePanel as WPF OptionPanel
- added NumericUpDown to ICSharpCode.Core.Presentation</Change>
  <Change author="Daniel Grunwald" date="02/03/2010">Fixed build.</Change>
  <Change author="Siegfried Pammer" date="02/02/2010">- added CSharpBackgroundCompiler
- extended CodeGenerator
- fixed NullReferenceException in NRefactoryResolver
- various bugfixes in CodeGenerator and NRefactoryASTConvertVisitor</Change>
  <Change author="Matt Ward" date="01/31/2010">Merge python addin from 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="01/31/2010">Fix build error in CompletionWindowBase.cs. AvalonEdit targets .NET 3.5, but used a .NET 4.0 member.
For some reason, this worked fine on most machines (including the build server), these machines seemed to have an updated version of .NET 3.5 SP1 - either using Windows Update or installing VS2010 seems to add members to .NET 3 assmblies.</Change>
  <Change author="Daniel Grunwald" date="01/30/2010">Fix build.</Change>
  <Change author="Daniel Grunwald" date="01/30/2010">Fix compiler warning in F# binding.</Change>
  <Change author="Daniel Grunwald" date="01/30/2010">Fixed SD2-1632 - Fullscreen mode not implemented in WpfWorkbench</Change>
  <Change author="Daniel Grunwald" date="01/30/2010">Use priority 1 for NGEN call in setup.</Change>
  <Change author="Siegfried Pammer" date="01/30/2010">fixed InvalidOperationException related to wrong usage of Enumerable.SingleOrDefault&lt;T&gt;() in IsSimpleProperty</Change>
  <Change author="Daniel Grunwald" date="01/29/2010">Fixed SD2-1642: NotImplementedException when converting project from C# to VB</Change>
  <Change author="Siegfried Pammer" date="01/28/2010">- copy modifiers from get/set accessors, when expanding an automatic property.
- added ConvertToAutomaticProperty refactoring for properties with simple get/set accessors.</Change>
  <Change author="Daniel Grunwald" date="01/28/2010">Fixed SD2-1641 - Random crash in AvalonEdit when copying to the clipboard</Change>
  <Change author="Daniel Grunwald" date="01/28/2010">Add safety check to UndoStack to prevent corruption when the document is changed by UpdateStarted/UpdateFinished events within Undo() or Redo() calls.</Change>
  <Change author="Daniel Grunwald" date="01/28/2010">Remove &lt;Folder&gt; from AvalonEdit.csproj</Change>
  <Change author="Siegfried Pammer" date="01/28/2010">- replaced file headers with standard header
- fixed http://community.sharpdevelop.net/forums/t/10395.aspx</Change>
  <Change author="Daniel Grunwald" date="01/27/2010">Merge 3.0 to trunk.
I excluded Python from this merge (too many conflicts I don't know how to solve).
I also excluded SharpReport (will be ported to SD 4.0 later).</Change>
  <Change author="Siegfried Pammer" date="01/27/2010">- improved IntroduceMethod
- added ResolveAttribute</Change>
  <Change author="Siegfried Pammer" date="01/26/2010">- added SharpRefactoring.Tests
- improved IntroduceMethod
- added ResolveExtensionMethod</Change>
  <Change author="Daniel Grunwald" date="01/24/2010">Add F# binding to setup.</Change>
  <Change author="Daniel Grunwald" date="01/24/2010">Remove ruby unit tests from solution. Because RubyBinding and PythonBinding use different versions of Microsoft.Scripting.*, the unit tests break because we compile all of them into the same directory.</Change>
  <Change author="Daniel Grunwald" date="01/24/2010">Add F# binding back to SharpDevelop 4.0.</Change>
  <Change author="Daniel Grunwald" date="01/23/2010">Remove XamlDesigner2.</Change>
  <Change author="Daniel Grunwald" date="01/23/2010">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="01/23/2010">Ignore IOException when saving layout (maybe another process is writing to the layout file).</Change>
  <Change author="Daniel Grunwald" date="01/23/2010">Added whole line selection (triple click).</Change>
  <Change author="Daniel Grunwald" date="01/23/2010">Move strings from UsageDataCollector into translation database.</Change>
  <Change author="Daniel Grunwald" date="01/23/2010">Fixed ArgumentException in ICSharpCode.WpfDesign.XamlDom.XamlObject.FindOrCreateProperty when selecting Window in WPF Designer.</Change>
  <Change author="Daniel Grunwald" date="01/23/2010">UDC: add culture, processorArchitecture and number of custom AddIns to environment information</Change>
  <Change author="Daniel Grunwald" date="01/21/2010">UsageDataCollector: include the error code in exception reports for ExternalExceptions (COMException etc.)
Removed debugging statement that saved usage data into temporary file during upload.</Change>
  <Change author="Daniel Grunwald" date="01/21/2010">Fixed NullReferenceException in ICSharpCode.Svn.SvnGuiWrapper.GetPathFromRegistry(RegistryHive hive, String valueName) when TortoiseSVN is not installed (bug introduced in r5246).</Change>
  <Change author="Daniel Grunwald" date="01/20/2010">Use TextLine.GetTextBounds in BackgroundGeometryBuilder. Fixes visual problems with bidirectional text.</Change>
  <Change author="Daniel Grunwald" date="01/20/2010">Fixed ArgumentException when selecting right-to-left text in AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="01/19/2010">SD2-1607 - Add printing support to AvalonEdit</Change>
  <Change author="Daniel Grunwald" date="01/19/2010">Fixed SD2-1601 - Implement disabled text editor settings
- Show quick class browser panel</Change>
  <Change author="Daniel Grunwald" date="01/19/2010">SD2-1601 (Implement disabled text editor settings): enable "Folding" option.</Change>
  <Change author="Daniel Grunwald" date="01/19/2010">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="01/19/2010">SD2-1601 - Implement disabled text editor settings:
 - Use smart indentation
 - Underline errors
 - Highlight matching bracket</Change>
  <Change author="Daniel Grunwald" date="01/19/2010">Fixed SD2-1597 - Double click selection does not select entire word with error highlighting</Change>
  <Change author="Siegfried Pammer" date="01/17/2010">fixed NRefactoryResolver unit test</Change>
  <Change author="Siegfried Pammer" date="01/17/2010">added introduce method refactoring (not working in all cases yet)</Change>
  <Change author="Siegfried Pammer" date="01/13/2010">- reimplemented code generators in 4.0 (fixes SD2-1599)</Change>
  <Change author="Daniel Grunwald" date="01/13/2010">Converted VBNet-Mode.xshd to new file format.</Change>
  <Change author="Daniel Grunwald" date="01/13/2010">Fixed bug in XmlHighlightingDefinition that prevented referencing the main ruleset of the current XSHD.
Fixed typo in SaveXshdVisitor.</Change>
  <Change author="Daniel Grunwald" date="01/13/2010">Converted Boo.xshd to new XSHD file format.</Change>
  <Change author="Daniel Grunwald" date="01/13/2010">Improve XML highlighting.
Fixed bug in XSHD loader when XSHD &lt;Import&gt; refers to a ruleset defined later in the same file.</Change>
  <Change author="Daniel Grunwald" date="01/13/2010">Fix crash when pressing deadkey while CC window is open.</Change>
  <Change author="Daniel Grunwald" date="01/10/2010">Fixed bug in HighlightedLine.ToHtml that could cause text in front of the selection to be copied to the clipboard.</Change>
  <Change author="Daniel Grunwald" date="01/07/2010">Do not execute indentation strategy when pressing Enter inside a read-only section.</Change>
  <Change author="Daniel Grunwald" date="01/07/2010">Implemented SizeLimit for UndoStack.
This allows disabling the undo stack as requested in forum-10585.</Change>
  <Change author="Daniel Grunwald" date="01/07/2010">It's 2010.
Don't hard-code copyright years in StartPageControl, read them from GlobalAssemblyInfo instead.</Change>
  <Change author="Daniel Grunwald" date="01/07/2010">ItemsControl in startpage should not be focusable.</Change>
  <Change author="Daniel Grunwald" date="01/07/2010">Fixed highlighting of XML attributes containing '.'</Change>
  <Change author="Daniel Grunwald" date="01/07/2010">Fixed forum-10109: TextEditor.ShowLineNumbers=false removes all DottedLineMargins.
Fixed some typos in AvalonEdit documentation.
"Syntax Highlighting" help: added "ICSharpCode.TextEditor compatibility" and "Programmatically accessing highlighting information" sections.
Update Boo.xshd for Boo 0.9.3.</Change>
  <Change author="Christoph Wille" date="12/30/2009">Move Subversion post-commit hook to corresponding server directory</Change>
  <Change author="Matt Ward" date="12/29/2009">Replaced obsolete DialogPanel with OptionPanel in IronRuby addin file.</Change>
  <Change author="Siegfried Pammer" date="12/29/2009">fixed "Edit grid columns and rows"</Change>
  <Change author="Matt Ward" date="12/29/2009">Merge 3.1 to trunk.</Change>
  <Change author="Siegfried Pammer" date="12/28/2009">- fixed bug in AXmlParser
- added new Unit Test for AXmlParser</Change>
  <Change author="Matt Ward" date="12/20/2009">When a solution is loaded the files that were previously open for that solution are opened again.</Change>
  <Change author="Matt Ward" date="12/19/2009">Moved xpath code and goto schema definition code out of XmlView class.</Change>
  <Change author="Matt Ward" date="12/15/2009">Support for highlighting definitions defined in addin files now working again.</Change>
  <Change author="Daniel Grunwald" date="12/12/2009">Merge 3.1.1 to trunk.</Change>
  <Change author="Matt Ward" date="12/12/2009">Add IronPython.Modules reference to IronPython project templates.</Change>
  <Change author="Matt Ward" date="12/12/2009">Remove missing IronPython files from installer.</Change>
  <Change author="Daniel Grunwald" date="12/12/2009">Code editor: clear selection when Escape is pressed.</Change>
  <Change author="Matt Ward" date="12/12/2009">Now using IronPython 2.6 CTP for .NET 4.0 Beta 2</Change>
  <Change author="Matt Ward" date="12/12/2009">Merge IronPython addin changes to trunk.</Change>
  <Change author="David Srbecký" date="12/11/2009">Fixed casting bug</Change>
  <Change author="Matt Ward" date="12/09/2009">Added support for attributes defined in the simple content extension's base type.
Added support for attribute references that use a different schema namespace and need to have a prefix.</Change>
  <Change author="Matt Ward" date="12/09/2009">Remove whitespace from xml schema annotation displayed in completion tooltip.</Change>
  <Change author="David Srbecký" date="12/08/2009">Fixed conditional breakpoints for statements that do not return bool</Change>
  <Change author="David Srbecký" date="12/08/2009">"Index was outside the bounds of the array." for expressions like "abc"[-1]</Change>
  <Change author="David Srbecký" date="12/08/2009">"null" value survives Continue</Change>
  <Change author="Siegfried Pammer" date="12/08/2009">fixed small bug in CreatePropertyPathCompletion</Change>
  <Change author="Matt Ward" date="12/07/2009">XML editor now supports an xml schema defined in multiple documents (e.g. Sandcastle MAML schemas).</Change>
  <Change author="David Srbecký" date="12/07/2009">Fixed a bug that could cause the debugger to freeze.  (ie. all debugee threads suspended)</Change>
  <Change author="David Srbecký" date="12/07/2009">Fixed rude-abort of evals</Change>
  <Change author="David Srbecký" date="12/06/2009">Use other thread for evaluation if the current one is not suitable</Change>
  <Change author="David Srbecký" date="12/06/2009">Fixed "0x80131C33: Interception of the current exception is not legal"</Change>
  <Change author="David Srbecký" date="12/06/2009">Fixed "0x8013132E - This process has already been attached to"</Change>
  <Change author="Matt Ward" date="12/06/2009">Improved xml completion when a document uses multiple xml schemas.</Change>
  <Change author="David Srbecký" date="12/06/2009">Fixed "Func eval cannot work. Bad starting point. (Exception from HRESULT: 0x80131313)"</Change>
  <Change author="David Srbecký" date="12/05/2009">Hopefully fixed "Process not synchronized." at ICorDebugThread.GetUserState</Change>
  <Change author="David Srbecký" date="12/03/2009">Disable steppers before detach</Change>
  <Change author="David Srbecký" date="12/03/2009">General exception handler for CreateProcess</Change>
  <Change author="David Srbecký" date="12/03/2009">Workaround for exception during removing of breakpoint (can not reproduce though)</Change>
  <Change author="Matt Ward" date="12/02/2009">Added unit tests for XmlFormattingStrategy. 
Xml element end tag now indents to the same level as the opening tag when the return key is pressed.
Xml attributes now indent to the same level when the return key is pressed.</Change>
  <Change author="Daniel Grunwald" date="12/01/2009">Converted XML-Mode.xshd to new file format. Fixes forum-10434 (bad XML highlighting in AvalonEdit).</Change>
  <Change author="Matt Ward" date="11/30/2009">XML editor uses folds from previous parse if current xml being parsed is not well formed.</Change>
  <Change author="Matt Ward" date="11/29/2009">Folding now working again in the XML editor.</Change>
  <Change author="Matt Ward" date="11/29/2009">Installer now checks that the full .NET 4 beta 2 framework is installed.</Change>
  <Change author="Matt Ward" date="11/29/2009">Fixed SD2-1432 - Saving a file in the WiX files editor does not update the subversion overlay icon.</Change>
  <Change author="Matt Ward" date="11/29/2009">Now using one based line and column numbers in Wix addin to match the text editor.</Change>
  <Change author="Matt Ward" date="11/29/2009">When switching to the text editor window after designing a Wix dialog or adding new files in the Setup Files window the updated text is now selected in the text editor.</Change>
  <Change author="Matt Ward" date="11/28/2009">Fixed failing python addin unit tests.</Change>
  <Change author="Matt Ward" date="11/28/2009">Wix addin now uses the new text editor interfaces. Restructured various Wix addin classes and added missing unit tests.</Change>
  <Change author="Daniel Grunwald" date="11/20/2009">IncrementalSearch: scroll to search result</Change>
  <Change author="Daniel Grunwald" date="11/20/2009">UsageDataCollector: add link to privacy statement</Change>
  <Change author="Siegfried Pammer" date="11/19/2009">- Removed OverrideEqualsGetHashCodeMethodsCommand and OverrideEqualsGetHashCodeMethodsCommand from Refactor menu
- fixed ClassCodeGeneratorMenuBuilder
- allow OptionBinding to be used from Code</Change>
  <Change author="Daniel Grunwald" date="11/19/2009">Fixed cut/copy/paste commands in WinForms Designer context menu.</Change>
  <Change author="Daniel Grunwald" date="11/19/2009">Implemented incremental search for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="11/19/2009">Adjust StringResourceToolAddIn: read .resx file</Change>
  <Change author="Daniel Grunwald" date="11/19/2009">Added debug-only shortcut for switching rendering mode.</Change>
  <Change author="Daniel Grunwald" date="11/18/2009">Use TextFormattingMode.Display for tooltips and context menus.</Change>
  <Change author="Daniel Grunwald" date="11/18/2009">Use TextFormattingMode.Display for dialog and code completion windows.</Change>
  <Change author="David Srbecký" date="11/18/2009">Fixed "Cannot use JMC on this code (likely wrong JIT settings)."</Change>
  <Change author="Daniel Grunwald" date="11/18/2009">AvalonEdit: When VisualColumn validation has to change the caret position, prefer to move the caret into the direction that does not cause a caret offset change.
This fixes issues with text selection when tabs are visible and the user clicks between the tab marker and the whitespace of the tab.</Change>
  <Change author="Daniel Grunwald" date="11/18/2009">Support for TextFormattingMode.Display in line number margin and other AvalonEdit components using the FormattedText class.</Change>
  <Change author="Daniel Grunwald" date="11/18/2009">Add entry in tools menu for "Project Upgrade" view.</Change>
  <Change author="Daniel Grunwald" date="11/18/2009">Don't crash when InlineUIElementGenerator's anchor is deleted.
Fix focus when inline UIElement is removed from TextView.</Change>
  <Change author="Daniel Grunwald" date="11/18/2009">Moved support for TextFormattingMode.Display into AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="11/18/2009">Use TextFormattingMode=Display in whole SharpDevelop.
Add support for TextFormattingMode to AvalonEdit.AddIn.</Change>
  <Change author="Matt Ward" date="11/15/2009">Refactored various XML Editor classes used for xml completion for a better fit with the new text editor completion classes.</Change>
  <Change author="David Srbecký" date="11/14/2009">Fixed SD2-1467 - "Can't load file 17d14f5c-a337-4978-8281-53493378c1071.vb under ."</Change>
  <Change author="David Srbecký" date="11/14/2009">Updating some interop APIs</Change>
  <Change author="Siegfried Pammer" date="11/13/2009">- added InlineUIElementGenerator and AvalonEditEditorUIService
- finished OverrideToStringMethodCommand and OverrideToStringMethodDialog</Change>
  <Change author="Daniel Grunwald" date="11/13/2009">Clear selection and caret position when TextArea.Document is changed.</Change>
  <Change author="David Srbecký" date="11/13/2009">Minor update to last revision</Change>
  <Change author="David Srbecký" date="11/12/2009">Hopefully fixed the bug with invalid "__exception"</Change>
  <Change author="Daniel Grunwald" date="11/12/2009">AvalonEdit TextEditor/TextArea: when changing the document/options, set document/options on the inner TextArea/TextView before the DocumentChanged/OptionChanged event is raised.</Change>
  <Change author="Daniel Grunwald" date="11/12/2009">Fixed PixelSnapHelpers - don't crash when measuring a visual without PresentationSource.</Change>
  <Change author="Daniel Grunwald" date="11/12/2009">Use a single ParameterListComparer for both hashtables in MemberLookupHelper.LookupMember.</Change>
  <Change author="David Srbecký" date="11/12/2009">Show only variables in scope</Change>
  <Change author="Matt Ward" date="11/10/2009">Added unit tests for the XmlCodeCompletionBinding class.</Change>
  <Change author="Daniel Grunwald" date="11/09/2009">Remove unused code.
Replace ExtendedRegistry with .NET Registry functions.
Replace SD.Set&lt;T&gt; with .NET SortedSet&lt;T&gt;.</Change>
  <Change author="Daniel Grunwald" date="11/09/2009">Code cleanup.</Change>
  <Change author="Daniel Grunwald" date="11/09/2009">Port HtmlHelp2 to ITextEditor.</Change>
  <Change author="Daniel Grunwald" date="11/09/2009">Port PInvokeAddIn to ITextEditor.</Change>
  <Change author="Daniel Grunwald" date="11/08/2009">Fixed build.</Change>
  <Change author="Siegfried Pammer" date="11/08/2009">- added EntityType to IEntity
- refactored ParameterListComparer
- added SignatureComparer
- added IEditorUIService and IInlineUIElement
- updated some snippets
- added basic implementation of OverrideToStringMethod refactoring
- added ClassCodeGeneratorMenuBuilder</Change>
  <Change author="Daniel Grunwald" date="11/08/2009">Fixed bug that caused WinFormsMessageService.DialogOwner to be initialized to null instead of the actual main window.</Change>
  <Change author="Daniel Grunwald" date="11/08/2009">Fixed SD2-1602: Order of nodes in AddIn tree path is not preserved.
Fixed ArgumentNullException in TaskListPad / ParserService.</Change>
  <Change author="Siegfried Pammer" date="11/08/2009">move call to GetUriFromMatch before creation of new VisualLineLinkText</Change>
  <Change author="Siegfried Pammer" date="11/08/2009">Fixed SD2-1598 - Unhandled UriFormatException when editing url string:
match.Value is checked with Uri.IsWellFormedUriString. GetUriFromMatch returns null if url string is invalid and no LinkElement is constructed.</Change>
  <Change author="Daniel Grunwald" date="11/07/2009">Remove unused code (integration of ICSharpCode.TextEditor into SharpDevelop)</Change>
  <Change author="Daniel Grunwald" date="11/07/2009">Fixed SD2-1612 - Commands in Edit &gt; Folding have no effect</Change>
  <Change author="Daniel Grunwald" date="11/07/2009">Improved AvalonEdit pixel snapping.</Change>
  <Change author="Siegfried Pammer" date="11/07/2009">Fixed null reference if no project is opened while editing a breakpoint.</Change>
  <Change author="Siegfried Pammer" date="11/07/2009">fixed SD2-1619 - Checkmark in Breakpoint context menu missing</Change>
  <Change author="Daniel Grunwald" date="11/07/2009">Removed another part of old SharpServerTools.</Change>
  <Change author="Daniel Grunwald" date="11/07/2009">Remove old SharpServerTools (got replaced by ICSharpCode.Data)</Change>
  <Change author="Daniel Grunwald" date="11/07/2009">Remove unused old version of ShortcutsManagement addin from trunk (the current version is on the shortcuts branch).</Change>
  <Change author="Siegfried Pammer" date="11/07/2009">fixed SD2-1618 - "Task List" does not show any TODO tasks</Change>
  <Change author="Daniel Grunwald" date="11/07/2009">Align caret on whole pixels.</Change>
  <Change author="Siegfried Pammer" date="11/07/2009">cleaned up profiler code</Change>
  <Change author="Siegfried Pammer" date="11/06/2009">fixed query history</Change>
  <Change author="Siegfried Pammer" date="11/06/2009">fixed IL rewriting of System.Console.Write (special case?)</Change>
  <Change author="Matt Ward" date="11/06/2009">Added extra unit tests for the Xml Editor's QualifedName classes.</Change>
  <Change author="Daniel Grunwald" date="11/05/2009">Avoid stack overflow in custom command routing (r5213), e.g. when scrolling in the quick class browser dropdown.</Change>
  <Change author="Daniel Grunwald" date="11/05/2009">Fixed pixel snapping of lines in folding margin.</Change>
  <Change author="Daniel Grunwald" date="11/05/2009">Reverted AvalonDock change that caused bad performance and flickering in WinForms controls.</Change>
  <Change author="Matt Ward" date="11/05/2009">Removed unused object allocations in XML editor.</Change>
  <Change author="Matt Ward" date="11/05/2009">Added more unit tests for the XML Editor and restricted the use of statics.</Change>
  <Change author="Siegfried Pammer" date="11/04/2009">- finished implementation of Ctrl+J snippets.
- added props snippet
- enhanced existing snippets</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Implemented custom command routing: if a WPF routed command is not handled by the current focus, re-route it to the logical focus of the active workbench window.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Add version info to layout files to avoid exception when AvalonDock version has changed.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Update to AvalonDock 1.2.2691.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Remember focus and restore it when a workbench window or pad gets activated.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Draw vertical line in fold margin on whole pixels.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Move bracket highlighting from CodeEditor to CodeEditorView.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Implemented CodeEditor.ActiveTextEditor.</Change>
  <Change author="Daniel Grunwald" date="11/04/2009">Remove PixelSnapper; use WPF layout rounding instead.</Change>
  <Change author="Siegfried Pammer" date="11/03/2009">- implemented Ctrl+J for new snippets
- removed code duplication in Profiler.cpp</Change>
  <Change author="Siegfried Pammer" date="10/31/2009">Added event and time markers to extended timeline</Change>
  <Change author="Siegfried Pammer" date="10/31/2009">fixed some of the warnings in Hook</Change>
  <Change author="Siegfried Pammer" date="10/31/2009">- Added missing XML Doc.
- Cleaned up file structure.</Change>
  <Change author="Siegfried Pammer" date="10/31/2009">- Fixed time line
- implemented ActivateProfiler/DeactivateProfiler</Change>
  <Change author="Siegfried Pammer" date="10/30/2009">added pmCharSetUnicode to the P/Invoke map parameters (fixes invalid string data in LogEvent calls)</Change>
  <Change author="Siegfried Pammer" date="10/30/2009">some work on the TimeLineControl (partly broken)</Change>
  <Change author="Siegfried Pammer" date="10/30/2009">added basic support for event data collected by Hook.</Change>
  <Change author="Siegfried Pammer" date="10/30/2009">started implementation of IL rewriting for event tracking</Change>
  <Change author="Siegfried Pammer" date="10/30/2009">- added new Profiler.sln
- updated SharpDevelop.sln
- added list of useful profiler links</Change>
  <Change author="Siegfried Pammer" date="10/30/2009">fixed BenchmarkRunner</Change>
  <Change author="Siegfried Pammer" date="10/30/2009">fixed Benchmark</Change>
  <Change author="Siegfried Pammer" date="10/29/2009">Added "comment region" for C++.</Change>
  <Change author="David Srbecký" date="10/29/2009">Request v4 debugger interface only for v4 applications</Change>
  <Change author="Daniel Grunwald" date="10/27/2009">Replace FileUtility.Combine with Path.Combine.</Change>
  <Change author="Daniel Grunwald" date="10/27/2009">Add reference to System.Xaml when upgrading WPF projects.</Change>
  <Change author="David Srbecký" date="10/25/2009">Fixed ResourceDictionary merging in DebuggerTooltipControl.xaml</Change>
  <Change author="David Srbecký" date="10/25/2009">Fixed setup</Change>
  <Change author="David Srbecký" date="10/25/2009">Cleaning up empty directory after git</Change>
  <Change author="David Srbecký" date="10/25/2009">Moved the debugger directory one level up</Change>
  <Change author="David Srbecký" date="10/25/2009">Bumped debugger version to 4</Change>
  <Change author="David Srbecký" date="10/25/2009">Cleaning up empty directories after git</Change>
  <Change author="David Srbecký" date="10/24/2009">Heuristic to show integers as hexadecimal</Change>
  <Change author="David Srbecký" date="10/24/2009">Use static typing of expression to get rid of some casts</Change>
  <Change author="David Srbecký" date="10/24/2009">Fixed tooltips for primitive values and arrays.  Show "(empty)" placeholder for empty enumerations.</Change>
  <Change author="David Srbecký" date="10/24/2009">Apply thread-suspend rules for threads created during the stepping</Change>
  <Change author="David Srbecký" date="10/24/2009">Suspend other threads during stepping</Change>
  <Change author="David Srbecký" date="10/24/2009">Show elements directly in List&lt;T&gt; tooltip</Change>
  <Change author="David Srbecký" date="10/24/2009">Minor tweaks</Change>
  <Change author="David Srbecký" date="10/24/2009">Unary operators rewritten to match C# semantics.  Added unit tests.</Change>
  <Change author="David Srbecký" date="10/24/2009">Removed the Debugger.Internal namespace</Change>
  <Change author="David Srbecký" date="10/24/2009">Unit tests for binary operations</Change>
  <Change author="David Srbecký" date="10/24/2009">Binary operators rewritten to match C# semantics</Change>
  <Change author="David Srbecký" date="10/24/2009">Guarantee type identity if names are equal</Change>
  <Change author="David Srbecký" date="10/24/2009">String is not primitive type.</Change>
  <Change author="David Srbecký" date="10/24/2009">Rewritten IL parsing code for detection of backing fields.  Static backing fields are now supported as well.</Change>
  <Change author="David Srbecký" date="10/24/2009">Arrays support IList&lt;T&gt; and other interfaces. Added support for object creation.</Change>
  <Change author="David Srbecký" date="10/24/2009">Array creation tests. Array non-zero lowerbound test. Pointer dereference test.</Change>
  <Change author="David Srbecký" date="10/24/2009">Support for array creation</Change>
  <Change author="David Srbecký" date="10/24/2009">Do not use the Project and Src directories in debugger</Change>
  <Change author="David Srbecký" date="10/24/2009">Removed Debugger.BooInterpreter (it is superseded by the console)</Change>
  <Change author="David Srbecký" date="10/24/2009">Removed experimental remoting code</Change>
  <Change author="David Srbecký" date="10/24/2009">Removed unused Cecil files from the debugger</Change>
  <Change author="David Srbecký" date="10/24/2009">Support for casting of primitive values.
Get static members in outter classes.</Change>
  <Change author="David Srbecký" date="10/24/2009">Making ExpressionEvaluator statically typed</Change>
  <Change author="David Srbecký" date="10/24/2009">Performance improvement for the type resolution</Change>
  <Change author="David Srbecký" date="10/24/2009">Bugfixes in type resolution.  Written unit tests for it.</Change>
  <Change author="David Srbecký" date="10/24/2009">Resolve TypeReference to DebugType and vice versa.  Genetic types, nested types, arrays and pointers are supported.</Change>
  <Change author="David Srbecký" date="10/24/2009">Do not include expression code in error messages.</Change>
  <Change author="David Srbecký" date="10/24/2009">Implicit argument conversion.
Improved overloading error messages.</Change>
  <Change author="David Srbecký" date="10/24/2009">Support for simple overloading (only applicability is considered)</Change>
  <Change author="David Srbecký" date="10/24/2009">Load properties properly rather then using the "get_" "set_" heuristics</Change>
  <Change author="David Srbecký" date="10/24/2009">Implemented support for literal fields.</Change>
  <Change author="David Srbecký" date="10/24/2009">Fixed some corner cases in string getting methods</Change>
  <Change author="David Srbecký" date="10/24/2009">Improving the metadata interop class</Change>
  <Change author="David Srbecký" date="10/24/2009">Finished DebugType.IsAssignableFrom</Change>
  <Change author="David Srbecký" date="10/24/2009">Replaced some uses of Marshal class with fixed()</Change>
  <Change author="David Srbecký" date="10/24/2009">Removed the Is&lt;T&gt;, As&lt;T&gt; and CastTo&lt;T&gt; helper methods</Change>
  <Change author="David Srbecký" date="10/24/2009">Renamed the TestPrograms directory to just Tests</Change>
  <Change author="David Srbecký" date="10/24/2009">Renamed some tests.  Removed the TestPrograms namespace.</Change>
  <Change author="David Srbecký" date="10/24/2009">Updating Debugger.Addin.
Use Stopwatch instead of the HighPrecisionTimer.  (probably the same code under the covers)</Change>
  <Change author="David Srbecký" date="10/24/2009">Reimplemented COM object tracking.  Fixed remaining compile errors.</Change>
  <Change author="David Srbecký" date="10/24/2009">COM methods prefixed with "__" so that the user does not call them directly.  Extension methods should be used instead.</Change>
  <Change author="David Srbecký" date="10/24/2009">Removed the old wrapper generator</Change>
  <Change author="David Srbecký" date="10/24/2009">Using methods instead of properties</Change>
  <Change author="David Srbecký" date="10/24/2009">Moved the rest to the Debugger.Interop namespace.  Renamed using statements.</Change>
  <Change author="David Srbecký" date="10/24/2009">Merged CorPushish files into one.  Generated extension methods for them.</Change>
  <Change author="David Srbecký" date="10/24/2009">Merged hand-written extension methods to single file</Change>
  <Change author="David Srbecký" date="10/24/2009">".generated" suffix for the generated extension methods</Change>
  <Change author="David Srbecký" date="10/24/2009">Removed autogenerated wrapper classes</Change>
  <Change author="David Srbecký" date="10/24/2009">Hand-written helper methods converted to extension methods</Change>
  <Change author="David Srbecký" date="10/24/2009">Extension method generator for COM types.  It converts out parameters to return values and allows tracking of created objects.</Change>
  <Change author="David Srbecký" date="10/24/2009">Minor reformatting of CorDebug.cs</Change>
  <Change author="David Srbecký" date="10/24/2009">Merged interop files together</Change>
  <Change author="David Srbecký" date="10/24/2009">Remove unused import statements</Change>
  <Change author="David Srbecký" date="10/24/2009">Renaming Metadata to MetaData (part 2)</Change>
  <Change author="David Srbecký" date="10/24/2009">Renaming Metadata to MetaData (part 1)</Change>
  <Change author="David Srbecký" date="10/24/2009">Matching directory names and namespaces</Change>
  <Change author="David Srbecký" date="10/24/2009">Moving some files around</Change>
  <Change author="David Srbecký" date="10/24/2009">Support for member fields from yield/delegate</Change>
  <Change author="David Srbecký" date="10/24/2009">Basic support for static expressions.
Removed some extra parenthesis.</Change>
  <Change author="David Srbecký" date="10/24/2009">Updating Debugger.Addin to the new metadata API  (the whole solution compiles again)</Change>
  <Change author="David Srbecký" date="10/24/2009">Some method arguments for Value relaxed so that less casting is necessary</Change>
  <Change author="David Srbecký" date="10/24/2009">Actually make use of the member name hashtable</Change>
  <Change author="David Srbecký" date="10/24/2009">Improved type resolution by name</Change>
  <Change author="David Srbecký" date="10/24/2009">Fixed generic name for enclosing types</Change>
  <Change author="David Srbecký" date="10/24/2009">Merged partial classes</Change>
  <Change author="David Srbecký" date="10/24/2009">Added &lt;inheritdoc/&gt; to metadata members</Change>
  <Change author="David Srbecký" date="10/24/2009">Some ToStrings are more verbose.  Removed some Ignore attributes.</Change>
  <Change author="David Srbecký" date="10/24/2009">Merged and simplified Value tests;
Simplified DebugType test</Change>
  <Change author="David Srbecký" date="10/24/2009">Expressions test merged into ExpressionEvaluator test;
Fixed base class of String</Change>
  <Change author="David Srbecký" date="10/24/2009">Updated unit tests to the new metadata API</Change>
  <Change author="David Srbecký" date="10/24/2009">Improved XML printer in debugger unit tests - "Get" methods are invoked, there is an explicit ignore list.</Change>
  <Change author="David Srbecký" date="10/24/2009">Changing Value class to work with the new metadata API.
Some bugfixes.</Change>
  <Change author="David Srbecký" date="10/24/2009">Finishing the behavior of DebugType</Change>
  <Change author="David Srbecký" date="10/24/2009">Polishing API and implemented more reflection methods</Change>
  <Change author="David Srbecký" date="10/24/2009">Fixed remaining compile errors in Debugger.Core</Change>
  <Change author="David Srbecký" date="10/24/2009">Fixing some syntax errors (still work in progress)</Change>
  <Change author="David Srbecký" date="10/24/2009">Store type members in hashtable with name as key</Change>
  <Change author="David Srbecký" date="10/24/2009">Renamed files to match class names</Change>
  <Change author="David Srbecký" date="10/24/2009">Using BindingFlags from System.Reflection</Change>
  <Change author="David Srbecký" date="10/24/2009">DebugType derives from System.Type</Change>
  <Change author="David Srbecký" date="10/24/2009">DebugMethodInfo derives from System.Reflection.MethodInfo</Change>
  <Change author="David Srbecký" date="10/24/2009">PropertyInfo derives from System.Reflection.PropertyInfo</Change>
  <Change author="David Srbecký" date="10/24/2009">FieldInfo derives from System.Reflection.FieldInfo</Change>
  <Change author="David Srbecký" date="10/24/2009">Skeletons for implementing System.Type</Change>
  <Change author="David Srbecký" date="10/24/2009">Support for local variables captured by yield</Change>
  <Change author="David Srbecký" date="10/24/2009">Decoupled support for expressions from the debugger core</Change>
  <Change author="Daniel Grunwald" date="10/21/2009">Enable legacy runtime activation policy for SharpDevelop.exe to allow loading mixed-mode assemblies.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Disable profiler unit tests.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Ignore all WeakReferenceTests, apparently some change in the .NET 4 GC makes this kind of test unreliable.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Ignore failing AvalonEdit test.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Fixed XamlBinding unit tests (XAML CC now requires a System.Xaml reference).</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Disable debugger unit tests.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Added missing System.Xaml references to unit tests.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Removed unused code in XamlColorizer that failed to compile with .NET 4.0 Beta 2.
Added another missing System.Xaml reference.

SharpDevelop.sln now compiles successfully with .NET 4.0 Beta 2.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Remove experimental workflow designer (it doesn't compile in .NET 4.0 Beta 2)</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Adjusted LINQ-to-Profiler implementation to API changes in .NET 4.0 Beta 2.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Add references to System.Xaml.dll (necessary because some types were moved from WindowsBase to System.Xaml; see http://blogs.windowsclient.net/rob_relyea/archive/2009/10/19/xaml-news-net4-and-vs2010-beta2.aspx).</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Adjust .bat files for .NET 4.0 Beta 2.</Change>
  <Change author="Daniel Grunwald" date="10/20/2009">Merge 3.0 to trunk.</Change>
  <Change author="Matt Ward" date="10/18/2009">Fixed unhandled InvalidCastException when using the keyboard with a Form being displayed in the designer.</Change>
  <Change author="Matt Ward" date="10/18/2009">Now using XmlSchemaSet.Compile() to compile schemas instead of XmlSchema.Compile() which is obsolete.</Change>
  <Change author="Matt Ward" date="10/18/2009">Fixed null reference when validating an .xsd file with no root xs:schema element.</Change>
  <Change author="Matt Ward" date="10/18/2009">Recognised XML file extensions now read from XmlEditor.addin file.</Change>
  <Change author="Daniel Grunwald" date="10/16/2009">Implemented option panels for text editor.
Replaced ContentControl with ContentPresenter where possible.</Change>
  <Change author="Daniel Grunwald" date="10/16/2009">Fixed forum-10197: InvalidOperationException in Code Completion ("Cannot set Visibility or call Show, ShowDialog, or WindowInteropHelper.EnsureHandle after a Window has closed.").
Fixed expanding interactive snippets within a code completion dropdown.</Change>
  <Change author="Daniel Grunwald" date="10/16/2009">Started work on new text editor options.</Change>
  <Change author="Daniel Grunwald" date="10/15/2009">Fixed layout of SnippetOptionPanel.
Removed unused EditTemplateDialog.</Change>
  <Change author="Daniel Grunwald" date="10/15/2009">Show context menu when right-clicking on IconBarMargin.</Change>
  <Change author="Daniel Grunwald" date="10/14/2009">Fixed build.
Expand snippets only when Tab is pressed.</Change>
  <Change author="Daniel Grunwald" date="10/14/2009">Added snippet support to SharpDevelop (replaces 'code templates').</Change>
  <Change author="Daniel Grunwald" date="10/13/2009">Fixed bug when opening projects without solution file.</Change>
  <Change author="Daniel Grunwald" date="10/13/2009">Fixed change grouping when the document is changed inside event handlers for TextDocument.TextChanged.</Change>
  <Change author="Daniel Grunwald" date="10/13/2009">Fixed bug in TextView.BackgroundRenderer_Added that could cause a VisualLinesInvalidException during rendering.</Change>
  <Change author="Daniel Grunwald" date="10/13/2009">Code snippets: implemented input handling and background renderer.
Added support for "stacked" input handlers.</Change>
  <Change author="Daniel Grunwald" date="10/12/2009">Add infrastructure for code snippets.</Change>
  <Change author="Daniel Grunwald" date="10/12/2009">Move CSharpIndentationStrategy into AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="10/09/2009">Allow setting the TextEditor.SyntaxHighlighting property from XAML. Thanks to Rudi Grobler for the idea (http://dotnet.org.za/rudi/archive/2009/10/09/the-magic-of-type-converters.aspx).
Changed URL for Usage Data Collector upload.</Change>
  <Change author="Daniel Grunwald" date="10/05/2009">Copied information from the Code Project article into the AvalonEdit help file.</Change>
  <Change author="Daniel Grunwald" date="10/04/2009">Fixed split view crash when folding is enabled.
Added GridSplitter to split view.</Change>
  <Change author="Daniel Grunwald" date="10/04/2009">Update to AvalonDock 1.2.2666.
Fixed old codeEntityReferences in AvalonEdit documentation.</Change>
  <Change author="Daniel Grunwald" date="10/03/2009">Added dependency graph.</Change>
  <Change author="Siegfried Pammer" date="10/03/2009">- implemented PerformanceCounterDescriptor
- added ExtendedTimeLineControl
- updated SDPS to 1.2</Change>
  <Change author="Daniel Grunwald" date="10/03/2009">Add chapter on code completion.</Change>
  <Change author="Daniel Grunwald" date="10/03/2009">Wrote chapter on syntax highlighting.</Change>
  <Change author="Daniel Grunwald" date="10/03/2009">Ignore failing profiler unit test.</Change>
  <Change author="Daniel Grunwald" date="10/03/2009">Split up AvalonEdit into Overview, Document, Rendering.</Change>
  <Change author="Daniel Grunwald" date="10/03/2009">DocumentUtilitites.GetWordAt: fixed ArgumentOutOfRangeException.
Minor improvements to profiler.</Change>
  <Change author="Daniel Grunwald" date="10/02/2009">Worked on the AvalonEdit article and sample application.</Change>
  <Change author="Daniel Grunwald" date="10/02/2009">Extended AvalonEdit.Sample + article.
Fixed FxCop issues in AvalonEdit.</Change>
  <Change author="Siegfried Pammer" date="10/01/2009">Profiler:
- updated ProfilingDataSQLiteWriter to create SDPS 1.1
- extracted unit test specific writer code to UnitTestWriter
- added cpuCyclesSpentSelf in database</Change>
  <Change author="Daniel Grunwald" date="10/01/2009">Fixed bug that caused path to code analysis targets to be escaped twice.</Change>
  <Change author="Daniel Grunwald" date="10/01/2009">New database schema for profiler. The Top20 now executes in less than a second.</Change>
  <Change author="Daniel Grunwald" date="10/01/2009">Optimize AllCalls.MergeByName() -&gt; AllFunctions.
Delay load ID-list in functions view.
The "Top 20" view now opens more than twice as fast.</Change>
  <Change author="Daniel Grunwald" date="10/01/2009">LINQ-to-Profiler: fixed crash when there is a ThenBy in the query.
CodeCoverage: set COMPLUS_ProfAPI_ProfilerCompatibilitySetting to run PartCover on .NET 4.</Change>
  <Change author="Siegfried Pammer" date="09/30/2009">- implemented ORDER BY DESC
- updated documentation
- implemented StartsWith for all valid strings</Change>
  <Change author="Daniel Grunwald" date="09/30/2009">Fixed debug output on query execution.</Change>
  <Change author="Daniel Grunwald" date="09/30/2009">Added support for query options.</Change>
  <Change author="Siegfried Pammer" date="09/30/2009">implemented Take and OrderBy</Change>
  <Change author="Daniel Grunwald" date="09/30/2009">Use PermanentAnchor for Tasks.</Change>
  <Change author="Daniel Grunwald" date="09/30/2009">Use FileName class for ITextEditor.FileName and OpenedFile.FileName.</Change>
  <Change author="Daniel Grunwald" date="09/30/2009">Implemented PermanentAnchor (TextAnchor inside SharpDevelop that works even when a file is closed)</Change>
  <Change author="Daniel Grunwald" date="09/29/2009">Fixed bugs in OptimizeQueryExpressionVisitor.
Fixed FxCop issues in the new Profiler code.</Change>
  <Change author="Daniel Grunwald" date="09/29/2009">Fixed bug in MSBuildEngine that caused "Check with FxCop" to fail in some circumstances.</Change>
  <Change author="Daniel Grunwald" date="09/29/2009">Add unit test for profiler.</Change>
  <Change author="Siegfried Pammer" date="09/29/2009">LINQ-To-Profiler
- implemented correct handling of string constants
- GLOB and LIKE operators</Change>
  <Change author="Siegfried Pammer" date="09/28/2009">- implemented NOT operator in SQLiteQueryProvider</Change>
  <Change author="Daniel Grunwald" date="09/28/2009">Add unit test project for the profiler.</Change>
  <Change author="Daniel Grunwald" date="09/28/2009">Fixed build.
Deactivated CpuCyclesSpentSelf to reduce the number of queries.</Change>
  <Change author="Daniel Grunwald" date="09/28/2009">LINQ-to-Profiler: implemented query execution.</Change>
  <Change author="Daniel Grunwald" date="09/28/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="09/28/2009">LINQ-to-Profiler documentation</Change>
  <Change author="Daniel Grunwald" date="09/28/2009">Updated StringResources.
Code cleanup: replace "if (x ?? false)" with "if (x == true)"</Change>
  <Change author="Daniel Grunwald" date="09/28/2009">Initial LINQ-to-Profiler implementation.</Change>
  <Change author="Daniel Grunwald" date="09/28/2009">Add IQToolkit v0.16</Change>
  <Change author="Daniel Grunwald" date="09/27/2009">Work around .NET bug that prevents profiler views from opening.
Fixed ParserService trying to load file content even for files without an available parser.</Change>
  <Change author="Siegfried Pammer" date="09/26/2009">- Fixed bugs in XAML code completion
- Added Unit Tests</Change>
  <Change author="Daniel Grunwald" date="09/26/2009">Profiler: Upload original assembler callback hooks; fixed some outdated comments.</Change>
  <Change author="Daniel Grunwald" date="09/26/2009">Don't show output pad when building.</Change>
  <Change author="Siegfried Pammer" date="09/25/2009">trying to fix the build</Change>
  <Change author="Siegfried Pammer" date="09/25/2009">replaced System.Data.SQLite.dll used by Profiler.Controller by the one in Libraries/SQLite</Change>
  <Change author="Siegfried Pammer" date="09/25/2009">- added automatic x64 build of Hook
- added Profiler back to setup</Change>
  <Change author="Siegfried Pammer" date="09/25/2009">- updated all profiler projects to .NET 4 (fixes random build errors)
- correction of Hook.vcxproj build configurations</Change>
  <Change author="Daniel Grunwald" date="09/25/2009">Fixed ArgumentOutOfRangeException in SearchResultNode.ActivateItem.</Change>
  <Change author="Daniel Grunwald" date="09/25/2009">Implemented UpgradeView.</Change>
  <Change author="Daniel Grunwald" date="09/24/2009">Update to AvalonDock 1.2.2648</Change>
  <Change author="Daniel Grunwald" date="09/23/2009">Include Profiler in SharpDevelop.sln; trying to fix the build error.</Change>
  <Change author="Daniel Grunwald" date="09/23/2009">Add sorting support to WPF ListViews.</Change>
  <Change author="Siegfried Pammer" date="09/23/2009">fixed build</Change>
  <Change author="Siegfried Pammer" date="09/23/2009">- integrated Profiler into SharpDevelop.Tests.sln
- removed "treat warnings as errors" from HexEditor.csproj and StartPage.csproj
- first drafts of a comparison API for SDPS files (ICSharpCode.Profiler.Controller.Analysis)</Change>
  <Change author="Daniel Grunwald" date="09/23/2009">Fixed build (SVNChangelogToXml was failing when only the 'SharpDevelop' directory was checked out).</Change>
  <Change author="Daniel Grunwald" date="09/23/2009">Update SVNChangeLogToXml tool.</Change>
  <Change author="Daniel Grunwald" date="09/23/2009">Remove unused conversion style sheets.</Change>
  <Change author="Daniel Grunwald" date="09/22/2009">Add warnings/errors immediately to errors pad (don't wait for end of build).</Change>
  <Change author="Daniel Grunwald" date="09/22/2009">Started work on UI for project upgrade (to .NET 4.0).</Change>
  <Change author="Philipp Maihart" date="09/20/2009">Data AddIn: Fixed Composite Key FK Cardinality
</Change>
  <Change author="Philipp Maihart" date="09/20/2009">Data AddIn - Connection Wizard: Improved exception handling
</Change>
  <Change author="Daniel Grunwald" date="09/19/2009">Prepare DocumentLineTree for optimization.
Added (unfinished) CP article about AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="09/19/2009">Allow data-binding to the TextEditor.SyntaxHighlighting property.
Make HighlightingManager thread-safe.</Change>
  <Change author="Siegfried Pammer" date="09/19/2009">- added xml: completion
- fixed bug in xmlns completion
- use Rope&lt;byte&gt; in HexEditor</Change>
  <Change author="Christian Hornung" date="09/19/2009">Ported ResourceToolkit to ITextEditor.</Change>
  <Change author="Siegfried Pammer" date="09/19/2009">HexEditor:
- Added "copy as binary" and "copy as hex string" to contex menu
- Fixed redraw bug</Change>
  <Change author="Siegfried Pammer" date="09/18/2009">- Fixed Bugs in XAML completion
- Added some Unit Tests for CC
- XAML binding is now aware of different WPF-XAML namespaces
- Detect used WPF-XAML namespace in XLinq based refactoring</Change>
  <Change author="Daniel Grunwald" date="09/18/2009">Allow users to change the AvalonEdit selection style.</Change>
  <Change author="Daniel Grunwald" date="09/18/2009">Ported Edit&gt;Insert menu to ITextEditor.</Change>
  <Change author="Daniel Grunwald" date="09/18/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="09/18/2009">Implemented "Edit &gt; Format &gt; Sort lines" for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="09/18/2009">Merge 3.0 to trunk.</Change>
  <Change author="Martin Koníček" date="09/17/2009">Removed dependency on Value.ExpressionTree from Grid visualizer and WatchPad.</Change>
  <Change author="Martin Koníček" date="09/17/2009">Removed dependency on Value.ExpressionTree from ObjectGraph visualizer.</Change>
  <Change author="Martin Koníček" date="09/17/2009">ObjectGraphNode has also Expression apart from Value, so that using Value.ExpressionTree won't be needed.</Change>
  <Change author="Martin Koníček" date="09/17/2009">Removed Value.ExpressionTree dependency from WindowsDebugger.GetTooltipControl.</Change>
  <Change author="Siegfried Pammer" date="09/17/2009">- Fixed bugs in OptionBinding
- implemented ColorPicker
- added ColorPicker to XAML option dialog</Change>
  <Change author="Daniel Grunwald" date="09/16/2009">Add UsageDataCollector to Setup.
Remove old file associations from setup (.xfrm, .cmbx, .prjx).</Change>
  <Change author="Daniel Grunwald" date="09/16/2009">AvalonEdit: Fixed bugs in "Spaces to tabs" and "Remove trailing whitespace".</Change>
  <Change author="Daniel Grunwald" date="09/16/2009">Upload the full stack trace (including inner exceptions)</Change>
  <Change author="Daniel Grunwald" date="09/16/2009">Fixed exception when network connection is not available; use MTOM message encoding.</Change>
  <Change author="Daniel Grunwald" date="09/16/2009">Implemented upload of usage data.</Change>
  <Change author="Daniel Grunwald" date="09/16/2009">Split UsageDataCollector into reusable assembly and AddIn.</Change>
  <Change author="Daniel Grunwald" date="09/15/2009">MSBuildEngine: move injection of AdditionalTargetFiles after the WinFX targets when compiling with 3.5 or 4.0 toolset.</Change>
  <Change author="Daniel Grunwald" date="09/15/2009">GotoDialog: sort by relevance, then alphabetically
AvalonEdit: bugfixes in folding and highlighting</Change>
  <Change author="Daniel Grunwald" date="09/15/2009">Update to AvalonDock 1.2.2641</Change>
  <Change author="Daniel Grunwald" date="09/14/2009">Implemented TextEditorSideBar for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="09/14/2009">Delay writing feature uses to disk - don't wait for the hard-drive.</Change>
  <Change author="Siegfried Pammer" date="09/14/2009">fixed missing/wrong items displayed in {x:Type} completion</Change>
  <Change author="Daniel Grunwald" date="09/13/2009">Update AvalonDock to 1.2.2632</Change>
  <Change author="Daniel Grunwald" date="09/13/2009">Fixed AvalonEdit bug when deleting text including a folded section.
Fixed DBNull issue in UsageDataUploader.FetchDataForUpload.</Change>
  <Change author="Daniel Grunwald" date="09/13/2009">Add documentation for UsageDataCollector.</Change>
  <Change author="Daniel Grunwald" date="09/13/2009">Prepared code to delete uploaded usage data (upload itself still not implemented).</Change>
  <Change author="Daniel Grunwald" date="09/13/2009">Trying to fix the build (why is the XAML compiler so fragile?)</Change>
  <Change author="Daniel Grunwald" date="09/13/2009">Worked on UsageDataCollector.</Change>
  <Change author="Daniel Grunwald" date="09/12/2009">Add 'UsageDataCollector' AddIn.</Change>
  <Change author="Siegfried Pammer" date="09/12/2009">- moved Hook to VS 2010 project format (vcxproj)
- fixed bug in Xaml binding
- fixed bug in CodeEditor</Change>
  <Change author="Daniel Grunwald" date="09/12/2009">Fixed infinite loop introduced in recent change to folding.</Change>
  <Change author="Daniel Grunwald" date="09/12/2009">Fixed infinite recursion in TextEditor.ScrollTo (bug introduced in r4910)</Change>
  <Change author="Daniel Grunwald" date="09/11/2009">Update setup to include new AddIns (Data.AddIn, WPF Designer, C++ Binding)</Change>
  <Change author="Daniel Grunwald" date="09/11/2009">Add C++ binding (without parser) to SharpDevelop solution.</Change>
  <Change author="Daniel Grunwald" date="09/11/2009">Add simple XmlReader-based XmlFoldingStrategy to AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="09/11/2009">Build simple folding support (independent of parsers in SharpDevelop) into AvalonEdit.
Add TextEditorOptions.AllowScrollBelowDocument (enabled in SharpDevelop) to avoid the view from jumping when collapsing code near the end of document.</Change>
  <Change author="Daniel Grunwald" date="09/11/2009">Fixed FxCop issues in ICSharpCode.AvalonEdit.Xml</Change>
  <Change author="Daniel Grunwald" date="09/11/2009">Build hyperlink support into AvalonEdit and enable it by default.</Change>
  <Change author="Daniel Grunwald" date="09/10/2009">AvalonEdit:
Improved caret/selection behavior on the border of read-only sections.
Fixed some FxCop warnings.</Change>
  <Change author="Daniel Grunwald" date="09/10/2009">Move folding code to separate namespace ICSharpCode.AvalonEdit.Folding.
Add TextEditor.ShowLineNumbers property to show/hide the line numbers (they now are hidden by default).
Add TextEditor.Options.ShowEndOfLine property to allow easily enabling end-of-line markers.
Changed AbstractMargin so that it automatically detects the TextView it is attached to.</Change>
  <Change author="Philipp Maihart" date="09/10/2009">EDMDesigner: Fix in Constraint Cardinality
</Change>
  <Change author="Philipp Maihart" date="09/10/2009">Data-AddIn/EDMDesigner: Support for composite PKs &amp; FKs (Association resolution buggy)
</Change>
  <Change author="Daniel Grunwald" date="09/09/2009">AvalonEdit now creates an invisible Win32 caret. This is necessary for features like 'Follow text editing' in the Windows Magnifier.</Change>
  <Change author="Philipp Maihart" date="09/08/2009">EDM Designer: Reading User Defined Data Types, Domain Model, SQL Server Implementation (just reading metadata)
</Change>
  <Change author="Siegfried Pammer" date="09/08/2009">- fixed bug in OptionBinding
- ported Profiler option panels to new architecture</Change>
  <Change author="Martin Koníček" date="09/08/2009">Fixed minor bug in DebugType.CreateFromName.
Added "Expanding will enumerate the IEnumerable" text to IEnumerable node in debugger tooltips.</Change>
  <Change author="Siegfried Pammer" date="09/07/2009">- removed language selection box from all console except debugger console
- fixed bug in BeginReadOnlySectionProvider</Change>
  <Change author="Daniel Grunwald" date="09/06/2009">Fixed unit tests after x86 change.</Change>
  <Change author="Daniel Grunwald" date="09/06/2009">Fixed project creation (don't create both AnyCPU and x86 platforms)</Change>
  <Change author="Daniel Grunwald" date="09/06/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="09/06/2009">Implemented ToolBar CheckBox in Core.Presentation.
Fixed OverflowException when AvalonEditTextEditorAdapter.JumpTo was called with column==int.MaxValue.</Change>
  <Change author="Daniel Grunwald" date="09/06/2009">AvalonEdit: add safety check that ReadOnlySectionProvider doesn't return invalid sections.
Core.Presentation: fixed typo in class name</Change>
  <Change author="Siegfried Pammer" date="09/04/2009">small bug fix in XamlColorizer</Change>
  <Change author="David Srbecký" date="09/02/2009">Fixed bug in type resolution from name</Change>
  <Change author="David Srbecký" date="09/02/2009">Unified and extended tests for testing metadata reading</Change>
  <Change author="Siegfried Pammer" date="09/02/2009">- removed some debug code from AXmlParser in Release build to increase performance a bit
- fixed some minor ErrorPainter bugs</Change>
  <Change author="David Srbecký" date="09/02/2009">Fixed debugger unit tests - there was a state that depended on the order the tests are run in</Change>
  <Change author="David Srbecký" date="09/02/2009">Removed some redundant debugger tests;  Re-enabled some old tests</Change>
  <Change author="David Srbecký" date="09/02/2009">Renamed debugger tests.  The tests now have a prefix specifying which class they test.</Change>
  <Change author="Daniel Grunwald" date="09/01/2009">Bracket highlighting: Create a different figure for start and end bracket (don't draw combining line when end bracket is on the next line after the start bracket)</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">Expand foldings when the caret is moved into them.</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">Update strings in main menu and toolbar when changing the language.</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">Performance improvements in GotoDialog.</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">Improved automatic language switching of workbench elements.</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">LocalizeExtension + StringParseExtension: implemented automatic update of text when the language changes.</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">Reimplemented "Go to matching brace".</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">AvalonEdit: scroll when mouse is moved close to border while selecting text.
NewFileDialog: fixed bug that caused file names to not contain ${Number}.</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">Improved scrolling so that the code being jumped to end up in the middle of the text area.</Change>
  <Change author="Daniel Grunwald" date="08/31/2009">Move tooltip handling from CodeEditor to CodeEditorView.</Change>
  <Change author="Siegfried Pammer" date="08/31/2009">improved XamlColorizer: reduced flicker while typing</Change>
  <Change author="Martin Koníček" date="08/30/2009">Fixed a minor bug in AvalonEdit.TextEditor.IsReadOnly.</Change>
  <Change author="David Srbecký" date="08/30/2009">Support for 'this' in delegate-captured variables</Change>
  <Change author="Siegfried Pammer" date="08/30/2009">Only refresh the bracket highlighting when it actually changed. Use same colors as the old editor.</Change>
  <Change author="Daniel Grunwald" date="08/30/2009">Add TextView.InvalidateLayer.
Enabled bracket highlighting.</Change>
  <Change author="Martin Koníček" date="08/30/2009">Added Xml visualizer with highlighting using AvalonEdit, no indentation and folding yet.
Text visualizer uses AvalonEdit.</Change>
  <Change author="Siegfried Pammer" date="08/30/2009">- implemented IBracketSearcher for C#
- added BracketHighlightRenderer (disabled by default)
- renamed ErrorDrawer to ErrorPainter</Change>
  <Change author="Daniel Grunwald" date="08/30/2009">Fixed ArgumentOutOfRangeException in Caret when closing a folding section.
Added IsReadOnly property to AvalonEdit.TextEditor.</Change>
  <Change author="Daniel Grunwald" date="08/30/2009">Display title of #region in folding.</Change>
  <Change author="David Srbecký" date="08/30/2009">Support for variables captured by delegate</Change>
  <Change author="Christoph Wille" date="08/30/2009">Remove language bitmap resource for "easter egg" translation that no longer ships in SharpDevelop</Change>
  <Change author="Martin Koníček" date="08/30/2009">Magnifier image in debugger tooltips.</Change>
  <Change author="Daniel Grunwald" date="08/30/2009">ParserService: allow GetExistingParseInformation with specified project content.</Change>
  <Change author="Daniel Grunwald" date="08/30/2009">Reimplemented the ParserFoldingStrategy for AvalonEdit.</Change>
  <Change author="Siegfried Pammer" date="08/30/2009">implemented ErrorDrawer for ITextEditor</Change>
  <Change author="David Srbecký" date="08/30/2009">Unit test for yield/delegate local variables</Change>
  <Change author="David Srbecký" date="08/30/2009">Fixed race condition that was causing unit tests to fail</Change>
  <Change author="David Srbecký" date="08/30/2009">More flexible API for local variables;  
Get type of local variable;  
Generalized getting of type/method attributes</Change>
  <Change author="Siegfried Pammer" date="08/30/2009">fixed WpfDesign unit tests</Change>
  <Change author="Siegfried Pammer" date="08/30/2009">- improved WPF designer in some areas
- added missing implementations of methods in VBNetFormattingStrategy</Change>
  <Change author="Martin Koníček" date="08/29/2009">Debugger tooltips for IEnumerable&lt;T&gt;.</Change>
  <Change author="Martin Koníček" date="08/29/2009">Grid visualizer uses DebuggerHelpers.CreateDebugListExpression to fill a List by IEnumerable inside the debuggee and then display the List.
Implemented ExpressionEvaluator.VisitObjectCreateExpression.</Change>
  <Change author="Daniel Grunwald" date="08/29/2009">Use Ctrl+Click as go to definition.</Change>
  <Change author="Siegfried Pammer" date="08/29/2009">- removed x-support from XamlResolver
- added XamlNamespacePrefix to XamlContext
- fixed invalid placement handling in GridPlacementSupport</Change>
  <Change author="Daniel Grunwald" date="08/29/2009">Fix build.</Change>
  <Change author="Daniel Grunwald" date="08/29/2009">Fix build.</Change>
  <Change author="Daniel Grunwald" date="08/29/2009">Store string resources as .resx instead of .resources in the repository.</Change>
  <Change author="Daniel Grunwald" date="08/28/2009">LoadSolutionProjectsThread: use multiple processor cores for parsing</Change>
  <Change author="Siegfried Pammer" date="08/28/2009">trying to fix build with x:Name instead of Name</Change>
  <Change author="Martin Koníček" date="08/28/2009">Text visualizer has two separate buttons for Copy to clipboard and Close.</Change>
  <Change author="David Srbecký" date="08/28/2009">Unit test for explicit method argument typing</Change>
  <Change author="David Srbecký" date="08/28/2009">Value.Array* return 0/null instead of throwing exception for non-arrays</Change>
  <Change author="David Srbecký" date="08/28/2009">Explicit names in tests</Change>
  <Change author="David Srbecký" date="08/28/2009">Use explicit typing information during evaluation</Change>
  <Change author="Siegfried Pammer" date="08/28/2009">- moved some debugger classes to extra files
- ported conditional breakpoints to WPF
- added ability to switch scripting language in conditional breakpoints, watch pad and console pad.</Change>
  <Change author="David Srbecký" date="08/28/2009">Add explicit type informations to expressions</Change>
  <Change author="Martin Koníček" date="08/28/2009">Text visualizer has word wrap and copy to clipboard.</Change>
  <Change author="Martin Koníček" date="08/28/2009">Added Text visualizer.
Visualizers in tooltips are shown only when appropriate.</Change>
  <Change author="Siegfried Pammer" date="08/28/2009">fixed bug in XamlColorizer</Change>
  <Change author="Martin Koníček" date="08/28/2009">Object graph visualizer shows fields.</Change>
  <Change author="Siegfried Pammer" date="08/28/2009">ported VB.NET formatting strategy to ITextEditor</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Revert docking library change (broke more stuff than it fixed). Small improvements to Boo interpreter pad.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Fixed memory leak in GotoDialog.</Change>
  <Change author="Siegfried Pammer" date="08/27/2009">- corrected typo in ITextEditorOptions
- added AllMembers to IClass
- improved console (allow Ctrl+A, Delete or Backspace to clear the console)</Change>
  <Change author="David Srbecký" date="08/27/2009">Use WPF "DoEvents"</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Trying to fix the zero-height bugin AvalonDock (repro steps were: close last pad in a pane, change layout, change layout back, reopen pad).</Change>
  <Change author="Martin Koníček" date="08/27/2009">Fixed "Process is not paused" exception in DebuggerHelpers.InvokeDefaultGetHashCode - thanks to David.
Started implementing Eval.NewObject.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Fixed NullReferenceException in go to dialog</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Show methods in current file in the Go To dialog.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Add WPF Designer back to SharpDevelop 4.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Move WPF Designer to .NET 4.0.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">ITextBufferVersion: add MoveOffsetTo method</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Restore XamlDesigner to match old WPF Designer version</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Some FxCop cleanup</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">A few FxCop fixes and missing documentation.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Code cleanup; fixed moving controls in and out of containers that had transforms applied.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">GrayOutDesignerExceptActiveArea: only primary selection</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Fix unit tests.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Get rid of own HashSet implementation.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">DragMoveMouseGesture bugfix: use coordinates relative to design panel because MoveLogic expects those.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">More cleanup.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">WPF Designer code cleanup.</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">GrayOutDesignerExceptActiveArea bugfixes</Change>
  <Change author="Daniel Grunwald" date="08/27/2009">Resurrect old version of WPF designer (from revision 3608)</Change>
  <Change author="David Srbecký" date="08/23/2009">Ignore debugger unit tests for now</Change>
  <Change author="David Srbecký" date="08/23/2009">Cache expressions (third attempt)</Change>
  <Change author="David Srbecký" date="08/23/2009">Call all evaluations from a helper method</Change>
  <Change author="David Srbecký" date="08/23/2009">Reverted Debugger.Core to r4721</Change>
  <Change author="David Srbecký" date="08/23/2009">Reverted some convenience methods from r4745</Change>
  <Change author="David Srbecký" date="08/23/2009">Expression caching (second attempt)</Change>
  <Change author="Martin Koníček" date="08/23/2009">Grid visualizer: 
 - added index column
 - simplified code for showing / hiding columns</Change>
  <Change author="David Srbecký" date="08/23/2009">Reverted expression caching</Change>
  <Change author="Daniel Grunwald" date="08/22/2009">Disable all debugger tests (trying if this will fix the build).</Change>
  <Change author="Siegfried Pammer" date="08/22/2009">removed Drag and Drop functionality from XamlOutlineNode</Change>
  <Change author="Siegfried Pammer" date="08/22/2009">ported consoles to AvalonEdit</Change>
  <Change author="Martin Koníček" date="08/22/2009">Grid visualizer can be opened from Debugger tooltips.</Change>
  <Change author="Daniel Grunwald" date="08/21/2009">Ignore Debugger tests that are failing on my machine.</Change>
  <Change author="Siegfried Pammer" date="08/21/2009">- XamlBinding: fixed bugs and added Unit Tests
- converted NRefactoryDemo.csproj to .NET 4</Change>
  <Change author="Daniel Grunwald" date="08/21/2009">SharpDevelop.Dom: in CtrlSpace+GetCompletionData methods: replace ArrayList with List&lt;ICompletionEntry&gt;</Change>
  <Change author="Martin Koníček" date="08/21/2009">Debugger tooltips - added visualizer picker image.</Change>
  <Change author="David Srbecký" date="08/20/2009">Expression caching</Change>
  <Change author="Daniel Grunwald" date="08/19/2009">Removed CtrlSpace method from IResolver interface.
What previously was implemented in the resolver can now be done directly in the CodeCompletionBinding.
The existing code still takes the long route (CodeCompletionBinding-&gt;CtrlSpaceCompletionItemProvider-&gt;Resolver), but now using derived classes that call directly into the language-specific resolver instead going through the ParserService and IResolver interface.</Change>
  <Change author="Daniel Grunwald" date="08/19/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="08/19/2009">Mark ParseInformation.*CompilationUnit as obsolete.</Change>
  <Change author="Siegfried Pammer" date="08/19/2009">profiler: modified DefaultProfiler implementation to show error message instead of throwing NotSupportedException in case no profiler was found.</Change>
  <Change author="Daniel Grunwald" date="08/19/2009">Trying to reduce amount of global state in ICSharpCode.Core</Change>
  <Change author="Siegfried Pammer" date="08/19/2009">XamlBinding: ported outline content to AXml API</Change>
  <Change author="Martin Koníček" date="08/19/2009">Fixed build.</Change>
  <Change author="Martin Koníček" date="08/18/2009">Debugger tooltips:
 - fixed tooltip position on non-default DPI
 - tooltip is aligned to line bottom</Change>
  <Change author="Daniel Grunwald" date="08/18/2009">QuickClassBrowser: don't change ComboBox contents while user has opened the drop-down.</Change>
  <Change author="Daniel Grunwald" date="08/18/2009">ParserService bugfix: use IParseInformationListener interface.
AvalonEditViewContent: text buffer returned by IEditable.CreateSnapshot() now supports ITextBufferVersion</Change>
  <Change author="Siegfried Pammer" date="08/18/2009">XamlBinding: bugfixes</Change>
  <Change author="David Srbecký" date="08/18/2009">XML Parser:  Bugfix and some optimizations</Change>
  <Change author="Daniel Grunwald" date="08/18/2009">Allow to continue running the LoadSolutionProjects thread when there's an exception.</Change>
  <Change author="Siegfried Pammer" date="08/18/2009">XamlBinding: fixed Unit Tests</Change>
  <Change author="Siegfried Pammer" date="08/18/2009">- implemented XamlParser
- removed unused code</Change>
  <Change author="Daniel Grunwald" date="08/18/2009">Allow unit tests to set the list of parser descriptors in the ParserService.</Change>
  <Change author="David Srbecký" date="08/18/2009">Fixed thread safety.  Handling of null version.</Change>
  <Change author="Martin Koníček" date="08/18/2009">Eval.CreateValue sets Value.ExpressionTree more correctly so that Expression.PrettyPrint does not result in stack overflow anymore.</Change>
  <Change author="Daniel Grunwald" date="08/18/2009">Fixed bug in ParserService (ParseInformationUpdated event was not raised).</Change>
  <Change author="David Srbecký" date="08/17/2009">XML Parser:  ParseAndLock method in the XamlParser</Change>
  <Change author="Daniel Grunwald" date="08/17/2009">Removed 'no-concurrent calls' guarantee for IParser. This avoids deadlocks when IParser implementations invoke methods on the main thread.</Change>
  <Change author="David Srbecký" date="08/17/2009">XML Parser:  Fixed some bugs.  Hereby declaring code ready for use.</Change>
  <Change author="Philipp Maihart" date="08/17/2009">EMD Designer: Several bugfixes concerning wizard/template problems when generating a new EDMX from database</Change>
  <Change author="Daniel Grunwald" date="08/17/2009">Ignore failing XamlBinding test.</Change>
  <Change author="Martin Koníček" date="08/17/2009">Update to Graphviz 2.24 - added new binaries, should run on clean Windows now.</Change>
  <Change author="Martin Koníček" date="08/17/2009">Update to Graphviz 2.24 - deleted old binaries.</Change>
  <Change author="Daniel Grunwald" date="08/17/2009">ParserService refactoring:
 - one IParser instance per file
 - ITextBuffer provides a method to retrieve changes since the last parse runs
 - IParser implementations may choose to use this to implement incremental parsing
 - no concurrent calls to the same IParser instance
 - one file may be inside multiple projects
 - Split out assembly handling to AssemblyParserService
 - Split out LoadSolutionProjectsThread to LoadSolutionProjects.cs
See http://laputa.sharpdevelop.net/ParserServiceRefactoring.aspx</Change>
  <Change author="Siegfried Pammer" date="08/17/2009">- fixed build
- deleted DependencyPropertiesTests</Change>
  <Change author="Martin Koníček" date="08/17/2009">Object graph visualizer can be opened from debugger tooltips.
Attemp to move Object graph visualizer to Pad - will stay in separate topmost Window until AbstractPadContent.IsVisible works properly.</Change>
  <Change author="Siegfried Pammer" date="08/17/2009">XamlBinding:
- reimplemented CC using incremental parser
- fixed threading bugs in HighlightTask
- fixed unit tests
- made AXmlParser thread-safe using AXmlParser.Lock</Change>
  <Change author="David Srbecký" date="08/17/2009">XML Parser:
 - AXmlObject.Document is stored as a field rather then always calculated.
 - Removed some expensive asserts.</Change>
  <Change author="David Srbecký" date="08/17/2009">XML Parser:  Made it easier to add custom tests</Change>
  <Change author="David Srbecký" date="08/16/2009">XML Parser:  Fixed or ignored not-well-formed unit tests.  The parser is passing over 600 W3C tests now.  The issues being ignored are mostly related to the fact that the parser is not verifying DTDs. (which is not supported and is not going to be supported).</Change>
  <Change author="Philipp Maihart" date="08/16/2009">EDMX Generation finished: Additional MSL info for EntitySetMapping generation (EntityTypeMapping/MappingFragment)</Change>
  <Change author="Philipp Maihart" date="08/16/2009">Several improvements on Designer, WizardWindow, Template for EDMX creation (EDMX creation isn't working yet because of the missing EntityTypeMapping support of Edmgen.exe)</Change>
  <Change author="David Srbecký" date="08/16/2009">XML Parser:  Fixed well formed tests</Change>
  <Change author="David Srbecký" date="08/16/2009">XML Parser:  Added canonical XML pretty printer needed for tests</Change>
  <Change author="Daniel Grunwald" date="08/16/2009">Remove unused code.</Change>
  <Change author="David Srbecký" date="08/16/2009">XML Parser:
 - Improved formatting of test output
 - Included subset of W3C XML Conformance Test Suite</Change>
  <Change author="David Srbecký" date="08/15/2009">XML Parser:  Well-formed tests pass</Change>
  <Change author="Siegfried Pammer" date="08/15/2009">- fixed build
- reintegrated some unit tests
- removed syntax highlighting (temporary)
- now using incremental XML parsing on GUI thread</Change>
  <Change author="David Srbecký" date="08/15/2009">XML Parser:  Handling of Elements without start tag</Change>
  <Change author="Martin Koníček" date="08/15/2009">Object graph visualizer:
 - node UI Control reuse between subsequent graphs for better performance
 - styled "+" buttons</Change>
  <Change author="David Srbecký" date="08/15/2009">XML Parser:  Using just one common TextSegmentCollection.  Fixed tracking of uncached objects</Change>
  <Change author="David Srbecký" date="08/15/2009">XML Parser:  Cache renamed to TrackedSegmentCollection</Change>
  <Change author="Daniel Grunwald" date="08/15/2009">AvalonEdit: code cleanup</Change>
  <Change author="Siegfried Pammer" date="08/15/2009">ported ExtractMethodCommand to ITextEditor</Change>
  <Change author="Daniel Grunwald" date="08/15/2009">Implemented drag'n'drop from explorer onto WpfWorkbench to open files.
Reimplemented workbench tracking of renamed/delete files.
UpdateAssemblyInfo: use version number 0 when SVN revision cannot be read and no REVISION file is present.</Change>
  <Change author="David Srbecký" date="08/15/2009">XML Parser:  Fixed a few small bugs</Change>
  <Change author="Siegfried Pammer" date="08/15/2009">added simple XmlParser tests</Change>
  <Change author="David Srbecký" date="08/15/2009">XML Parser:  Track offsets of syntax errors.  Updated XmlDOM sample.</Change>
  <Change author="Daniel Grunwald" date="08/14/2009">Moved a few classes and methods in AvalonEdit to eliminate dependency cycles between namespaces.</Change>
  <Change author="Philipp Maihart" date="08/14/2009">Data AddIn (Database Metadata Fetcher, Database Explorer, EDM Designer, WPF Wizard)</Change>
  <Change author="David Srbecký" date="08/14/2009">XML Parser:  Changed class prefix to "AXml" (standing for AvalonEdit XML) (part 3)</Change>
  <Change author="David Srbecký" date="08/14/2009">XML Parser:  Changed class prefix to "AXml" (standing for AvalonEdit XML) (part 2)</Change>
  <Change author="David Srbecký" date="08/14/2009">XML Parser:  Changed class prefix to "AXml" (standing for AvalonEdit XML) (part 1)</Change>
  <Change author="Daniel Grunwald" date="08/14/2009">Merge 3.0 to trunk.</Change>
  <Change author="David Srbecký" date="08/14/2009">XML Parser:  Each class moved to individual file</Change>
  <Change author="David Srbecký" date="08/14/2009">XML Parser:  XmlParser class restructured and divided</Change>
  <Change author="Daniel Grunwald" date="08/14/2009">Fixed AvalonEdit bugs.</Change>
  <Change author="Daniel Grunwald" date="08/14/2009">AvalonEdit: Fixed drag'n'drop when there are read-only text segments.</Change>
  <Change author="Daniel Grunwald" date="08/14/2009">Use ITextBuffer instead of string in IParser.</Change>
  <Change author="Daniel Grunwald" date="08/14/2009">Ignore failing unit tests.
Fixed a few FxCop warnings in AvalonEdit.</Change>
  <Change author="David Srbecký" date="08/14/2009">XML Parser:  Element caching</Change>
  <Change author="David Srbecký" date="08/14/2009">XML Parser:  Several small fixes and changes</Change>
  <Change author="David Srbecký" date="08/13/2009">XML Parser:  GetSelfAndAllChildren optimized by reusing Daniel's Flatten function</Change>
  <Change author="Daniel Grunwald" date="08/13/2009">Implemented Copy/Paste for rectangular selections.</Change>
  <Change author="David Srbecký" date="08/13/2009">XML Parser:  Do not remove items from other location during insert - just set parent pointer</Change>
  <Change author="Daniel Grunwald" date="08/13/2009">Added rectangular selection to AvalonEdit.</Change>
  <Change author="David Srbecký" date="08/13/2009">XML Parser:  Attach / detach events replaced with Inserted / Removed (which apply to whole trees).  Collection events occur for one item at a time.</Change>
  <Change author="David Srbecký" date="08/13/2009">XML Parser:  Replaced matching algorithm</Change>
  <Change author="Daniel Grunwald" date="08/13/2009">Bugfixes AvalonEdit TextSegmentCollection:
- Replacements are now handled correctly (not as remove+insert)
- Fixed bug in FindFirstSegmentWithStartAfter when there were multiple segments starting at startOffset.</Change>
  <Change author="Siegfried Pammer" date="08/13/2009">XamlBinding:
- fixed tests
- added new tests</Change>
  <Change author="David Srbecký" date="08/13/2009">XML Parser:  Improved tag matching heuristics a bit</Change>
  <Change author="David Srbecký" date="08/13/2009">XML Parser:  Rewrite regarding consistency of the tree structure</Change>
  <Change author="Siegfried Pammer" date="08/13/2009">XamlBinding:
- fixed unit tests
- added unit tests
- removed unfinished PowerToys

made GetCurrentAmbience thread-safe (included fix by Daniel)
slightly changed behavior of XmlParser</Change>
  <Change author="Martin Koníček" date="08/12/2009">Debugger tooltips - Debugger.AddIn.TreeNodes provide Visualizer commands which are displayed in Visualizer pickers in DebuggerTooltipControl.
Made everything in DebuggerTooltipControl not Focusable - if grid cell or Visualizer picker was focused, it blocked shortcuts (like F10 for stepping).</Change>
  <Change author="Martin Koníček" date="08/11/2009">- Added VisualizerPicker to debugger tooltips (template based on default ComboBox template, added PresentationFramework.Aero reference to SharpDevelop.csproj for combobox drop shadow)
- Moved debugger tooltips to Tooltips subfolder</Change>
  <Change author="David Srbecký" date="08/11/2009">XML Parser:  Minor bugfix</Change>
  <Change author="David Srbecký" date="08/11/2009">XML Parser:  Tag matching heuristics</Change>
  <Change author="Daniel Grunwald" date="08/10/2009">Add ChangeTrackingCheckpoint to AvalonEdit.Document.
Removed calls to LINQ Cast&lt;T&gt;() where possible (now using C# 4.0 covariance).</Change>
  <Change author="Martin Koníček" date="08/10/2009">- Debugger tooltips display icons
- fixed warnings</Change>
  <Change author="Martin Koníček" date="08/10/2009">Refactored Debugger.AddIn.TreeModel.TreeNode to use SharpDevelop.IImage instead of System.Drawing.Bitmap. The Bitmap is still obtainable from IImage.Bitmap property.</Change>
  <Change author="Siegfried Pammer" date="08/10/2009">XamlBinding:
- changed ResolveContext to use AvalonEdit.XmlParser
- changed unit tests
- added unit tests

* added highlighting for selected search result</Change>
  <Change author="Martin Koníček" date="08/09/2009">Debugger tooltips - closing popup in CodeEditor.JumpTo so that the popup closes on debugger steps.</Change>
  <Change author="David Srbecký" date="08/09/2009">XML Parser:  Dereference escaped values</Change>
  <Change author="Martin Koníček" date="08/09/2009">HighlightingManager.RegisterHighlighting - changed "c:\temp" to Path.GetTempPath().</Change>
  <Change author="David Srbecký" date="08/09/2009">XML Parser:
 - Added more documentation
 - Attribute value heuristics is more greedy</Change>
  <Change author="David Srbecký" date="08/09/2009">XML Parser:
 - Optimized text reading functioning
 - Simplified ReadText method</Change>
  <Change author="Martin Koníček" date="08/08/2009">Debugger tooltips - basic version finished, lazy evaluated on scrolling, behavior very similar to SharpDevelop 3. Missing: icons, integration with visualizers.</Change>
  <Change author="Daniel Grunwald" date="08/08/2009">Make Highlighting definitions and Xshd model serializable.</Change>
  <Change author="David Srbecký" date="08/08/2009">XML Parser:  Fast attribute lookup using hashtable</Change>
  <Change author="Daniel Grunwald" date="08/08/2009">Move Rope&lt;T&gt; to AvalonEdit.Utils.
Add TextDocument(IEnumerable&lt;char&gt;)-constructor.</Change>
  <Change author="David Srbecký" date="08/08/2009">XML Parser:
 - Fixed namespace support to match specification
 - Syntax errors collection moved to document
 - Added Changing event for objects</Change>
  <Change author="Daniel Grunwald" date="08/08/2009">Add function node support to Rope&lt;T&gt;.</Change>
  <Change author="David Srbecký" date="08/08/2009">XML Parser:  Removed XLinq support</Change>
  <Change author="David Srbecký" date="08/08/2009">XML Parser:  Added some helper methods</Change>
  <Change author="David Srbecký" date="08/08/2009">XML Parser:  Report syntax errors.  Improved consistency of tree.</Change>
  <Change author="Martin Koníček" date="08/07/2009">Debugger tooltips - expanding, partially working collapsing using StaysOpen = false for leaf Popup</Change>
  <Change author="David Srbecký" date="08/07/2009">XML Parser:  Heuristic for missing quotes in attribute values</Change>
  <Change author="David Srbecký" date="08/06/2009">XML Parser:  Keep track of memory touched during parsing of an item</Change>
  <Change author="David Srbecký" date="08/06/2009">XML Parser:  Visitor and PrettyPrinter</Change>
  <Change author="David Srbecký" date="08/06/2009">XML Parser:  Rechecked all parse functions and tried to make them more error prone;  Added a lot TODOs for the missing functionality.</Change>
  <Change author="David Srbecký" date="08/05/2009">XML Parser:  Support DTD just enough so that it is properly parsed and skipped</Change>
  <Change author="David Srbecký" date="08/05/2009">XML Parser:  Unified text reading methods;  Long text may be separated into fragments</Change>
  <Change author="Siegfried Pammer" date="08/05/2009">XamlBinding:
- added PropertyPathTokenizer and PropertyPathParser
- added unit tests

* fixed an "off by one" error in TaskService
* corrected typo in MemberResolveResult documentation</Change>
  <Change author="Martin Koníček" date="08/05/2009">Debugger tooltips - content displayed in a Popup
- added SVN keyword "Revision" to source files in Debugger.AddIn/Project/Src/Visualizers folder</Change>
  <Change author="Daniel Grunwald" date="08/04/2009">Added Rope&lt;T&gt; to AvalonEdit and use it instead of the GapTextBuffer.</Change>
  <Change author="David Srbecký" date="08/04/2009">Very simple string caching</Change>
  <Change author="David Srbecký" date="08/04/2009">XML Parser:  Added documentation.  Support for comments, processing instructions and CData.</Change>
  <Change author="Martin Koníček" date="08/04/2009">Debugger tooltips - DebuggerTooltipControl is shown in the tooltip.</Change>
  <Change author="Martin Koníček" date="08/03/2009">Debugger tooltips - added DebuggerTooltipControl.</Change>
  <Change author="Siegfried Pammer" date="08/03/2009">XamlBinding:
fixed smaller bugs
improved Trigger and Style CC</Change>
  <Change author="David Srbecký" date="08/03/2009">XML Parser:  Joint multiple collection updates together</Change>
  <Change author="David Srbecký" date="08/03/2009">XML Parser:  Cache the XLinq objects</Change>
  <Change author="Martin Koníček" date="08/03/2009">Refactored LazyListView to LazyItemsControl, can be used with any ItemsControl.</Change>
  <Change author="Siegfried Pammer" date="08/03/2009">XamlBinding:
- added unit tests
- code clean up
- improved CC for:
  * Trigger
  * EventTrigger
  * MultiTrigger
  * Setter, EventSetter</Change>
  <Change author="David Srbecký" date="08/03/2009">XML Parser:  Simplified code by introducing RawContainer</Change>
  <Change author="David Srbecký" date="08/03/2009">XML Parser:  Using only one copy of raw DOM again.  All DOM object offsets will be always relative to the last parsed text.  The user can use list of changes since last parse to translate between the old offsets and new ones.
</Change>
  <Change author="David Srbecký" date="08/02/2009">XML Parser: Initial support for Xml.Linq</Change>
  <Change author="David Srbecký" date="08/02/2009">Written custom XML parser which can handle malformed XML.  Subsequent parsing is incremental to increase performance.  The old and new parse trees are compared, the DOM is updated and user events are raised.</Change>
  <Change author="Martin Koníček" date="08/02/2009">Grid visualizer:
- refactored value providers
- values are obtained from debugger only for displayed columns
- scrolls to top when new variable inspected</Change>
  <Change author="Martin Koníček" date="08/02/2009">Fixed bug in caching ListValuesProvider.GetCount. This bug wasn't visible before the Expressions refactoring (rev. 4555) due to caching implemented in the old Expressions.</Change>
  <Change author="Daniel Grunwald" date="08/01/2009">Fixed bug introduced in last revision.</Change>
  <Change author="Daniel Grunwald" date="08/01/2009">AvalonEdit:
 - made DocumentChangeEventArgs immutable
 - allow using TextSegmentCollection without a connected TextDocument
 - TextView: allow scrolling a bit more to the right than the the maximum line width - ensures that there's always room at the line end to display the caret</Change>
  <Change author="David Srbecký" date="07/30/2009">Missed one TypeSpec case</Change>
  <Change author="Martin Koníček" date="07/30/2009">WindowsDebugger.GetTooltipControl fixed - returns simple string tooltip.</Change>
  <Change author="Siegfried Pammer" date="07/29/2009">XamlBinding:
- finished Grid Editor
- if no grid is selected Grid Editor selects the root control of the Window/UserControl, if it is a grid, otherwise an error message is displayed.</Change>
  <Change author="Siegfried Pammer" date="07/29/2009">XamlBinding: implemented drag and drop in grid editor</Change>
  <Change author="David Srbecký" date="07/28/2009">Restructured the API for creating DebugType;</Change>
  <Change author="Siegfried Pammer" date="07/28/2009">XamlBinding: improved EditGridColumnsAndRowsDialog</Change>
  <Change author="David Srbecký" date="07/28/2009">Fixed build</Change>
  <Change author="Siegfried Pammer" date="07/28/2009">XamlBinding:
- fixed preselection on attached property/event completion
- improved Grid-Editor</Change>
  <Change author="David Srbecký" date="07/28/2009">Rewritten expressions in debugger to use NRefactory;  
Variable Tree Model modified so that it supports lazy evaluation (for scrolling)</Change>
  <Change author="Siegfried Pammer" date="07/27/2009">XamlBinding:
- improved attribute CC
- added GridLengthEditor to EditGridColumnsAndRowsDialog
- added XamlOutlineContentHost</Change>
  <Change author="Daniel Grunwald" date="07/26/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="07/26/2009">Use WPF routed commands for 'Help' and 'Print'.</Change>
  <Change author="Daniel Grunwald" date="07/26/2009">Add "ITextEditor.PrimaryView" property to allow language bindings to detect split-views.</Change>
  <Change author="Siegfried Pammer" date="07/25/2009">- refactoring of LanguageBindings, introduced ProjectBindings
- fixed ExamplePad.xft
- added OutlinePad and IOutlineContentHost</Change>
  <Change author="Daniel Grunwald" date="07/25/2009">Port StringResourceToolAddIn to SharpDevelop 4.</Change>
  <Change author="Daniel Grunwald" date="07/24/2009">Block r4531 (Disable upgrades from SharpDevelop 3.0 to 3.1) from being merged to trunk.</Change>
  <Change author="David Srbecký" date="07/24/2009">Support creating type from signature for arrays and pointers</Change>
  <Change author="Martin Koníček" date="07/24/2009">Grid visualizer - choosing columns to display (using ComboBox with custom style based on default style).</Change>
  <Change author="David Srbecký" date="07/23/2009">Fixed signature reading for fields;  
Unit test for signature reading (still partially failing)</Change>
  <Change author="Daniel Grunwald" date="07/23/2009">Fixed code analysis AddIn (fixed support for custom MSBuild loggers, ported SuppressMessageCommand to ITextEditor).</Change>
  <Change author="Siegfried Pammer" date="07/23/2009">XamlBinding: improved drag and drop in EditGridColumnsAndRowsDialog</Change>
  <Change author="David Srbecký" date="07/23/2009">Type caching simplified;  
Fixed a bug for AppDomains - the AppDomain for threads can change</Change>
  <Change author="Siegfried Pammer" date="07/23/2009">XamlBinding: fixed some FxCop warnings</Change>
  <Change author="Siegfried Pammer" date="07/23/2009">XamlBinding:
- improved drag and drop operations
- added unit tests
- added {x:Null} to Nullable&lt;T&gt; member completion
- fixed completion after insertion of '{' in attribute value
- ran FxCop and fixed some warnings</Change>
  <Change author="David Srbecký" date="07/22/2009">Made the debugger is more aware of AppDomains.  Most objects now know which appdomain they belong to.</Change>
  <Change author="David Srbecký" date="07/22/2009">Renaming files accordingly and some final touches</Change>
  <Change author="David Srbecký" date="07/22/2009">Created ThreadCollection class</Change>
  <Change author="David Srbecký" date="07/22/2009">Created ModuleCollection class</Change>
  <Change author="David Srbecký" date="07/22/2009">Created EvalCollection class</Change>
  <Change author="David Srbecký" date="07/22/2009">Created ProcessCollection class</Change>
  <Change author="David Srbecký" date="07/22/2009">Created BreakpointCollection class</Change>
  <Change author="Siegfried Pammer" date="07/22/2009">XamlBinding:
- improved code completion
- added drag and drop functionality to EditGridColumnsAndRowsDialog</Change>
  <Change author="David Srbecký" date="07/22/2009">Resolve TypeRefs that are defined in a nested class</Change>
  <Change author="David Srbecký" date="07/22/2009">Console: Report error if operator is not supported for given arguments.</Change>
  <Change author="Siegfried Pammer" date="07/21/2009">Added history functionality to Boo Interpreter and Debugger Console</Change>
  <Change author="Siegfried Pammer" date="07/20/2009">XamlBinding:
- fixed some problems in XamlColorizer
- added Unit Tests for CC</Change>
  <Change author="Daniel Grunwald" date="07/20/2009">ICSharpCode.Core.WinForms: Support WPF commands in WinForms menus.</Change>
  <Change author="David Srbecký" date="07/19/2009">Console: Unary expressions (-i;  i++)</Change>
  <Change author="David Srbecký" date="07/19/2009">Console: String indexer ("abcd"[2]);  
Console: Assignment operators (i += 1)</Change>
  <Change author="Siegfried Pammer" date="07/19/2009">XamlBinding:
- fixed bug in XmlParser
- added Unit Tests
- implemented highlighting of ignored attributes</Change>
  <Change author="Daniel Grunwald" date="07/19/2009">Fixed "Implement interface" refactoring.</Change>
  <Change author="Daniel Grunwald" date="07/19/2009">AvalonDock bugfix: only middle clicks on a document tab should close the document.</Change>
  <Change author="Daniel Grunwald" date="07/19/2009">Finished port of Windows Forms designer to ITextEditor.</Change>
  <Change author="Daniel Grunwald" date="07/19/2009">CSharpFormattingStrategy: when pressing enter, add '///' inside documentation comments or '" + "' in strings.
Exposed the syntax highlighter to ITextEditor to allow AddIns to efficiently determine if a line starts in a multi-line comment.
Ported "Create property","Create changed event" and "Create on event method" refactorings to ITextEditor.</Change>
  <Change author="David Srbecký" date="07/19/2009">Debugger tests - less verbose - do not show properties that have a default value (false, 0, null, {})</Change>
  <Change author="David Srbecký" date="07/19/2009">Get type of field, property or method return value.</Change>
  <Change author="Siegfried Pammer" date="07/19/2009">XamlBinding:
- added XAML 2009 types</Change>
  <Change author="Siegfried Pammer" date="07/18/2009">XamlBinding: corrected preselection when typing ':'</Change>
  <Change author="Daniel Grunwald" date="07/18/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="07/18/2009">Update to AvalonDock 1.2.2515</Change>
  <Change author="Martin Koníček" date="07/18/2009">- debugger tooltips - changed return type of IDebugger.GetTooltipControl to System.Object</Change>
  <Change author="Daniel Grunwald" date="07/18/2009">Merge 3.0 to trunk.</Change>
  <Change author="Siegfried Pammer" date="07/18/2009">XamlBinding: Added closing tag completion</Change>
  <Change author="Siegfried Pammer" date="07/18/2009">XamlBinding:
- added Unit Tests
- fixed bugs in ResolveContext
- fixed display of attached properties when using element syntax</Change>
  <Change author="Daniel Grunwald" date="07/17/2009">Consistently use "http://schemas.microsoft.com/winfx/2006/xaml/presentation" as WPF XML namespace.</Change>
  <Change author="Daniel Grunwald" date="07/17/2009">Ported BooFormattingStrategy to ITextEditor (fixes forum-9781).</Change>
  <Change author="Siegfried Pammer" date="07/17/2009">XamlBinding:
- improved XamlResolver
- improved CC for markup extensions</Change>
  <Change author="Siegfried Pammer" date="07/17/2009">XamlBinding:
- improved XamlResolver for MarkupExtensions
- bug fix in MarkupExtensionParser
- preselection improved</Change>
  <Change author="Martin Koníček" date="07/17/2009">- Object graph visualizer - tooltips with full text on values too long to fit into graph node</Change>
  <Change author="Siegfried Pammer" date="07/17/2009">XamlBinding: fixed small CC and Highlighting bugs</Change>
  <Change author="Siegfried Pammer" date="07/17/2009">XamlBinding: preselection improvements</Change>
  <Change author="Daniel Grunwald" date="07/16/2009">Added PublicSettingsSingleFileGenerator (forum-8428).</Change>
  <Change author="Siegfried Pammer" date="07/16/2009">XamlBinding: fixed SD2-1546, SD2-1547, SD2-1548</Change>
  <Change author="Siegfried Pammer" date="07/16/2009">XamlBinding: small bug fixes</Change>
  <Change author="Daniel Grunwald" date="07/16/2009">Use whole-word selection when Control is pressed.</Change>
  <Change author="Siegfried Pammer" date="07/16/2009">XamlBinding: fixed bug in Edit Grid Columns And Rows</Change>
  <Change author="Siegfried Pammer" date="07/16/2009">XamlBinding:
improved CC for attached properties and events</Change>
  <Change author="Daniel Grunwald" date="07/15/2009">Replace WorkflowDesigner with simple designer for Workflow Foundation 4.0.</Change>
  <Change author="Siegfried Pammer" date="07/14/2009">Implemented Undo/Redo for EditGridColumnsAndRows</Change>
  <Change author="Tomasz Tretkowski" date="07/14/2009">Cppbinding build events project options.
Application icon selection in the application options tab.</Change>
  <Change author="Siegfried Pammer" date="07/14/2009">XamlBinding:
- improved code completion
- finished "EditGridColumnsAndRowsCommand"</Change>
  <Change author="Tomasz Tretkowski" date="07/13/2009">Solution fix to load multiple platforms solutions
Adding ProjectConfigurations item group in new vcxproj files</Change>
  <Change author="Siegfried Pammer" date="07/12/2009">improved XAML highlighting and code completion</Change>
  <Change author="Siegfried Pammer" date="07/12/2009">Merge 3.0 to trunk.</Change>
  <Change author="Siegfried Pammer" date="07/12/2009">ported Indent and Comment commands to SharpDevelop 4.0</Change>
  <Change author="Siegfried Pammer" date="07/11/2009">- added EditGridColumnsAndRowsCommand
- ported debugger commands in text editor context menu to SharpDevelop 4.0</Change>
  <Change author="Daniel Grunwald" date="07/11/2009">Update dotnet2-copy of NUnit.</Change>
  <Change author="Daniel Grunwald" date="07/11/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="07/11/2009">Delete subtree merge-info, which apparently was added due to SVN bugs.</Change>
  <Change author="Daniel Grunwald" date="07/11/2009">document ILineTracker.SetLineLength</Change>
  <Change author="Siegfried Pammer" date="07/10/2009">XamlBinding:
- improved code completion
- added "Extract properties as style"
- added "Group into" refactorings</Change>
  <Change author="Martin Koníček" date="07/10/2009">- Object graph visualizer - implemented visualization of IList&lt;T&gt; nodes</Change>
  <Change author="Martin Koníček" date="07/10/2009">- Object graph visualizer - implemented edge tooltips</Change>
  <Change author="Martin Koníček" date="07/09/2009">Grid visualizer - values are now displayed as Value.InvokeToString()</Change>
  <Change author="Tomasz Tretkowski" date="07/09/2009">CppBinding moved to ICSharpCode namespace
Preprocessor and linker tabs in project options.</Change>
  <Change author="Martin Koníček" date="07/09/2009">- auto size Name column in node
- rewrote ObjectGraphBuilder so that now property Expressions are not evaluated until rendered</Change>
  <Change author="Martin Koníček" date="07/08/2009">- remember expanded content nodes between debugger steps
- renamed NestedNodeViewModel, PropertyNodeViewModel to ContentNode, ContentPropertyNode</Change>
  <Change author="Tomasz Tretkowski" date="07/07/2009">CppBinding initial release</Change>
  <Change author="Martin Koníček" date="07/07/2009">- refactored ExpandedExpressions</Change>
  <Change author="Martin Koníček" date="07/07/2009">- added FullPath to NestedNodeViewModel to support remembering of expanded content nodes</Change>
  <Change author="Martin Koníček" date="07/07/2009">- node content - added BaseClassNode, NonPublicMembersNode.
- ObjectGraphBuilder builds content using BaseClassNode, NonPublicMembersNode.
- displaying of BaseClassNode, NonPublicMembersNode in NestedNodeViewModel.
</Change>
  <Change author="Martin Koníček" date="07/07/2009">Object graph visualizer - recalculate layout on expand/collapse of content nodes.</Change>
  <Change author="Martin Koníček" date="07/07/2009">PositionedGraphNode - code cleanup.</Change>
  <Change author="Martin Koníček" date="07/06/2009">- ObjectGraphBuilder builds content nodes for base class members.
- Preparation for arrows starting at properties.
</Change>
  <Change author="Tomasz Tretkowski" date="07/06/2009">Handling msbuild4 projects with target platform other than AnyCPU</Change>
  <Change author="Siegfried Pammer" date="07/06/2009">XamlBinding: Added EventSetter completion</Change>
  <Change author="Siegfried Pammer" date="07/06/2009">XamlBinding:
- added icons
- removed "&lt;" from CC entries, it is automatically added at insertion, if needed</Change>
  <Change author="Siegfried Pammer" date="07/06/2009">XAML binding: restricted some XAML attributes on root elements</Change>
  <Change author="Siegfried Pammer" date="07/05/2009">- fixed build
- added GridLength value completion
- enabled XamlColorizer</Change>
  <Change author="Siegfried Pammer" date="07/05/2009">XamlBinding: fixed some minor issues</Change>
  <Change author="Siegfried Pammer" date="07/05/2009">XamlBinding: code clean-up</Change>
  <Change author="Siegfried Pammer" date="07/05/2009">XamlBinding: fixed code completion errors</Change>
  <Change author="Siegfried Pammer" date="07/05/2009">- fixed build</Change>
  <Change author="Siegfried Pammer" date="07/05/2009">XamlBinding:
- added cancellation check to XamlColorizer task
- added completion for collections (for ex. Grid.ColumnDefinions)
- improved context-sensitivity of element completion</Change>
  <Change author="Daniel Grunwald" date="07/04/2009">DocumentHighlighter.GetSpanStack</Change>
  <Change author="Siegfried Pammer" date="07/04/2009">XamlBinding:
- fixed missing class error
- added completion of nested markup extensions</Change>
  <Change author="Siegfried Pammer" date="07/04/2009">XamlBinding:
removed detection of full path, because only last element is needed (CC much faster now)</Change>
  <Change author="Siegfried Pammer" date="07/04/2009">XamlBinding:
- added user-defined naming of event handlers (modifiable through options dialog)</Change>
  <Change author="Siegfried Pammer" date="07/04/2009">XamlBinding:
- added unit tests
- moved XamlColorizer to separate thread
- fixed NullReferenceException in XamlResolver</Change>
  <Change author="Siegfried Pammer" date="07/04/2009">- added ClassInheritanceTreeClassesOnly to IClass
- LocalizeExtension does not crash if resource is not found
- added PositionChanged to ITextEditorCaret</Change>
  <Change author="Siegfried Pammer" date="07/04/2009">enabled CLR2-compatibility mode when launching profiler under CLR4</Change>
  <Change author="Siegfried Pammer" date="07/01/2009">XamlBinding:
- added resource strings
- added code completion options
- small code completion improvements</Change>
  <Change author="Martin Koníček" date="07/01/2009">- lazy evaluation of node content
- better displaying of exceptions</Change>
  <Change author="Martin Koníček" date="06/30/2009">- NestedNodeViewModel and PropertyNodeViewModel for displaying in PositionedGraphNodeControl
- Almost completely rewritten TreeLayouter to support trees of properties</Change>
  <Change author="Daniel Grunwald" date="06/30/2009">using System.Collections.ObjectModel;</Change>
  <Change author="Daniel Grunwald" date="06/30/2009">Convert accessor keys to WPF format.</Change>
  <Change author="Martin Koníček" date="06/30/2009">Implemented PositionedGraphNodeControl, displaying tree of properties instead of flat list.</Change>
  <Change author="Martin Koníček" date="06/29/2009">Fix build.</Change>
  <Change author="Martin Koníček" date="06/29/2009">Commit before refactoring of PositionedGraphNode: from flat list to tree of properties.</Change>
  <Change author="Martin Koníček" date="06/28/2009">Refactoring - renames.</Change>
  <Change author="Martin Koníček" date="06/28/2009">Moved generic data-virtualization classes to Visualizers/Common.</Change>
  <Change author="Martin Koníček" date="06/28/2009">- Refactored ObjectGraphNode - using tree-structured content (like in Debugger.AddIn.TreeModel) instead of flat list of properties.
- Refactored ObjectGraphBuilder.</Change>
  <Change author="Martin Koníček" date="06/28/2009">Commit of minor changes before big refactoring.</Change>
  <Change author="David Srbecký" date="06/24/2009">Console: Pretty print ICollection</Change>
  <Change author="Martin Koníček" date="06/24/2009">Object graph visualizer - scrolling of view area.</Change>
  <Change author="David Srbecký" date="06/24/2009">Console: Binary operations</Change>
  <Change author="Martin Koníček" date="06/23/2009">- Fixed NullReferenceException in DebugType.IsInteger
- Added caching of DebugType.PrimitiveType</Change>
  <Change author="Martin Koníček" date="06/23/2009">Implemented TypeResolver properly, to support eg. finding IList&lt;T&gt; implementation on class MyClass : List&lt;Person&gt;.</Change>
  <Change author="David Srbecký" date="06/23/2009">Console: Indexing using the indexer property</Change>
  <Change author="Martin Koníček" date="06/22/2009">Grid visualizer - implemented EnumerableValuesProvider, now displays lazily loaded grid for IEnumerable&lt;T&gt;.</Change>
  <Change author="David Srbecký" date="06/22/2009">Console: Indexing of arrays using literal integers;  
DebugType.IsInteger and DebugType.IsPrimitive now return true even for integers boxed on the heap</Change>
  <Change author="David Srbecký" date="06/22/2009">Attempt to fix NullReference exception</Change>
  <Change author="David Srbecký" date="06/22/2009">Pretty print array content in debugger console</Change>
  <Change author="David Srbecký" date="06/21/2009">Fix the position of code completion window for non-default DPI</Change>
  <Change author="David Srbecký" date="06/21/2009">Use Cecil instead of my own code to parse the signatures</Change>
  <Change author="David Srbecký" date="06/21/2009">Added the source code of Mono.Cecil to the debugger.  
Some parts of it will be used for signature parsing.</Change>
  <Change author="Siegfried Pammer" date="06/21/2009">reverted old highlighting functionality</Change>
  <Change author="Matt Ward" date="06/21/2009">Fixed XmlParser.GetAttributeNameAtIndex returning an attribute name when inside an element's text child node.</Change>
  <Change author="Siegfried Pammer" date="06/21/2009">fixed Startup</Change>
  <Change author="Siegfried Pammer" date="06/21/2009">Added some XAML PowerToys</Change>
  <Change author="David Srbecký" date="06/20/2009">Some support for creating debug types form signature blobs</Change>
  <Change author="Siegfried Pammer" date="06/19/2009">implemented new XAML code completion features</Change>
  <Change author="David Srbecký" date="06/19/2009">Ignoring "Thread is not in collection" that started to appearing in .NET 4.0;  I still have no idea why it is happening - it seems that the API is reporting exits of threads without announcing their creation.</Change>
  <Change author="David Srbecký" date="06/19/2009">New command line argument - noExceptionBox</Change>
  <Change author="Martin Koníček" date="06/18/2009">Grid visualizer - Preparation for displaying IEnumerable (just implementation of EnumerableValuesProvider is missing)</Change>
  <Change author="David Srbecký" date="06/18/2009">Fixed debugger tests</Change>
  <Change author="David Srbecký" date="06/17/2009">Updates of debugger tests for .NET 4.0</Change>
  <Change author="Martin Koníček" date="06/17/2009">- Grid visualizer - first prototype - shows IList in ListView, lazy loaded as user scrolls
- fixed typo in comment in DebugType.cs</Change>
  <Change author="Martin Koníček" date="06/17/2009">- added Grid visualizer window
- refactored ObjectProperty - will be used in both Grid and Graph visualizers</Change>
  <Change author="Martin Koníček" date="06/17/2009">Moved Visualizers/Graph/Utils to Visualizers/Utils.</Change>
  <Change author="Daniel Grunwald" date="06/14/2009">Add missing GlobalAssemblyInfo.cs references.</Change>
  <Change author="Daniel Grunwald" date="06/14/2009">ComponentInspector does not need log4net.dll anymore.</Change>
  <Change author="Daniel Grunwald" date="06/14/2009">Explicitly set build order to workaround MSBuild bug when compiling SharpDevelop on the command line.</Change>
  <Change author="Daniel Grunwald" date="06/14/2009">Fixed path to REVISION file.</Change>
  <Change author="Daniel Grunwald" date="06/14/2009">ignore failing test</Change>
  <Change author="Daniel Grunwald" date="06/14/2009">Merged dotnet4 into trunk.</Change>
  <Change author="Siegfried Pammer" date="06/13/2009">implemented partial XAML markup extension resolving</Change>
  <Change author="Martin Koníček" date="06/13/2009">Proper expanding of nodes.
Refactored ObjectGraphBuilder to better support expanding of nodes.</Change>
  <Change author="Siegfried Pammer" date="06/13/2009">- fixed display bug in TaskView (off by one error)
- removed dependency on XmlReader from Resolver
- added Unit Tests</Change>
  <Change author="Martin Koníček" date="06/12/2009">ObjectProperty.IsNull to distinguish properties that have null value from those that have value but haven't been expanded yet.</Change>
  <Change author="Siegfried Pammer" date="06/12/2009">fixed Unit Tests</Change>
  <Change author="Daniel Grunwald" date="06/12/2009">Fixed showing completion window when another completion window is already open.</Change>
  <Change author="Martin Koníček" date="06/12/2009">Object graph visualizer - all doubles for communication with Graphviz's Neato are formatted to 3 decimal places - Neato crashed on some inputs, hopefully fixed now.</Change>
  <Change author="Siegfried Pammer" date="06/12/2009">- XAML completion is now a bit less intrusive
- removed code duplication from XmlFormattingStrategy
- fixed bugs in XAML code completion
- added AssemblyName property to IProjectContent
- do not close insight and completion windows when they are still needed
</Change>
  <Change author="Martin Koníček" date="06/11/2009">Object graph visualizer - user can expand/collapse nodes.</Change>
  <Change author="Daniel Grunwald" date="06/08/2009">Update AvalonDock to 1.2.2154.</Change>
  <Change author="Daniel Grunwald" date="06/08/2009">Avoid NullReferenceException when pasting text.</Change>
  <Change author="Matt Ward" date="06/07/2009">XML schema namespaces now visible in completion window.</Change>
  <Change author="David Srbecký" date="06/06/2009">MemoryReadWrite test updated for .NET 4.0 (but it is still ignored by default)</Change>
  <Change author="Daniel Grunwald" date="06/06/2009">Added ICompletionListWindow interface to allow AddIns to control the completion window.</Change>
  <Change author="Matt Ward" date="06/06/2009">Fixed bugs in XmlParser when getting the attribute value and attribute name when the attribute value contains an equals sign.</Change>
  <Change author="Matt Ward" date="06/06/2009">When autocompleting an xml element end tag the cursor is now left inside the element after completion and not put at the end of the inserted end tag.</Change>
  <Change author="Matt Ward" date="06/06/2009">Schema namespace completion window now shown in XML editor.</Change>
  <Change author="Matt Ward" date="06/06/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="06/05/2009">Fixed path for saving dock layout files.</Change>
  <Change author="Martin Koníček" date="06/05/2009">ObjecObject graph visualizer - arrows start at properties.
</Change>
  <Change author="Martin Koníček" date="06/04/2009">ObjecObject graph visualizer - refactored PositionedGraph, preparation for arrows starting at properties, preparation for expanding nodes.
</Change>
  <Change author="Daniel Grunwald" date="06/04/2009">AvalonEdit: allow setting the caret color.</Change>
  <Change author="Daniel Grunwald" date="06/04/2009">Added AutomationPeer for AvalonEdit TextEditor. Based on patch by Amir Tuval.</Change>
  <Change author="Daniel Grunwald" date="06/04/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="06/04/2009">AvalonDock: set Focusable=false for border inside DockablePane</Change>
  <Change author="Daniel Grunwald" date="06/04/2009">AvalonDock: disable Ctrl+Tab and Shift+Tab shortcuts</Change>
  <Change author="Daniel Grunwald" date="06/04/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="06/03/2009">Fixed NullReferenceException when opening a file without syntax highlighting.
Don't switch between tabs inside a WorkbenchWindow when pressing Ctrl+Tab.</Change>
  <Change author="Daniel Grunwald" date="06/03/2009">Fixed exception when deleting a line that contains a bookmark.</Change>
  <Change author="Daniel Grunwald" date="06/03/2009">Implemented ClassMemberBookmarks and NavigationPoints for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="06/03/2009">Remove unused XML-Parser.
Fixed exception when the opening refactoring menu on parameters.</Change>
  <Change author="Sergej Andrejev" date="06/02/2009">ShortcutsManagement options panel
</Change>
  <Change author="Daniel Grunwald" date="06/02/2009">Implemented syntax highlighting in search results pad.</Change>
  <Change author="Daniel Grunwald" date="06/02/2009">AvalonEdit: fixed 'Home' key and CaretPositioningMode.WordStart over line borders.</Change>
  <Change author="Daniel Grunwald" date="06/02/2009">Fixed action="disable" conditions on WPF Menus.
Allow AddIns to choose a free title for searches.</Change>
  <Change author="Daniel Grunwald" date="06/02/2009">Implemented code coverage text markers for AvalonEdit.</Change>
  <Change author="Martin Koníček" date="06/02/2009">ObjecObject graph visualizer - refactored ObjectGraph - ordering of children, preparation for expanding nodes.
</Change>
  <Change author="Daniel Grunwald" date="06/02/2009">Fixed GUID in project reference to XmlEditor.</Change>
  <Change author="Daniel Grunwald" date="06/01/2009">Merge (reintegrate) XmlEditor to trunk.</Change>
  <Change author="Daniel Grunwald" date="06/01/2009">Implemented updating text anchors on text replace operations.</Change>
  <Change author="Daniel Grunwald" date="06/01/2009">AvalonEditViewContent: set TabPageText</Change>
  <Change author="Daniel Grunwald" date="06/01/2009">Implemented the commands in the 'Edit&gt;Format' menu for AvalonEdit.
Allow using 'command' attribute on &lt;MenuItem&gt; with custom routed commands defined in AddIns.
Implemented offset mapping in AvalonEdit. This allows replacing text in the document without removing all text markers from the replaced region.</Change>
  <Change author="Daniel Grunwald" date="06/01/2009">Ported event handler completion to ITextEditor.</Change>
  <Change author="Christoph Wille" date="06/01/2009">Bug fix to svn post commit hook</Change>
  <Change author="Christoph Wille" date="06/01/2009">Updated SVN Post Commit Hook to infer subject names</Change>
  <Change author="Daniel Grunwald" date="05/31/2009">Revert shortcut handling (reverse-merge of all changes from Sergej - r4173,4154,4149-4143,4128,4127).
The new shortcut handling has moved to branches/shortcuts/</Change>
  <Change author="Daniel Grunwald" date="05/31/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="05/31/2009">Move ICSharpCode.SharpDevelop.Dom.IParser to ICSharpCode.SharpDevelop.Project</Change>
  <Change author="Daniel Grunwald" date="05/31/2009">Move code completion types into ICSharpCode.SharpDevelop.Editor.CodeCompletion.</Change>
  <Change author="Daniel Grunwald" date="05/31/2009">'override' completion for AvalonEdit.</Change>
  <Change author="Sergej Andrejev" date="05/31/2009">Fix exceptions when opening new pad from view menu</Change>
  <Change author="Daniel Grunwald" date="05/30/2009">Remove ICSharpCode.TextEditor references from SearchAndReplace.</Change>
  <Change author="Daniel Grunwald" date="05/30/2009">New search results pad.</Change>
  <Change author="Daniel Grunwald" date="05/30/2009">IDocument: moved to ICSharpCode.SharpDevelop (so that all ICSharpCode.SharpDevelop.Editor types are defined in the same assembly).
Added IRefactoringDocument for the places where SharpDevelop.Dom needs access to the document.</Change>
  <Change author="Daniel Grunwald" date="05/30/2009">Use correct colors for DropDownButton on Aero.</Change>
  <Change author="Daniel Grunwald" date="05/30/2009">New Search Results pad.
Add support for DropDownButton in toolbars.</Change>
  <Change author="Martin Koníček" date="05/30/2009">Object graph visualizer - fix bug in TreeLayouter.</Change>
  <Change author="Martin Koníček" date="05/29/2009">Object graph visualizer - animations.</Change>
  <Change author="Sergej Andrejev" date="05/29/2009">GesturesPlaceHolderRegistry and CommandsRegistry fixes</Change>
  <Change author="Sergej Andrejev" date="05/25/2009">Use "+" in serialized shortcut strings. Fix python binding tests</Change>
  <Change author="Sergej Andrejev" date="05/25/2009">Use WPF commands in View menu</Change>
  <Change author="Sergej Andrejev" date="05/25/2009">Fix broken buid</Change>
  <Change author="Sergej Andrejev" date="05/25/2009">Use WPF commands for Build and Run main menus</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">AvalonEdit: split Gui namespace into Editing and Rendering.</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Split AvalonEdit.Gui into Editing and Rendering</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Fixed two editor bugs introduced in revision 4138.
Ask user to save unsaved changes when closing SharpDevelop.</Change>
  <Change author="Matt Ward" date="05/24/2009">XmlParser now handles equals sign inside quotes when checking if cursor is inside an attribute value.</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">CodeEditor is now calling IFormattingStrategy.FormatLine.</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Fixed 'Reset to defaults' in layout combo box.</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Fixed bug that could cause pads to be lost when the layout is changed. (when trying to reopen such a "lost" pad, it would show up with a width of zero)</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Fixed AvalonDock reference in FSharpBinding.</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Project reference to AvalonDock.</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Copy AvalonDock source code into source tree</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Remove AvalonDock.dll</Change>
  <Change author="Sergej Andrejev" date="05/24/2009">Missing files from initial commands registry implementation</Change>
  <Change author="Sergej Andrejev" date="05/24/2009">Initial commands registry implementation</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Ignore broken test.</Change>
  <Change author="Daniel Grunwald" date="05/24/2009">Merge bugfixes from revision 4108 to trunk:
 WpfWorkbench: fixed MainWin32Window property
 NRefactoryCodeCompletionBinding: fixed NullReferenceException in context completion for enums
 EditingCommandHandler: support copying of whole lines</Change>
  <Change author="Siegfried Pammer" date="05/23/2009">improved markup extension completion</Change>
  <Change author="Siegfried Pammer" date="05/22/2009">- added tests
- fixed build
- ran FxCop on XamlBinding and fixed some problems</Change>
  <Change author="Martin Koníček" date="05/22/2009">ObjectGraphBuilder uses RuntimeHelpers.GetHashCode.</Change>
  <Change author="Siegfried Pammer" date="05/22/2009">- XAML binding clean up
- simplified code
- most of completion now works through CtrlSpace</Change>
  <Change author="Daniel Grunwald" date="05/22/2009">Remove obsolete members.</Change>
  <Change author="Daniel Grunwald" date="05/20/2009">Refactoring menu for AvalonEdit</Change>
  <Change author="Daniel Grunwald" date="05/20/2009">Fixed icons in class browser.</Change>
  <Change author="Daniel Grunwald" date="05/20/2009">Context menu for AvalonEdit</Change>
  <Change author="Daniel Grunwald" date="05/18/2009">Merge 3.0 to trunk.</Change>
  <Change author="Martin Koníček" date="05/18/2009">Object graph visualizer - made neato.exe console window invisible.</Change>
  <Change author="Martin Koníček" date="05/18/2009">Graph visualizer - edges are routed by Graphviz's neato.exe and drawn by WPF.</Change>
  <Change author="Daniel Grunwald" date="05/15/2009">Implemented Indexer Insight for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="05/15/2009">Show insight window when pressing comma inside a method call.</Change>
  <Change author="Martin Koníček" date="05/09/2009">Object graph visualizer - added ComboBox for changing layout direction.</Change>
  <Change author="Daniel Grunwald" date="05/08/2009">Comment out new VB unit tests - VBFormattingStrategy is not yet ported to AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="05/08/2009">Merge 3.0 to trunk.</Change>
  <Change author="Ivan Shumilin" date="05/05/2009">Bug fixes for SharpTreeView.</Change>
  <Change author="Ivan Shumilin" date="05/05/2009">Override Platform variable to avoid MSB4126 error on some machines. (The specified solution configuration "Debug|MCD" is invalid).</Change>
  <Change author="Martin Koníček" date="05/05/2009">Initial import of object graph visualizer.</Change>
  <Change author="Martin Koníček" date="05/04/2009">Extended MethodInfo.GetBackingField to work for getters of Automatic properties.</Change>
  <Change author="Daniel Grunwald" date="04/29/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="04/29/2009">GetNextCaretPosition methods: Use enum LogicalDirection instead of bool backwards.</Change>
  <Change author="Daniel Grunwald" date="04/29/2009">Fixed unit tests (TextEditorOptions.GetIndentationString was changed to take 1-based column numbers).</Change>
  <Change author="Daniel Grunwald" date="04/29/2009">Reimplemented method insight for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="04/29/2009">AvalonEdit Insight Window</Change>
  <Change author="Daniel Grunwald" date="04/28/2009">Support IconBarMargin in split view.</Change>
  <Change author="Daniel Grunwald" date="04/28/2009">Implemented AvalonEdit split view</Change>
  <Change author="Daniel Grunwald" date="04/28/2009">Document CompletionWindow.StartOffset and EndOffset.</Change>
  <Change author="Daniel Grunwald" date="04/25/2009">Forgot to commit a file.</Change>
  <Change author="Daniel Grunwald" date="04/25/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="04/25/2009">Rename Content property back to Control (IViewContent, IPadContent, IOptionsPanel) to prevent the C# compiler from automatically picking up a Content property from a base class.
The name 'Content' could result in a hard to understand exception 'Specified element is already the logical child of another element. Disconnect it first.' when implementing IOptionPanel in a WPF UserControl. See forum-9233.</Change>
  <Change author="Daniel Grunwald" date="04/25/2009">Merged 3.0 to trunk.
</Change>
  <Change author="Daniel Grunwald" date="04/22/2009">Update to AvalonDock 1.2.2104.
Fixed bugs in new QuickClassBrowser.</Change>
  <Change author="Ivan Shumilin" date="04/20/2009">Project template for Silverlight application.</Change>
  <Change author="Daniel Grunwald" date="04/18/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="04/18/2009">AvalonEdit: add quick class browser</Change>
  <Change author="Siegfried Pammer" date="04/16/2009">fixed Unit Tests
implemented first part of x:Static completion</Change>
  <Change author="Daniel Grunwald" date="04/16/2009">Fixed compile errors.</Change>
  <Change author="Daniel Grunwald" date="04/16/2009">Organize files in ICSharpCode.SharpDevelop.Editor.</Change>
  <Change author="Siegfried Pammer" date="04/16/2009">- modified completion action of DefaultCompletionItem and CodeCompletionItem to set EndOffset to the end of the inserted text
- Added Unit Tests
- Improved code completion for MarkupExtensions
- removed code duplication</Change>
  <Change author="Daniel Grunwald" date="04/16/2009">ITextEditor: moved to namespace ICSharpCode.SharpDevelop.Editor.
Added support for anchors and text markers.</Change>
  <Change author="Daniel Grunwald" date="04/12/2009">Bookmark/Breakpoint support for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="04/12/2009">Changed IPositionable interface and FileService.JumpToFilePosition to work with 1-based line and column numbers.</Change>
  <Change author="Daniel Grunwald" date="04/12/2009">Allow using icons in code completion items.
ClassBrowserIconService now provides both WinForms and WPF images.
Some refactorings are now using the ITextEditor interface.
Started working on bookmark support for AvalonEdit.</Change>
  <Change author="Matt Ward" date="04/11/2009">Fixed bug in XmlParser.IsAttributeValueChar not recognising valid characters as being valid for an attribute value.</Change>
  <Change author="Daniel Grunwald" date="04/11/2009">implemented MarkupExtensionTokenizer.NextToken</Change>
  <Change author="Daniel Grunwald" date="04/11/2009">Update to AvalonDock 1.2.2083.</Change>
  <Change author="Siegfried Pammer" date="04/11/2009">Added MarkupExtensionTokenizer and MarkupExtensionParser</Change>
  <Change author="Siegfried Pammer" date="04/11/2009">implementation of Attached Events and Attached Properties</Change>
  <Change author="Daniel Grunwald" date="04/11/2009">Don't initialize pads before the docking layout has been loaded.</Change>
  <Change author="Daniel Grunwald" date="04/11/2009">Merged 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="04/11/2009">AvalonDockLayout: Fixed exception 'Unable to deserialize a docking layout while DockingManager control is unloaded'.
XML documentation improvements.</Change>
  <Change author="Siegfried Pammer" date="04/10/2009">- Added TextView to Services
- implemented highlighting for events, properties and namespace declarations</Change>
  <Change author="Siegfried Pammer" date="04/10/2009">XamlColorizer improvements
Completion improvements</Change>
  <Change author="Daniel Grunwald" date="04/10/2009">AvalonEditViewContent: implement ITextEditorProvider.</Change>
  <Change author="Ivan Shumilin" date="04/07/2009">Fix setup.</Change>
  <Change author="Ivan Shumilin" date="04/07/2009">SharpTreeView.</Change>
  <Change author="Siegfried Pammer" date="04/07/2009">improvements in XAML binding
added Tests for XAML binding</Change>
  <Change author="Daniel Grunwald" date="04/06/2009">Merged 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="04/06/2009">Added some comments.</Change>
  <Change author="Christoph Wille" date="04/06/2009">Change version to 4.0 in document (mainly test checkin for SVN 1.6 sharded repository)</Change>
  <Change author="Siegfried Pammer" date="04/05/2009">Removed CreateEventHandler from RefactoringProvider
added insertion of new event handlers
existing event handlers with matching signature are included in code completion</Change>
  <Change author="Siegfried Pammer" date="04/05/2009">added tests in XamlBinding
bugfixes in XmlParser + Tests
new functionality in RefactoringProvider</Change>
  <Change author="Siegfried Pammer" date="04/05/2009">architectural changes in XamlBinding</Change>
  <Change author="Daniel Grunwald" date="03/30/2009">Allow opening a new code completion window inside ICompletionList.Complete() method.</Change>
  <Change author="Daniel Grunwald" date="03/30/2009">AvalonEdit: Fixed bug in GetIndentation that could mess up text when pressing Enter.
Fixed exception when opening a file for which no syntax highlighting is available.</Change>
  <Change author="Daniel Grunwald" date="03/27/2009">Commented out VBNetBinding FormattingStrategy tests - the VB formatting strategy is currently disabled because it's not yet ported to AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="03/27/2009">Smart C# indentation now works with AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="03/27/2009">AvalonEdit: when creating a new TextEditor instance, create a new TextDocument. Fixed bugs when setting Document to null.</Change>
  <Change author="Daniel Grunwald" date="03/27/2009">Allow completion list and items to handle insertion of text.</Change>
  <Change author="Siegfried Pammer" date="03/27/2009">ported XamlBinding to Mirador</Change>
  <Change author="Daniel Grunwald" date="03/26/2009">AvalonEdit: added support for preselection.</Change>
  <Change author="Daniel Grunwald" date="03/26/2009">Implemented Ctrl+Space completion for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="03/26/2009">Fixed exception when hovering mouse outside of document.
Fixed exception when menu has no subitems.
Fixed opening options dialog.</Change>
  <Change author="Daniel Grunwald" date="03/26/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="03/26/2009">Cut/Copy/Paste: use WPF routed commands.</Change>
  <Change author="Daniel Grunwald" date="03/25/2009">IMementoCapable support is back.
AvalonEdit: Fixed some focus issues; fixed crash when control is allowed to grow to infinite size.</Change>
  <Change author="Daniel Grunwald" date="03/25/2009">AvalonEdit: fixed cyclic reference in type initializers</Change>
  <Change author="Daniel Grunwald" date="03/24/2009">AvalonEdit: tooltips.</Change>
  <Change author="Daniel Grunwald" date="03/24/2009">AvalonEdit code completion</Change>
  <Change author="Daniel Grunwald" date="03/23/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="03/22/2009">AvalonEdit: display non-printable characters using their name or hex code.
Improved dot code completion (sort completion entries, group overloaded methods).</Change>
  <Change author="Daniel Grunwald" date="03/22/2009">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="03/22/2009">Fixed build, more improvements to GetNextCaretPosition / whole-word selection.</Change>
  <Change author="Daniel Grunwald" date="03/22/2009">Improved GetNextCaretPosition - placed word borders at line starts and ends.
Implemented GetWordBeforeCaret().</Change>
  <Change author="Daniel Grunwald" date="03/21/2009">AvalonEdit code completion.</Change>
  <Change author="Daniel Grunwald" date="03/20/2009">Improvements to AvalonEdit CompletionWindow. Implemented TextAreaInputHandler.</Change>
  <Change author="Daniel Grunwald" date="03/19/2009">AvalonEdit: implemented CompletionWindow</Change>
  <Change author="Daniel Grunwald" date="03/18/2009">Add CodeCompletionItemProvider (editor-independent version of CodeCompletionDataProvider)</Change>
  <Change author="Daniel Grunwald" date="03/18/2009">ITextEditor interface: caret line/column now starts counting at 1.</Change>
  <Change author="Daniel Grunwald" date="03/18/2009">Started replacing ICSharpCode.TextEditor references in SharpDevelop API with new ITextEditor interface.</Change>
  <Change author="Daniel Grunwald" date="03/17/2009">CodeCompletionWindow for AvalonEdit</Change>
  <Change author="Daniel Grunwald" date="03/17/2009">AvalonEdit: Copy text as HTML to clipboard.</Change>
  <Change author="Daniel Grunwald" date="03/17/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="03/09/2009">Fixed two bugs introduced by Layers.</Change>
  <Change author="Daniel Grunwald" date="03/09/2009">AvalonEdit: Minor bugfixes / API improvements.</Change>
  <Change author="Daniel Grunwald" date="03/09/2009">AvalonEdit: add support for layers (gives users more control about z-order than adorners).
Fixed bugs in text drag+drop.</Change>
  <Change author="Daniel Grunwald" date="03/08/2009">When moving text using drag'n'drop, combine text removal on drag and text insertion on drop into a single undo group.</Change>
  <Change author="Daniel Grunwald" date="03/08/2009">Normalize newlines on copy/paste. Moved LineManager.NextDelimiter into NewLineFinder.</Change>
  <Change author="Daniel Grunwald" date="03/08/2009">More changes to the handling of invalid visual lines.</Change>
  <Change author="Daniel Grunwald" date="03/07/2009">Made AvalonEdit work without 'DoEvents'.</Change>
  <Change author="Daniel Grunwald" date="02/18/2009">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="02/18/2009">Removed some obsolete methods.</Change>
  <Change author="Daniel Grunwald" date="02/10/2009">Merge 3.0 into trunk.</Change>
  <Change author="Daniel Grunwald" date="01/15/2009">Make FormattedTextElement and FormattedTextRun public.</Change>
  <Change author="Ivan Shumilin" date="12/31/2008">Save current work.</Change>
  <Change author="Daniel Grunwald" date="12/28/2008">Merged 3.0 into trunk.</Change>
  <Change author="Daniel Grunwald" date="12/28/2008">FxCop fixes for AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="12/19/2008">AvalonEdit: handle Shift-Tab</Change>
  <Change author="Daniel Grunwald" date="12/07/2008">AvalonEdit syntax highlighter: merge changes in V1 XML Schema, use atomic groups for the keyword regex.</Change>
  <Change author="Daniel Grunwald" date="12/06/2008">Merged 3.0 into trunk.</Change>
  <Change author="Robert Pickering" date="12/03/2008">Undo changes, as these should have been applied to sharpdevelop30 branch.</Change>
  <Change author="Robert Pickering" date="12/03/2008">Upgrade F# binding to use version 1.9.6.2 (which comes with a msbuild provider so the custom one is no longer needed).</Change>
  <Change author="Matt Ward" date="11/09/2008">Changed component ids for desktop and start menu shortcuts so uninstalling SharpDevelop 4.0 removes these shortcuts if SharpDevelop 3.0 is also installed.</Change>
  <Change author="Daniel Grunwald" date="11/09/2008">Add AvalonEdit.AddIn to setup</Change>
  <Change author="Daniel Grunwald" date="11/08/2008">Fixed exception in syntax highlighter when slowly scrolling to the end of the document (so that the span stack is set for all but the last line).</Change>
  <Change author="Daniel Grunwald" date="11/08/2008">Update AvalonDock to 1.1.1714, fixed focus bug when there are secondary view contents.</Change>
  <Change author="Daniel Grunwald" date="11/08/2008">Fixed build</Change>
  <Change author="Daniel Grunwald" date="11/08/2008">Add AvalonEdit to setup.
Fixed text selection at end of document.</Change>
  <Change author="Daniel Grunwald" date="11/07/2008">Add AvalonEdit.</Change>
  <Change author="Daniel Grunwald" date="10/29/2008">Removed XamlBinding+WpfDesign from 4.0 (they will be added back later)</Change>
  <Change author="Daniel Grunwald" date="10/28/2008">Merge 3.0 into trunk.</Change>
  <Change author="Daniel Grunwald" date="10/01/2008">Implemented SplitButton.</Change>
  <Change author="Daniel Grunwald" date="09/30/2008">Removed failing unit test</Change>
  <Change author="Daniel Grunwald" date="09/30/2008">Remove highlighting editor.</Change>
  <Change author="Daniel Grunwald" date="09/29/2008">Host option panels in WPF window, allow WPF option panels.</Change>
  <Change author="Daniel Grunwald" date="09/29/2008">Update to AvalonDock 1.1.1692.</Change>
  <Change author="Daniel Grunwald" date="09/29/2008">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="09/10/2008">Merge 3.0 into trunk.</Change>
  <Change author="Daniel Grunwald" date="09/05/2008">Upgrade AvalonDock to 1.1.1648.</Change>
  <Change author="Daniel Grunwald" date="09/04/2008">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="09/04/2008">Put a Hyperlink into the startpage ListView.
Rename Foreach extension method to ForEach (to be consistent with List&lt;T&gt;).</Change>
  <Change author="Daniel Grunwald" date="09/04/2008">Add WPF startpage.
Fixed XmlEditor unit tests (Form.Show(owner) throws an exception when called in a non-interactive windows service, but Form.Show() works)</Change>
  <Change author="Daniel Grunwald" date="09/04/2008">Run WixBinding tests as STA (fixes unit test failure).</Change>
  <Change author="Daniel Grunwald" date="09/04/2008">Fixed setup.</Change>
  <Change author="Daniel Grunwald" date="09/04/2008">Fixed build.</Change>
  <Change author="Daniel Grunwald" date="09/04/2008">Merge 3.0wpf into trunk.</Change>
  <Change author="Daniel Grunwald" date="09/04/2008">Remove incorrect subtree mergeinfo.</Change>
  <Change author="Daniel Grunwald" date="09/03/2008">Merge 3.0 to trunk.</Change>
  <Change author="Daniel Grunwald" date="08/30/2008">Mark changelog start for 4.0</Change>
  <Change author="Daniel Grunwald" date="08/18/2008">Merge 3.0 into trunk.</Change>
  <Change author="Daniel Grunwald" date="08/18/2008">Prevent revision 3395 from merging to trunk.</Change>
  <Change author="Matt Ward" date="08/17/2008">SharpDevelop.Setup.wixproj.user file added again so the setup can be built straight away from source code.</Change>
  <Change author="Matt Ward" date="08/17/2008">Removed SharpDevelop.Setup.wixproj.user since it is breaking the build.</Change>
  <Change author="Matt Ward" date="08/17/2008">Allow side by side installations of SharpDevelop 3.0 and 4.0.</Change>
  <Change author="Matt Ward" date="08/17/2008">Added SharpDevelop.Setup.wixproj.user file so the installer can be built straight away without having to re-generate this .user file.</Change>
  <Change author="Daniel Grunwald" date="08/17/2008">Mark trunk as version 4.0.</Change>
  <Change author="Christoph Wille" date="08/17/2008">Setup updated for 4.0</Change>
  <Change author="Christoph Wille" date="08/17/2008">Update post commit hook for new branches</Change>
  <Change author="Christoph Wille" date="08/17/2008">4.0 designation for build artefacts</Change>
</ChangeLog>