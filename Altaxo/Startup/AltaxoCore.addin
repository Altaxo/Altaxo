<AddIn name        = "SharpDevelop"
       author      = "Mike Krueger"
       copyright   = "prj:///doc/copyright.txt"
       url         = "http://www.icsharpcode.net"
       description = "SharpDevelop main module"
       addInManagerHidden = "true">
	
	<Manifest>
		<Identity name = "SharpDevelop" version = "@SharpDevelopCoreVersion"/>
	</Manifest>
	
	<Runtime>
    <Import assembly=":ICSharpCode.SharpDevelop">
      <ConditionEvaluator name="ActiveContentExtension" class="ICSharpCode.SharpDevelop.ActiveContentExtensionConditionEvaluator"/>
      <ConditionEvaluator name="ActiveViewContentUntitled" class="ICSharpCode.SharpDevelop.ActiveViewContentUntitledConditionEvaluator"/>
      <ConditionEvaluator name="ActiveWindowState" class="ICSharpCode.SharpDevelop.ActiveWindowStateConditionEvaluator"/>
      <ConditionEvaluator name="SolutionOpen" class="ICSharpCode.SharpDevelop.SolutionOpenConditionEvaluator"/>
      <ConditionEvaluator name="DebuggerSupports" class="ICSharpCode.SharpDevelop.Debugging.DebuggerSupportsConditionEvaluator"/>
      <ConditionEvaluator name="IsProcessRunning" class="ICSharpCode.SharpDevelop.Debugging.IsProcessRunningConditionEvaluator"/>
      <ConditionEvaluator name="OpenWindowState" class="ICSharpCode.SharpDevelop.OpenWindowStateConditionEvaluator"/>
      <ConditionEvaluator name="WindowActive" class="ICSharpCode.SharpDevelop.WindowActiveConditionEvaluator"/>
      <ConditionEvaluator name="WindowOpen" class="ICSharpCode.SharpDevelop.WindowOpenConditionEvaluator"/>
      <ConditionEvaluator name="ProjectActive" class="ICSharpCode.SharpDevelop.ProjectActiveConditionEvaluator"/>
      <ConditionEvaluator name="TextContent" class="ICSharpCode.SharpDevelop.DefaultEditor.Conditions.TextContentConditionEvaluator"/>
      <ConditionEvaluator name="BrowserLocation" class="ICSharpCode.SharpDevelop.BrowserDisplayBinding.BrowserLocationConditionEvaluator"/>
      <ConditionEvaluator name="RefactoringProviderSupports" class="ICSharpCode.SharpDevelop.Refactoring.RefactoringProviderSupportsConditionEvaluator"/>
      <ConditionEvaluator name="CanNavigateBack" class="ICSharpCode.SharpDevelop.CanNavigateBackConditionEvaluator"/>
      <ConditionEvaluator name="CanNavigateForward" class="ICSharpCode.SharpDevelop.CanNavigateForwardConditionEvaluator"/>
      <ConditionEvaluator name="CompareProjectProperty" class="ICSharpCode.SharpDevelop.CompareProjectPropertyConditionEvaluator"/>

      <Doozer name="DialogPanel" class="ICSharpCode.SharpDevelop.DialogPanelDoozer"/>
      <Doozer name="DisplayBinding" class="ICSharpCode.SharpDevelop.DisplayBindingDoozer"/>
      <Doozer name="Pad" class="ICSharpCode.SharpDevelop.PadDoozer"/>
      <Doozer name="LanguageBinding" class="ICSharpCode.SharpDevelop.LanguageBindingDoozer"/>
      <Doozer name="Parser" class="ICSharpCode.SharpDevelop.ParserDoozer"/>
      <Doozer name="ProjectContentRegistry" class="ICSharpCode.SharpDevelop.ProjectContentRegistryDoozer"/>
      <Doozer name="EditAction" class="ICSharpCode.SharpDevelop.DefaultEditor.Codons.EditActionDoozer"/>
      <Doozer name="SyntaxMode" class="ICSharpCode.SharpDevelop.DefaultEditor.Codons.SyntaxModeDoozer"/>
      <Doozer name="BrowserSchemeExtension" class="ICSharpCode.SharpDevelop.BrowserDisplayBinding.SchemeExtensionDoozer"/>
      <Doozer name="CodeCompletionBinding" class="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.CodeCompletionBindingDoozer"/>
      <Doozer name="Debugger" class="ICSharpCode.SharpDevelop.Debugging.DebuggerDoozer"/>
      <Doozer name="Directory" class="ICSharpCode.SharpDevelop.DirectoryDoozer"/>
      <Doozer name="TaskBoundAdditionalLogger" class="ICSharpCode.SharpDevelop.Project.TaskBoundAdditionalLoggerDoozer"/>
    </Import>
    <Import assembly=":ICSharpCode.TextEditor"/>
    <Import assembly=":AltaxoBase"/>
    <Import assembly=":AltaxoSDGui">
      <ConditionEvaluator name="SelectedDataColumns" class="Altaxo.Worksheet.Commands.SelectedDataConditionEvaluator"/>
      <ConditionEvaluator name="SelectedPropertyColumns" class="Altaxo.Worksheet.Commands.SelectedPropertyConditionEvaluator"/>
      <ConditionEvaluator name="ContainsPLSModelData" class="Altaxo.Worksheet.Commands.PLSModelConditionEvaluator"/>
      <Doozer name="Texture" class="Altaxo.Main.TextureDoozer"/>
    </Import>
	</Runtime>

  <!-- Altaxo stuff -->

  <Path name = "/Altaxo/Workbench/Pads">

    <Pad id       = "SideBar"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.ToolbarLabel}"
		     icon     = "PadIcons.Toolbar"
		     shortcut = "Control|Alt|X"
		     class    = "ICSharpCode.SharpDevelop.Gui.SideBarView"/>

    <Pad id       = "FileScout"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.FileScoutLabel}"
		     icon     = "PadIcons.FileBrowser"
		     shortcut = "Control|Alt|F"
		     class    = "Altaxo.Gui.Pads.FileScout"/>

    <Pad id       = "AltaxoProjectScout"
        category = "Main"
        title    = "${res:MainWindow.Windows.ProjectScoutLabel}"
        icon     = "PadIcons.ProjectBrowser"
        shortcut = "Control|Alt|P"
        class    = "Altaxo.Gui.Pads.ProjectScout"/>

    <Pad id       = "AltaxoOutputWindow"
        category = "Main"
        title    = "${res:MainWindow.Windows.OutputWindow}"
        icon     = "PadIcons.Output"
        shortcut = "Control|Alt|O"
        precreated ="true" 
        class    = "Altaxo.Gui.Pads.OutputWindowController"/>

    <Pad id       = "AltaxoDataDisplayWindow"
        category = "Main"
        title    = "${res:MainWindow.Windows.DataDisplayWindow}"
        icon     = "Icons.16x16.ReadData"
        shortcut = "Control|Alt|D"
        precreated ="true" 
        class    = "Altaxo.Gui.Pads.DataDisplayController"/>

  </Path>

  <Path name = "/Altaxo/Workbench/MainMenu">
    <!-- File menu -->
    <MenuItem id="File" label="${res:XML.MainMenu.FileMenu}" type="Menu">
      <MenuItem id="New" label="${res:XML.MainMenu.FileMenu.New}" type="Menu">
        <MenuItem id="StandardWorksheet" label="${res:XML.MainMenu.FileMenu.New.StandardWorksheet}"
					icon="Icons.16x16.StandardWorksheet" description="${res:XML.MainMenu.FileMenu.New.StandardWorksheet.Description}"
					shortcut="Control|W" class="Altaxo.Main.Commands.CreateNewStandardWorksheet" />
        <MenuItem id="EmptyWorksheet" label="${res:XML.MainMenu.FileMenu.New.Worksheet}" icon="Icons.16x16.EmptyWorksheet"
					description="${res:XML.MainMenu.FileMenu.New.Worksheet.Description}" shortcut="Control|E"
					class="Altaxo.Main.Commands.CreateNewWorksheet" />
        <MenuItem id="Graph" label="${res:XML.MainMenu.FileMenu.New.Graph}" icon="Icons.16x16.PlotLineScatter"
					description="${res:XML.MainMenu.FileMenu.New.Graph.Description}" shortcut="Control|G"
					class="Altaxo.Main.Commands.CreateNewGraph" />
        <MenuItem id="WksGraphFromFile" label="${res:XML.MainMenu.FileMenu.New.WksGraphFromFile}"
					icon="Icons.16x16.NewDocumentIcon" description="${res:XML.MainMenu.FileMenu.New.WksGraphFromFile.Description}"
					shortcut="Control|N" class="Altaxo.Main.Commands.CreateNewWorksheetOrGraphFromFile" />
        <MenuItem id="InstanceScript" label="${res:XML.MainMenu.FileMenu.New.InstanceScript}"
					icon="Icons.16x16.NewDocumentIcon" description="${res:XML.MainMenu.FileMenu.New.InstanceScript.Description}"
					class="Altaxo.Main.Commands.NewInstanceScript" />
        <MenuItem id="File" label="${res:XML.MainMenu.FileMenu.New.File}" icon="Icons.16x16.NewDocumentIcon"
					description="${res:XML.MainMenu.FileMenu.New.File.Description}" shortcut="Control|N" class="ICSharpCode.SharpDevelop.Commands.CreateNewFile" />
      </MenuItem>
      <MenuItem id="Open" label="${res:XML.MainMenu.FileMenu.Open}" icon="Icons.16x16.OpenProjectIcon"
				description="${res:XML.MainMenu.FileMenu.Open.Description}" shortcut="Control|O" class="Altaxo.Main.Commands.FileOpen" />
      <MenuItem id="Close" label="${res:XML.MainMenu.FileMenu.Close}" icon="Icons.16x16.CloseAllDocuments"
				description="${res:XML.MainMenu.FileMenu.Close.Desription}" class="Altaxo.Main.Commands.CloseProject" />
      <MenuItem id="CloseSeparator" type = "Separator"/>
      <MenuItem id="SaveProject" label="${res:XML.MainMenu.FileMenu.SaveProject}" icon="Icons.16x16.SaveAllIcon"
				description="${res:XML.MainMenu.FileMenu.SaveProject.Description}" shortcut="Control|S"
				class="Altaxo.Main.Commands.FileSave" />
      <MenuItem id="SaveProjectAs" label="${res:XML.MainMenu.FileMenu.SaveProjectAs}" icon="Icons.16x16.SaveAllIcon"
				description="${res:XML.MainMenu.FileMenu.SaveProjectAs.Description}" class="Altaxo.Main.Commands.FileSaveAs" />
      <MenuItem id="SaveProjectSeparator" type = "Separator"/>
      <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Exclude">
        <MenuItem id="SaveWorksheetAs" label="${res:XML.MainMenu.FileMenu.SaveWorksheetAs}" icon="Icons.16x16.SaveIcon"
					description="${res:XML.MainMenu.FileMenu.SaveWorksheetAs.Description}" class="Altaxo.Worksheet.Commands.SaveAs" />
        <MenuItem id="SaveWorksheetAsTemplate" label="${res:XML.MainMenu.FileMenu.SaveWorksheetAsTemplate}"
					icon="Icons.16x16.SaveIcon" description="${res:XML.MainMenu.FileMenu.SaveWorksheetAsTemplate.Description}"
					class="Altaxo.Worksheet.Commands.SaveAsTemplate" />
      </Condition>
      <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Exclude">
        <MenuItem id="SaveGraphAsTemplate" label="${res:XML.MainMenu.FileMenu.SaveGraphAsTemplate}"
					icon="Icons.16x16.NewDocumentIcon" description="${res:XML.MainMenu.FileMenu.SaveGraphAsTemplate.Description}"
					class="Altaxo.Graph.Commands.SaveGraphAsTemplate" />
      </Condition>
      <MenuItem id="SaveWindowSeparator"  type = "Separator"/>
      <MenuItem id="PrintSeparator" type = "Separator"/>
      <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Exclude">
        <MenuItem id="GraphPageSetup" label="${res:XML.MainMenu.FileMenu.PageSetup}" icon="Icons.16x16.NewDocumentIcon"
					description="${res:XML.MainMenu.FileMenu.PageSetup.Description}" class="Altaxo.Graph.Commands.PageSetup" />
        <MenuItem id="GraphPrintPreview" label="${res:XML.MainMenu.FileMenu.PrintPreview}" icon="Icons.16x16.PreView"
					description="${res:XML.MainMenu.FileMenu.PrintPreview.Description}" class="Altaxo.Graph.Commands.PrintPreview" />
        <MenuItem id="GraphPrint" label="${res:XML.MainMenu.FileMenu.Print}" icon="Icons.16x16.Printer"
					description="${res:XML.MainMenu.FileMenu.Print.Description}" class="Altaxo.Graph.Commands.Print" />
      </Condition>
      <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Exclude">
        <MenuItem id="ImportExportSeparator" type = "Separator"/>
        <MenuItem id="Import" label="${res:XML.MainMenu.FileMenu.Import}" type="Menu">
          <MenuItem id="WorksheetImportAscii" label="${res:XML.MainMenu.FileMenu.Import.Ascii}" icon="Icons.16x16.ImportAscii"
						description="${res:XML.MainMenu.FileMenu.Import.Ascii.Description}" class="Altaxo.Worksheet.Commands.ImportAscii" />
          <MenuItem id="WorksheetImportAsciiSingleWks" label="${res:XML.MainMenu.FileMenu.Import.AsciiSingleWorksheet}" icon="Icons.16x16.ImportAscii"
						description="${res:XML.MainMenu.FileMenu.Import.AsciiSingleWorksheet.Description}" class="Altaxo.Worksheet.Commands.ImportAsciiInSingleWorksheet" />
          <MenuItem id="WorksheetImportGalacticSPC" label="${res:XML.MainMenu.FileMenu.Import.GalacticSPC}"
						icon="Icons.16x16.NewDocumentIcon" description="${res:XML.MainMenu.FileMenu.Import.GalacticSPC.Description}"
						class="Altaxo.Worksheet.Commands.ImportGalacticSPC" />
          <MenuItem id="WorksheetImportOriginOpj" label="${res:XML.MainMenu.FileMenu.Import.OriginOpj}"
						icon="Icons.16x16.NewDocumentIcon" description="${res:XML.MainMenu.FileMenu.Import.OriginOpj.Description}"
						class="Altaxo.Main.Commands.FileImportOriginOpj" />
          <MenuItem id="WorksheetImportImage" label="${res:XML.MainMenu.FileMenu.Import.ImageData}"
						icon="Icons.16x16.NewDocumentIcon" description="${res:XML.MainMenu.FileMenu.Import.ImageData.Description}"
						class="Altaxo.Worksheet.Commands.ImportImage" />
        </MenuItem>
        <MenuItem id="Export" label="${res:XML.MainMenu.FileMenu.Export}" type="Menu">
          <MenuItem id="WorksheetExportAscii" label="${res:XML.MainMenu.FileMenu.Export.Ascii}" icon="Icons.16x16.NewDocumentIcon"
						description="${res:XML.MainMenu.FileMenu.Export.Ascii.Description}" class="Altaxo.Worksheet.Commands.ExportAscii" />
          <MenuItem id="WorksheetExportGalacticSPC" label="${res:XML.MainMenu.FileMenu.Export.GalacticSPC}"
						icon="Icons.16x16.NewDocumentIcon" description="${res:XML.MainMenu.FileMenu.Export.GalacticSPC.Description}"
						class="Altaxo.Worksheet.Commands.ExportGalacticSPC" />
        </MenuItem>
      </Condition>
      <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Exclude">
        <MenuItem id="GraphImportExportSeparator"  type = "Separator"/>
        <MenuItem id="GraphExport" label="${res:XML.MainMenu.FileMenu.Export}" type="Menu">
          <MenuItem id="GraphExportMetafile" label="${res:XML.MainMenu.FileMenu.Export.WindowsMetaFile}" icon="Icons.16x16.NewDocumentIcon"
						description="${res:XML.MainMenu.FileMenu.Export.WindowsMetaFile.Description}" class="Altaxo.Graph.Commands.FileExportMetafile" />
          <MenuItem id="GraphExportTiff" label="${res:XML.MainMenu.FileMenu.Export.BitmapTiffFile}" icon="Icons.16x16.NewDocumentIcon"
						description="${res:XML.MainMenu.FileMenu.Export.BitmapTiffFile.Description}" class="Altaxo.Graph.Commands.FileExportTiff" />
        </MenuItem>
      </Condition>

      <MenuItem id = "RecentProjects" attribute = "RecentProjects" label = "${res:XML.MainMenu.FileMenu.RecentProjects}" type="Menu">
        <MenuItem id = "RecentProjectsBuilder" type = "Builder" class = "Altaxo.Main.Commands.RecentProjectsMenuBuilder" />
        <MenuItem id = "RecentProjectsSeparator" type = "Separator"  />
        <MenuItem id = "ClearRecentFiles"
				          label = "${res:XML.MainMenu.FileMenu.ClearRecentProjects}"
				          class = "ICSharpCode.SharpDevelop.Commands.ClearRecentProjects" />
      </MenuItem>
      <MenuItem id="ExitSeparator" type = "Separator"/>
      <MenuItem id="Exit" label="${res:XML.MainMenu.FileMenu.Exit}" description="${res:XML.MainMenu.FileMenu.Exit.Desription}"
				class="Altaxo.Main.Commands.FileExit" />
    </MenuItem>
    <!-- Edit menu -->
    <MenuItem id="Edit" label="${res:XML.MainMenu.EditMenu}"  type="Menu">
      <MenuItem id="Cut" label="${res:XML.MainMenu.EditMenu.Cut}" icon="Icons.16x16.CutIcon" description="${res:XML.MainMenu.EditMenu.Cut.Description}"
				shortcut="Control|X" class="ICSharpCode.SharpDevelop.Commands.Cut" />
      <MenuItem id="Copy" label="${res:XML.MainMenu.EditMenu.Copy}" icon="Icons.16x16.CopyIcon"
				description="${res:XML.MainMenu.EditMenu.Copy.Description}" shortcut="Control|C" class="ICSharpCode.SharpDevelop.Commands.Copy" />
      <MenuItem id="Paste" label="${res:XML.MainMenu.EditMenu.Paste}" icon="Icons.16x16.PasteIcon"
				description="${res:XML.MainMenu.EditMenu.Paste.Description}" shortcut="Control|V" class="ICSharpCode.SharpDevelop.Commands.Paste" />
      <MenuItem id="Delete" label="${res:XML.MainMenu.EditMenu.Delete}" icon="Icons.16x16.DeleteIcon"
				description="${res:XML.MainMenu.EditMenu.Delete.Description}" class="ICSharpCode.SharpDevelop.Commands.Delete" />
      <MenuItem id="SelectAll" label="${res:XML.MainMenu.EditMenu.SelectAll}" description="${res:XML.MainMenu.EditMenu.SelectAll.Description}"
				shortcut="Control|A" class="ICSharpCode.SharpDevelop.Commands.SelectAll" />

      <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Exclude">
        <MenuItem id="GraphCopyPage" label="${res:XML.MainMenu.EditMenu.CopyPage}" icon="Icons.16x16.NewDocumentIcon"
          description="${res:XML.MainMenu.EditMenu.CopyPage.Description}" class="Altaxo.Graph.Commands.CopyPage" />
        <MenuItem id="CopyPageAsBitmap" label="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap}"  type="Menu">
          <MenuItem id="GraphCopyPageAsBitmap150dpiARGB"
                    label="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap150dpiARGB}"
                    icon="Icons.16x16.NewDocumentIcon"
                    description="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap150dpiARGB.Description}"
                    class="Altaxo.Graph.Commands.CopyPageAsBitmap150dpiARGB" />
          <MenuItem id="GraphCopyPageAsBitmap300dpiRGB"
                    label="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap150dpiRGB}"
                    icon="Icons.16x16.NewDocumentIcon"
                    description="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap150dpiRGB.Description}"
                    class="Altaxo.Graph.Commands.CopyPageAsBitmap150dpiRGB" />

          <MenuItem id="GraphCopyPageAsBitmap300dpiARGB"
                    label="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap300dpiARGB}"
                    icon="Icons.16x16.NewDocumentIcon"
                    description="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap300dpiARGB.Description}" 
                    class="Altaxo.Graph.Commands.CopyPageAsBitmap300dpiARGB" />
          <MenuItem id="GraphCopyPageAsBitmap300dpiRGB"
                    label="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap300dpiRGB}"
                    icon="Icons.16x16.NewDocumentIcon"
                    description="${res:XML.MainMenu.EditMenu.CopyPageAsBitmap300dpiRGB.Description}"
                    class="Altaxo.Graph.Commands.CopyPageAsBitmap300dpiRGB" />
        </MenuItem>
       </Condition>
      <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Exclude">
        <MenuItem id="XYVToMatrix" label="${res:XML.MainMenu.EditMenu.XYVToMatrix}"
          description="${res:XML.MainMenu.EditMenu.XYVToMatrix.Description}" class="Altaxo.Worksheet.Commands.XYVToMatrix" />
      </Condition>


    </MenuItem>
    <!-- View menu -->
    <MenuItem id="View" label="${res:XML.MainMenu.ViewMenu}"  type="Menu">
      <MenuItem id    = "MainViewMenuBuilder"
            type  = "Builder"
            class = "ICSharpCode.SharpDevelop.Commands.MainViewMenuBuilder" />
      <MenuItem id="ViewItemsSeparator" type = "Separator"/>
      <MenuItem id="FullScreen" label="${res:XML.MainMenu.ViewMenu.FullScreen}" icon="Icons.16x16.FullScreen"
				description="${res:XML.MainMenu.ViewMenu.FullScreen.Description}" class="ICSharpCode.SharpDevelop.Commands.ToggleFullscreenCommand" />
    </MenuItem>
    <!-- Plot menu -->
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Exclude">
      <MenuItem id="Plot" label="${res:XML.MainMenu.PlotMenu}"  type="Menu">
        <Condition name ="SelectedDataColumns" selected="*" action="Disable">
          <MenuItem id="PlotLine" label="${res:XML.MainMenu.PlotMenu.PlotLine}" icon="Icons.16x16.PlotLine"
						description="${res:XML.MainMenu.PlotMenu.PlotLine.Description}" class="Altaxo.Worksheet.Commands.PlotLine" />
          <MenuItem id="PlotScatter" label="${res:XML.MainMenu.PlotMenu.PlotScatter}" icon="Icons.16x16.PlotScatter"
						description="${res:XML.MainMenu.PlotMenu.PlotScatter.Description}" class="Altaxo.Worksheet.Commands.PlotScatter" />
          <MenuItem id="PlotLineAndScatter" label="${res:XML.MainMenu.PlotMenu.PlotLineAndScatter}"
						icon="Icons.16x16.PlotLineScatter" description="${res:XML.MainMenu.PlotMenu.PlotLineAndScatter.Description}"
						class="Altaxo.Worksheet.Commands.PlotLineAndScatter" />
          <MenuItem id="PlotDensityImage" label="${res:XML.MainMenu.PlotMenu.PlotDensityImage}" description="${res:XML.MainMenu.PlotMenu.PlotDensityImage.Description}"
						class="Altaxo.Worksheet.Commands.PlotDensityImage" />
          <MenuItem id="PlotArea" label="${res:XML.MainMenu.PlotMenu.PlotLineArea}" description="${res:XML.MainMenu.PlotMenu.PlotLineArea.Description}"
						class="Altaxo.Worksheet.Commands.PlotLineArea" />
          <MenuItem id="PlotLineStack" label="${res:XML.MainMenu.PlotMenu.PlotLineStack}" description="${res:XML.MainMenu.PlotMenu.PlotLineStack.Description}"
						class="Altaxo.Worksheet.Commands.PlotLineStack" />
          <MenuItem id="PlotLineRelStack" label="${res:XML.MainMenu.PlotMenu.PlotLineRelStack}" description="${res:XML.MainMenu.PlotMenu.PlotLineRelStack.Description}"
						class="Altaxo.Worksheet.Commands.PlotLineRelativeStack" />
          <MenuItem id="PlotLineWaterfall" label="${res:XML.MainMenu.PlotMenu.PlotLineWaterfall}" description="${res:XML.MainMenu.PlotMenu.PlotLineWaterfall.Description}"
						class="Altaxo.Worksheet.Commands.PlotLineWaterfall" />
          <MenuItem id="PlotPolar" label="${res:XML.MainMenu.PlotMenu.PlotPolar}" description="${res:XML.MainMenu.PlotMenu.PlotPolar.Description}"
						class="Altaxo.Worksheet.Commands.PlotLinePolar" />
          <MenuItem id="BarChart" label="${res:XML.MainMenu.Plot.BarChartMenu}"  type="Menu">
            <MenuItem id="PlotBarChartNormal" label="${res:XML.MainMenu.PlotMenu.PlotBarChartNormal}" description="${res:XML.MainMenu.PlotMenu.PlotBarChartNormal.Description}"
              class="Altaxo.Worksheet.Commands.PlotBarChartNormal" />
            <MenuItem id="PlotBarChartStack" label="${res:XML.MainMenu.PlotMenu.PlotBarChartStack}" description="${res:XML.MainMenu.PlotMenu.PlotBarChartStack.Description}"
              class="Altaxo.Worksheet.Commands.PlotBarChartStack" />
            <MenuItem id="PlotBarChartRelStack" label="${res:XML.MainMenu.PlotMenu.PlotBarChartRelStack}" description="${res:XML.MainMenu.PlotMenu.PlotBarChartRelStack.Description}"
              class="Altaxo.Worksheet.Commands.PlotBarChartRelativeStack" />
          </MenuItem>
          <MenuItem id="ColumnChart" label="${res:XML.MainMenu.Plot.ColumnChartMenu}"  type="Menu">
            <MenuItem id="PlotColumnChartNormal" label="${res:XML.MainMenu.PlotMenu.PlotColumnChartNormal}" description="${res:XML.MainMenu.PlotMenu.PlotColumnChartNormal.Description}"
              class="Altaxo.Worksheet.Commands.PlotColumnChartNormal" />
            <MenuItem id="PlotBarColumnChartStack" label="${res:XML.MainMenu.PlotMenu.PlotColumnChartStack}" description="${res:XML.MainMenu.PlotMenu.PlotColumnChartStack.Description}"
              class="Altaxo.Worksheet.Commands.PlotColumnChartStack" />
            <MenuItem id="PlotColumnChartRelStack" label="${res:XML.MainMenu.PlotMenu.PlotColumnChartRelStack}" description="${res:XML.MainMenu.PlotMenu.PlotColumnChartRelStack.Description}"
              class="Altaxo.Worksheet.Commands.PlotColumnChartRelativeStack" />
          </MenuItem>
        </Condition>
        <Condition name="ContainsPLSModelData" ContainsPLSModelData="*" action="Exclude">
          <MenuItem id="PLS" label="${res:XML.MainMenu.PLSPlotMenu}" type="Menu">
            <MenuItem id="SetNumFactors" label="${res:XML.MainMenu.PlotMenu.PLS.SetNumberOfFactors}" icon="Icons.16x16.Question"
                      description="${res:XML.MainMenu.PlotMenu.PLS.SetNumberOfFactors.Description}" class="Altaxo.Worksheet.Commands.PLSQuestPreferredNumberOfFactors" />
            <MenuItem id="PlotPRESS" label="${res:XML.MainMenu.PlotMenu.PLS.PlotPRESSValue}" icon="Icons.16x16.PlotLine"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotPRESSValue.Description}" class="Altaxo.Worksheet.Commands.PLSPlotPRESSValue" />
            <MenuItem id="PlotCrossPRESS" label="${res:XML.MainMenu.PlotMenu.PLS.PlotCrossPRESSValue}" icon="Icons.16x16.PlotLine"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotCrossPRESSValue.Description}" class="Altaxo.Worksheet.Commands.PLSPlotCrossPRESSValue" />
            <MenuItem id="PlotYResiduals" label="${res:XML.MainMenu.PlotMenu.PLS.PlotYResiduals}" icon="Icons.16x16.PlotScatter"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotYResiduals.Description}" class="Altaxo.Worksheet.Commands.PLSPlotYResidualsIndividually" />
            <MenuItem id="PlotYCrossResiduals" label="${res:XML.MainMenu.PlotMenu.PLS.PlotYCrossResiduals}" icon="Icons.16x16.PlotScatter"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotYCrossResiduals.Description}" class="Altaxo.Worksheet.Commands.PLSPlotYCrossResidualsIndividually" />
            <MenuItem id="PlotXResiduals" label="${res:XML.MainMenu.PlotMenu.PLS.PlotXResiduals}" icon="Icons.16x16.PlotScatter"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotXResiduals.Description}" class="Altaxo.Worksheet.Commands.PLSPlotXResidualsIndividually" />
            <MenuItem id="PlotXCrossResiduals" label="${res:XML.MainMenu.PlotMenu.PLS.PlotXCrossResiduals}" icon="Icons.16x16.PlotScatter"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotXCrossResiduals.Description}" class="Altaxo.Worksheet.Commands.PLSPlotXCrossResidualsIndividually" />
            <MenuItem id="PlotActualVersusPredictedY" label="${res:XML.MainMenu.PlotMenu.PLS.PlotActualVersusPredictedY}" icon="Icons.16x16.PlotScatter"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotActualVersusPredictedY.Description}" class="Altaxo.Worksheet.Commands.PLSPlotPredictedVersusActualYIndividually" />
            <MenuItem id="PlotActualVersusCrossPredictedY" label="${res:XML.MainMenu.PlotMenu.PLS.PlotActualVersusCrossPredictedY}" icon="Icons.16x16.PlotScatter"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotActualVersusCrossPredictedY.Description}" class="Altaxo.Worksheet.Commands.PLSPlotCrossPredictedVersusActualYIndividually" />
            <MenuItem id="PlotXLeverage" label="${res:XML.MainMenu.PlotMenu.PLS.PlotXLeverage}" icon="Icons.16x16.PlotScatter"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotXLeverage.Description}" class="Altaxo.Worksheet.Commands.PLSPlotXLeverage" />
            <MenuItem id="PlotPreprocessedSpectra" label="${res:XML.MainMenu.PlotMenu.PLS.PlotPreprocessedSpectra}" icon="Icons.16x16.PlotLine"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotPreprocessedSpectra.Description}" class="Altaxo.Worksheet.Commands.PLSPlotPreprocessedSpectra" />
            <MenuItem id="PlotPredictionScores" label="${res:XML.MainMenu.PlotMenu.PLS.PlotPredictionScores}" icon="Icons.16x16.PlotLine"
                      description="${res:XML.MainMenu.PlotMenu.PLS.PlotPredictionScores.Description}" class="Altaxo.Worksheet.Commands.PLSPlotPredictionScores" />
          </MenuItem>
        </Condition>
      </MenuItem>
    </Condition>
    <!-- Worksheet menu -->
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Exclude">
      <MenuItem id="Worksheet" label="${res:XML.MainMenu.WorksheetMenu}"  type="Menu">
        <MenuItem id="AddDataColumns" label="${res:XML.MainMenu.WorksheetMenu.AddDataColumns}" description="${res:XML.MainMenu.WorksheetMenu.AddDataColumns.Description}"
					class="Altaxo.Worksheet.Commands.AddDataColumns" />
        <MenuItem id="AddPropertyColumns" label="${res:XML.MainMenu.WorksheetMenu.AddPropertyColumns}"
					description="${res:XML.MainMenu.WorksheetMenu.AddPropertyColumns.Description}" class="Altaxo.Worksheet.Commands.AddPropertyColumns" />
        <MenuItem id="CreatePropColOfColNames" label="${res:XML.MainMenu.WorksheetMenu.CreatePropertyColumnOfColumnNames}"
					description="${res:XML.MainMenu.WorksheetMenu.CreatePropertyColumnOfColumnNames.Description}" class="Altaxo.Worksheet.Commands.CreatePropertyColumnOfColumnNames"/>
        <MenuItem id="Rename" label="${res:XML.MainMenu.WorksheetMenu.Rename}" description="${res:XML.MainMenu.WorksheetMenu.Rename.Description}"
					class="Altaxo.Worksheet.Commands.WorksheetRename" />
        <MenuItem id="Duplicate" label="${res:XML.MainMenu.WorksheetMenu.Duplicate}" description="${res:XML.MainMenu.WorksheetMenu.Duplicate.Description}"
					class="Altaxo.Worksheet.Commands.WorksheetDuplicate" />
        <MenuItem id="Transpose" label="${res:XML.MainMenu.WorksheetMenu.Transpose}" description="${res:XML.MainMenu.WorksheetMenu.Transpose.Description}"
					class="Altaxo.Worksheet.Commands.WorksheetTranspose" />
        <MenuItem id="TableScript" label="${res:XML.MainMenu.WorksheetMenu.TableScript}" description="${res:XML.MainMenu.WorksheetMenu.TableScript.Description}"
					class="Altaxo.Worksheet.Commands.OpenTableScriptDialog" />
        <MenuItem id="ExtractTableData" label="${res:XML.MainMenu.WorksheetMenu.ExtractTableData}" description="${res:XML.MainMenu.WorksheetMenu.ExtractTableData.Description}"
					class="Altaxo.Worksheet.Commands.OpenExtractTableDataScriptDialog" />
        <MenuItem id="MoveRows" label="${res:XML.MainMenu.WorksheetMenu.MoveSelectedRows}" description="${res:XML.MainMenu.WorksheetMenu.MoveSelectedRows.Description}"
					class="Altaxo.Worksheet.Commands.SetRowPosition" />
      </MenuItem>
    </Condition>
    <!-- Graph menu -->
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Exclude">
      <MenuItem id="Graph" label="${res:XML.MainMenu.GraphMenu}"  type="Menu">
        <MenuItem id="NewLayer" label="${res:XML.MainMenu.NewLayerMenu}" type="Menu">
          <MenuItem id="NormalBottomXLeftY" label="${res:XML.MainMenu.NewLayerMenu.NormalBottomXLeftY}"
						description="${res:XML.MainMenu.NewLayerMenu.NormalBottomXLeftY.Description}" class="Altaxo.Graph.Commands.NewLayerNormalBottomXLeftY" />
          <MenuItem id="LinkedTopXRightY" label="${res:XML.MainMenu.NewLayerMenu.LinkedTopXRightY}"
						description="${res:XML.MainMenu.NewLayerMenu.LinkedTopXRightY.Description}" class="Altaxo.Graph.Commands.NewLayerLinkedTopXRightY" />
          <MenuItem id="LinkedTopX" label="${res:XML.MainMenu.NewLayerMenu.LinkedTopX}" description="${res:XML.MainMenu.NewLayerMenu.LinkedTopX.Description}"
						class="Altaxo.Graph.Commands.NewLayerLinkedTopX" />
          <MenuItem id="LinkedRightY" label="${res:XML.MainMenu.NewLayerMenu.LinkedRightY}" description="${res:XML.MainMenu.NewLayerMenu.LinkedRightY.Description}"
						class="Altaxo.Graph.Commands.NewLayerLinkedRightY" />
          <MenuItem id="LinkedTopXRightY_XAxisStraight" label="${res:XML.MainMenu.NewLayerMenu.LinkedTopXRightY_XAxisStraight}"
						description="${res:XML.MainMenu.NewLayerMenu.LinkedTopXRightY_XAxisStraight.Description}"
						class="Altaxo.Graph.Commands.NewLayerLinkedTopXRightY_XAxisStraight" />
        </MenuItem>
        <MenuItem id="AddCurvePlot" label="${res:XML.MainMenu.GraphMenu.AddCurvePlot}" description="${res:XML.MainMenu.GraphMenu.AddCurvePlot.Description}"
					class="Altaxo.Graph.Commands.NewUserFunction" />
        <MenuItem id="LayerControl" label="${res:XML.MainMenu.GraphMenu.LayerControl}" description="${res:XML.MainMenu.GraphMenu.LayerControl.Description}"
					class="Altaxo.Graph.Commands.LayerControl" />
        <MenuItem id="NewLayerLegend" label="${res:XML.MainMenu.GraphMenu.NewLayerLegend}" description="${res:XML.MainMenu.GraphMenu.NewLayerLegend.Description}"
					class="Altaxo.Graph.Commands.NewLayerLegend" />
        <MenuItem id="ArrangeLayers" label="${res:XML.MainMenu.GraphMenu.ArrangeLayers}"
						description="${res:XML.MainMenu.GraphMenu.ArrangeLayers.Description}"
						class="Altaxo.Graph.Commands.ArrangeLayers" />
        <MenuItem id="Rename" label="${res:XML.MainMenu.GraphMenu.Rename}"
					description="${res:XML.MainMenu.GraphMenu.Rename.Description}" class="Altaxo.Graph.Commands.GraphRename" />
        <MenuItem id="Refresh" label="${res:XML.MainMenu.GraphMenu.Refresh}"
					description="${res:XML.MainMenu.GraphMenu.Refresh.Description}" class="Altaxo.Graph.Commands.GraphRefresh" />
        <MenuItem id="Duplicate" label="${res:XML.MainMenu.GraphMenu.Duplicate}" icon="Icons.16x16.Duplicate"
					description="${res:XML.MainMenu.GraphMenu.Duplicate.Description}" class="Altaxo.Graph.Commands.DuplicateGraph" />
      </MenuItem>
    </Condition>
    <!-- Column menu -->
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Exclude">
      <MenuItem id="Column" label="${res:XML.MainMenu.ColumnMenu}"  type="Menu">
        <MenuItem id="SetColumnAsX" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsX}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsX.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnAsX" />
        <MenuItem id="SetColumnAsY" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsY}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsY.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnAsY" />
        <MenuItem id="SetColumnAsV" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsValue}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsValue.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnAsValue" />
        <MenuItem id="SetColumnAsLabel" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsLabel}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsLabel.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnAsLabel" />
        <MenuItem id="SetColumnAsError" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsError}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsError.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnAsError" />
        <MenuItem id="SetColumnAsPosError" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsPosError}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsPosError.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnAsPositiveError" />
        <MenuItem id="SetColumnAsNegError" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsNegError}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsNegError.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnAsNegativeError" />

        <MenuItem id="Rename" label="${res:XML.MainMenu.ColumnMenu.Rename}" description="${res:XML.MainMenu.ColumnMenu.Rename.Description}"
					class="Altaxo.Worksheet.Commands.RenameColumn" />
        <MenuItem id="SetGroupNumber" label="${res:XML.MainMenu.ColumnMenu.SetGroupNumber}" description="${res:XML.MainMenu.ColumnMenu.SetGroupNumber.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnGroupNumber" />
        <MenuItem id="MoveColumns" label="${res:XML.MainMenu.ColumnMenu.MoveColumns}" description="${res:XML.MainMenu.ColumnMenu.MoveColumns.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnPosition" />
        <MenuItem id="ExtractPropertyValues" label="${res:XML.MainMenu.ColumnMenu.ExtractPropertyValues}"
					description="${res:XML.MainMenu.ColumnMenu.ExtractPropertyValues.Description}" class="Altaxo.Worksheet.Commands.ExtractPropertyValues" />
        <MenuItem id="SetColumnValues" label="${res:XML.MainMenu.ColumnMenu.SetColumnValues}" description="${res:XML.MainMenu.ColumnMenu.SetColumnValues.Description}"
					class="Altaxo.Worksheet.Commands.SetColumnValues" />
      </MenuItem>
    </Condition>
    <!-- Worksheet-Analysis menu -->
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Exclude">
      <MenuItem id="WorksheetAnalysis" label="${res:XML.MainMenu.AnalysisMenu}"  type="Menu">
        <MenuItem id="DiffSmooth" label="${res:XML.MainMenu.AnalysisMenu.DifferentiateSmooth}" description="${res:XML.MainMenu.AnalysisMenu.DiffSmooth.Description}"
					class="Altaxo.Worksheet.Commands.AnalysisDifferentiateSmooth" />
        <MenuItem id="Interpolate" label="${res:XML.MainMenu.AnalysisMenu.Interpolate}" description="${res:XML.MainMenu.AnalysisMenu.Interpolate.Description}"
					class="Altaxo.Worksheet.Commands.AnalysisInterpolation" />
        <MenuItem id="MultiVarLinRegression" label="${res:XML.MainMenu.AnalysisMenu.MultivariateLinearRegression}" description="${res:XML.MainMenu.AnalysisMenu.MultivariateLinearRegression.Description}"
					class="Altaxo.Worksheet.Commands.AnalysisMultivariateLinearRegression" />
        <MenuItem id="1DFFT" label="${res:XML.MainMenu.AnalysisMenu.FFT}" description="${res:XML.MainMenu.AnalysisMenu.FFT.Description}"
					class="Altaxo.Worksheet.Commands.AnalysisFFT" />
        <MenuItem id="2DFFT" label="${res:XML.MainMenu.AnalysisMenu.2DFFT}" description="${res:XML.MainMenu.AnalysisMenu.2DFFT.Description}"
					class="Altaxo.Worksheet.Commands.Analysis2DFFT" />
        <MenuItem id="2DCenteredFFT" label="${res:XML.MainMenu.AnalysisMenu.2DCenteredFFT}" description="${res:XML.MainMenu.AnalysisMenu.2DCenteredFFT.Description}"
					class="Altaxo.Worksheet.Commands.Analysis2DCenteredFFT" />
        <MenuItem id="StatisticsOnCols" label="${res:XML.MainMenu.AnalysisMenu.StatisticsOnColumns}"
					description="${res:XML.MainMenu.AnalysisMenu.StatisticsOnColumns.Description}" class="Altaxo.Worksheet.Commands.AnalysisStatisticsOnColumns" />
        <MenuItem id="StatisticsOnRows" label="${res:XML.MainMenu.AnalysisMenu.StatisticsOnRows}"
					description="${res:XML.MainMenu.AnalysisMenu.StatisticsOnRows.Description}" class="Altaxo.Worksheet.Commands.AnalysisStatisticsOnRows" />

        <MenuItem id="ChemometricsMenu" label="${res:XML.MainMenu.Analysis.ChemometricsMenu}"  type="Menu">
          <MenuItem id="PCAOnCols" label="${res:XML.MainMenu.AnalysisMenu.PCAOnColumns}" description="${res:XML.MainMenu.AnalysisMenu.PCAOnColumns.Description}"
					class="Altaxo.Worksheet.Commands.AnalysisPCAOnCols" />
          <MenuItem id="PCAOnRows" label="${res:XML.MainMenu.AnalysisMenu.PCAOnRows}" description="${res:XML.MainMenu.AnalysisMenu.PCAOnRows.Description}"
            class="Altaxo.Worksheet.Commands.AnalysisPCAOnRows" />
          <MenuItem id="PLSOnCols" label="${res:XML.MainMenu.AnalysisMenu.PLSOnColumns}" description="${res:XML.MainMenu.AnalysisMenu.PLSOnColumns.Description}"
            class="Altaxo.Worksheet.Commands.AnalysisPLSOnCols" />
          <MenuItem id="PLSOnRows" label="${res:XML.MainMenu.AnalysisMenu.PLSOnRows}" description="${res:XML.MainMenu.AnalysisMenu.PLSOnRows.Description}"
            class="Altaxo.Worksheet.Commands.AnalysisPLSOnRows" />
          <MenuItem id="PLSPredictOnCols" label="${res:XML.MainMenu.AnalysisMenu.PLSPredictOnColumns}" description="${res:XML.MainMenu.AnalysisMenu.PLSPredictOnColumns.Description}"
            class="Altaxo.Worksheet.Commands.AnalysisPLSPredictOnCols" />
          <MenuItem id="PLSPredictOnRows" label="${res:XML.MainMenu.AnalysisMenu.PLSPredictOnRows}" description="${res:XML.MainMenu.AnalysisMenu.PLSPredictOnRows.Description}"
            class="Altaxo.Worksheet.Commands.AnalysisPLSPredictOnRows" />
          <MenuItem id="ExportPLSCalibration" label="${res:XML.MainMenu.AnalysisMenu.ExportPLSCalibration}" description="${res:XML.MainMenu.AnalysisMenu.ExportPLSCalibration.Description}"
            class="Altaxo.Worksheet.Commands.AnalysisExportPLSCalibration" />
          <MenuItem id="MultColsToMatrix" label="${res:XML.MainMenu.AnalysisMenu.MultiplyColumnsToMatrix}"
            description="${res:XML.MainMenu.AnalysisMenu.MultiplyColumnsToMatrix.Description}" class="Altaxo.Worksheet.Commands.AnalysisMultiplyColumnsToMatrix" />
        </MenuItem>
      </MenuItem>
    </Condition>
    <!-- Graph-Analysis menu -->
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Exclude">
      <MenuItem id="GraphAnalysis" label="${res:XML.MainMenu.AnalysisMenu}"  type="Menu">
        <MenuItem id="FitPolynomial" label="${res:XML.MainMenu.AnalysisMenu.FitPolynomial}" description="${res:XML.MainMenu.AnalysisMenu.FitPolynomial.Description}"
					class="Altaxo.Graph.Commands.FitPolynomial" />
        <MenuItem id="FitNonlinear" label="${res:XML.MainMenu.AnalysisMenu.FitNonlinear}" description="${res:XML.MainMenu.AnalysisMenu.FitNonlinear.Description}"
					class="Altaxo.Graph.Commands.FitNonlinear" />
      </MenuItem>
    </Condition>
    <!-- Window menu -->
    <MenuItem id="Window" label="${res:XML.MainMenu.WindowMenu}" type="Menu">
      <Condition name = "WindowActive" activewindow="*" action="Disable">
        <MenuItem id="NextWindow" label="${res:XML.MainMenu.WindowMenu.NxtWindow}" icon="Icons.16x16.NextWindowIcon"
					description="${res:XML.MainMenu.WindowMenu.NxtWindow.Description}" shortcut="Control|Tab"
					class="ICSharpCode.SharpDevelop.Commands.SelectNextWindow" />
        <MenuItem id="PrevWindow" label="${res:XML.MainMenu.WindowMenu.PrvWindow}" icon="Icons.16x16.PrevWindowIcon"
					description="${res:XML.MainMenu.WindowMenu.PrvWindow.Description}" shortcut="Shift|Control|Tab"
					class="ICSharpCode.SharpDevelop.Commands.SelectPrevWindow" />
        <MenuItem id="NxtPrvSeparator" type = "Separator"/>
        <MenuItem id="SortBy" label="${res:XML.MainMenu.WindowMenu.SortBy}" type="Menu">
          <MenuItem id="SortByCreation" label="${res:XML.MainMenu.WindowMenu.SortByCreation}"
            description="${res:XML.MainMenu.WindowMenu.SortByCreation.Description}" class="Altaxo.Main.Commands.SortGraphTablesByCreationTime" />
          <MenuItem id="SortByTypeCreation" label="${res:XML.MainMenu.WindowMenu.SortByTypeAndCreation}"
            description="${res:XML.MainMenu.WindowMenu.SortByTypeAndCreation.Description}" class="Altaxo.Main.Commands.SortGraphTablesByTypeAndCreationTime" />
          <MenuItem id="SortByName" label="${res:XML.MainMenu.WindowMenu.SortByName}"
            description="${res:XML.MainMenu.WindowMenu.SortByName.Description}" class="Altaxo.Main.Commands.SortGraphTablesByName" />
          <MenuItem id="SortByTypeName" label="${res:XML.MainMenu.WindowMenu.SortByTypeAndName}"
            description="${res:XML.MainMenu.WindowMenu.SortByTypeAndName.Description}" class="Altaxo.Main.Commands.SortGraphTablesByTypeAndName" />
        </MenuItem>
        <MenuItem id="CloseAll" label="${res:XML.MainMenu.FileMenu.CloseAll}" icon="Icons.16x16.CloseAllDocuments"
					description="${res:XML.MainMenu.FileMenu.CloseAll.Description}" class="ICSharpCode.SharpDevelop.Commands.CloseAllWindows" />
      </Condition>
      <MenuItem id="OpenAll" label="${res:XML.MainMenu.WindowMenu.OpenAll}" type="Menu">
        <MenuItem id="OpenAllWorksheets" label="${res:XML.MainMenu.WindowMenu.OpenAllWorksheets}"
          description="${res:XML.MainMenu.WindowMenu.OpenAllWorksheets.Description}" class="Altaxo.Main.Commands.OpenAllWorksheets" />
        <MenuItem id="OpenAllGraphs" label="${res:XML.MainMenu.WindowMenu.OpenAllGraphs}"
          description="${res:XML.MainMenu.WindowMenu.OpenAllGraphs.Description}" class="Altaxo.Main.Commands.OpenAllGraphs" />
        <MenuItem id="OpenAllWorksheetsAndGraphs" label="${res:XML.MainMenu.WindowMenu.OpenAllWorksheetsAndGraphs}"
          description="${res:XML.MainMenu.WindowMenu.OpenAllWorksheetsAndGraphs.Description}" class="Altaxo.Main.Commands.OpenAllWorksheetsAndGraphs" />
      </MenuItem>
      <MenuItem id = "ContentBuilder"  type="Builder" class="ICSharpCode.SharpDevelop.Commands.OpenContentsMenuBuilder"/>
    </MenuItem>
    <!-- Help menu -->
    <MenuItem id="Help" label="${res:XML.MainMenu.HelpMenu}" type="Menu">
      <MenuItem id="ProgramHelp" label="${res:XML.MainMenu.HelpMenu.ProgramHelp}" icon="Icons.16x16.HelpIcon"
				description="${res:XML.MainMenu.HelpMenu.ProgramHelp.Description}" shortcut="F1" class="Altaxo.Main.Commands.ShowAltaxoProgramHelp" />
      <MenuItem id="ClassHelp" label="${res:XML.MainMenu.HelpMenu.ClassHelp}" icon="Icons.16x16.HelpIcon"
				description="${res:XML.MainMenu.HelpMenu.ClassHelp.Description}" shortcut="Alt|F1" class="Altaxo.Main.Commands.ShowAltaxoClassHelp" />
      <MenuItem id="Separator1" type = "Separator"/>
      <MenuItem id="Web" label="${res:XML.MainMenu.HelpMenu.WebMenu}"  type="Menu">

        <MenuItem id="Altaxo" label="Altaxo" type="Menu">
          <MenuItem id="Homepage" label="Homepage" icon="Icons.16x16.WebSearchIcon" link="http://altaxo.sourceforge.net" />
          <MenuItem id="ProjectPage" label="Project page" icon="Icons.16x16.WebSearchIcon" link="http://sourceforge.net/projects/altaxo/" />
          <MenuItem id="Downloads" label="Downloads" icon="Icons.16x16.WebSearchIcon" link="http://sourceforge.net/project/showfiles.php?group_id=73395" />
          <MenuItem id="BugReport" label="BugReport" icon="Icons.16x16.WebSearchIcon" link="http://sourceforge.net/tracker/?group_id=73395&amp;atid=537651" />
        </MenuItem>


        <MenuItem id="ASP" label="&amp;AlphaSierraPapa" icon="Icons.16x16.WebSearchIcon" link="http://www.alphasierrapapa.com/" />
        <MenuItem id = "SharpDevelop" label = "SharpDevelop" type="Menu">
          <MenuItem id = "Downloads" label = "Downloads" icon = "Icons.16x16.WebSearchIcon" link = "http://www.sharpdevelop.net/OpenSource/SD/Download/" />
          <MenuItem id = "Forum" label = "Community Forums" icon = "Icons.16x16.WebSearchIcon" link = "http://community.sharpdevelop.net/forums/" />
          <MenuItem id = "Announcement" label = "Announcement List" icon = "Icons.16x16.WebSearchIcon" link = "http://www.sharpdevelop.net/OpenSource/SD/AnnouncementList.aspx" />
          <MenuItem id = "Mail" label = "Send Us a Mail" icon = "Icons.16x16.WebSearchIcon" link = "http://www.sharpdevelop.net/OpenSource/SD/ContactUs.asp" />
        </MenuItem>
        <MenuItem id = "C#" label = "C#" type="Menu">
          <MenuItem id = "C# Help" label = "C# Help" icon = "Icons.16x16.WebSearchIcon" link = "http://www.csharphelp.com" />
          <MenuItem id = "CodeProject" label = "CodeProject" icon = "Icons.16x16.WebSearchIcon" link = "http://www.codeproject.com" />
          <MenuItem id = "C# Corner" label = "C# Corner" icon = "Icons.16x16.WebSearchIcon" link = "http://www.c-sharpcorner.com" />
          <MenuItem id = "GotDotNet" label = "GotDotNet" icon = "Icons.16x16.WebSearchIcon" link = "http://www.gotdotnet.com/" />
        </MenuItem>
        <MenuItem id="IntegratedProjects" label="Integrated Projects" type="Menu">
          <MenuItem id="Matpack" label="Matpack" icon="Icons.16x16.WebSearchIcon" description="One of the best free C++ mathematematical libraries around. Many special functions are adopted from here."
						link="http://www.matpack.de" />
          <MenuItem id="ExocortexDSP" label="Exocortex DSP" icon="Icons.16x16.WebSearchIcon" description="The Complex value library was used from here. But many other routines available."
						link="http://www.sourceforge.net/projects/exocortexdsp" />
          <MenuItem id="dnAnalytics" label="dnAnalytics" icon="Icons.16x16.WebSearchIcon" description="Contributes part of the linear algebra and optimization functions."
						link="http://www.dnAnalytics.net" />
          <MenuItem id="DockPanelSuite" label="DockPanelSuite" icon="Icons.16x16.WebSearchIcon" description="One of the best .NET control libraries around."
						link="http://www.sourceforge.net/projects/dockpanelsuite" />
          <MenuItem id="NAnt" label="NAnt" icon="Icons.16x16.WebSearchIcon" description="THE .NET building tool."
						link="http://nant.sourceforge.net/" />
          <MenuItem id="#ZipLib" label="#ZipLib" icon="Icons.16x16.WebSearchIcon" description="Is used to provide a storage container for the Altaxo projects."
						link="http://www.icsharpcode.net/OpenSource/SharpZipLib/" />
        </MenuItem>
        <MenuItem id = "NETPlatforms" label = ".NET Platforms" type="Menu">
          <MenuItem id = "MSNET"  label = "MS .NET" icon = "Icons.16x16.WebSearchIcon" link = "http://msdn.microsoft.com/net" />
          <MenuItem id = "Mono"   label = "Mono Project" icon = "Icons.16x16.WebSearchIcon" link = "http://www.mono-project.com/" />
          <MenuItem id = "DotGNU" label = "DotGNU" icon = "Icons.16x16.WebSearchIcon" link = "http://www.dotgnu.org" />
        </MenuItem>
      </MenuItem>
      <MenuItem id="Separator2" type = "Separator"/>
      <MenuItem id="ForceException" label="${res:XML.MainMenu.HelpMenu.ForceException}"
        description="${res:XML.MainMenu.HelpMenu.ForceException.Description}" class="Altaxo.Worksheet.Commands.AltaxoProvokeException" />
      <MenuItem id="About" label="${res:XML.MainMenu.HelpMenu.About}" icon="Icons.16x16.AboutIcon"
				description="${res:XML.MainMenu.HelpMenu.About.Description}" class="Altaxo.Main.Commands.HelpAboutAltaxo" />
    </MenuItem>

  </Path>

  <Path name = "/Altaxo/Workbench/ToolBar/Standard">
    <ToolbarItem id="New" icon="Icons.16x16.NewDocumentIcon" tooltip="${res:XML.MainMenu.FileMenu.Close.Description}"
				class="Altaxo.Main.Commands.CloseProject" />
    <ToolbarItem id="Open" icon="Icons.16x16.OpenFileIcon" tooltip="${res:XML.MainMenu.FileMenu.Open.File.Description}"
      class="Altaxo.Main.Commands.FileOpen" />
    <ToolbarItem id="Save" icon="Icons.16x16.SaveIcon" tooltip="${res:XML.MainMenu.FileMenu.SaveProject.Description}"
      class="Altaxo.Main.Commands.FileSave" />
    <ToolbarItem id="StandardWorksheet" icon="Icons.16x16.StandardWorksheet" tooltip="${res:XML.MainMenu.FileMenu.New.StandardWorksheet.Description}"
      class="Altaxo.Main.Commands.CreateNewStandardWorksheet" />
    <ToolbarItem id="EmptyWorksheet" icon="Icons.16x16.EmptyWorksheet" tooltip="${res:XML.MainMenu.FileMenu.New.Worksheet.Description}"
      class="Altaxo.Main.Commands.CreateNewWorksheet" />
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Disable">
      <ToolbarItem id="GraphPrint" icon="Icons.16x16.Printer" tooltip="${res:XML.MainMenu.FileMenu.Print.Description}"
        class="Altaxo.Graph.Commands.Print" />
    </Condition>
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Disable">
      <ToolbarItem id="ImportAscii" icon="Icons.16x16.ImportAscii" tooltip="${res:XML.MainMenu.FileMenu.Import.Ascii.Description}"
        class="Altaxo.Worksheet.Commands.ImportAscii" />
    </Condition>
    <ToolbarItem id="Duplicate" icon="Icons.16x16.Duplicate" tooltip="${res:XML.MainMenu.EditMenu.Duplicate.Description}"
        class="Altaxo.Main.Commands.Duplicate" />
    <ToolbarItem id="Separator1"  type = "Separator"/>
    <Condition name = "WindowActive" activewindow="*" action="Disable">
      <ToolbarItem id="Cut" icon="Icons.16x16.CutIcon" tooltip="${res:XML.MainMenu.EditMenu.Cut.Description}"
        class="ICSharpCode.SharpDevelop.Commands.Cut" />
      <ToolbarItem id="Copy" icon="Icons.16x16.CopyIcon" tooltip="${res:XML.MainMenu.EditMenu.Copy.Description}"
        class="ICSharpCode.SharpDevelop.Commands.Copy" />
      <ToolbarItem id="Paste" icon="Icons.16x16.PasteIcon" tooltip="${res:XML.MainMenu.EditMenu.Paste.Description}"
        class="ICSharpCode.SharpDevelop.Commands.Paste" />
      <ToolbarItem id="Delete" icon="Icons.16x16.DeleteIcon" tooltip="${res:XML.MainMenu.EditMenu.Delete.Description}"
        class="ICSharpCode.SharpDevelop.Commands.Delete" />
    </Condition>
    <ToolbarItem id="CutSeparator"  type = "Separator"/>
    <ToolbarItem id="GraphToolSeparator"  type = "Separator"/>
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Disable">
      <ToolbarItem id="GraphPointer" icon="Icons.16x16.GraphPointerTool" tooltip="${res:XML.MainMenu.GraphMenu.Tools.Pointer.Description}"
        loadclasslazy="false" class="Altaxo.Graph.Commands.SelectPointerTool" />
      <ToolbarItem id="TextPointer" icon="Icons.16x16.TextTool" tooltip="${res:XML.MainMenu.GraphMenu.Tools.TextTool.Description}"
        class="Altaxo.Graph.Commands.SelectTextTool" />
      <ToolbarItem id="ReadPlotItemData" icon="Icons.16x16.ReadData" tooltip="${res:XML.MainMenu.GraphMenu.Tools.ReadPlotItemData.Description}"
        class="Altaxo.Graph.Commands.ReadPlotItemDataTool" />
      <ToolbarItem id="ReadLayerCoordinates" icon="Icons.16x16.ReadLayer" tooltip="${res:XML.MainMenu.GraphMenu.Tools.ReadLayerCoordinates.Description}"
        class="Altaxo.Graph.Commands.ReadXYCoordinatesTool" />
      <ToolbarItem id="LineDrawingTool" icon="Icons.16x16.LineTool" tooltip="${res:XML.MainMenu.GraphMenu.Tools.SingleLine.Description}"
        class="Altaxo.Graph.Commands.SingleLineDrawingTool" />
      <ToolbarItem id="ArrowDrawingTool" icon="Icons.16x16.StraightArrow" tooltip="${res:XML.MainMenu.GraphMenu.Tools.ArrowLine.Description}"
        class="Altaxo.Graph.Commands.ArrowLineDrawingTool" />
      <ToolbarItem id="RectangleDrawingTool" icon="Icons.16x16.Rectangle" tooltip="${res:XML.MainMenu.GraphMenu.Tools.Rectangle.Description}"
        class="Altaxo.Graph.Commands.RectangleDrawingTool" />
      <ToolbarItem id="EllipseDrawingTool" icon="Icons.16x16.Ellipse" tooltip="${res:XML.MainMenu.GraphMenu.Tools.Ellipse.Description}"
        class="Altaxo.Graph.Commands.EllipseDrawingTool" />
      <ToolbarItem id="ZoomAxes" icon="Icons.16x16.ZoomAxes" tooltip="${res:XML.MainMenu.GraphMenu.ZoomAxes.Description}"
        class="Altaxo.Graph.Commands.ZoomAxesTool" />
      <ToolbarItem id="GraphCmdsSeparator"  type = "Separator"/>
      <ToolbarItem id="NewLayerLegend" icon="Icons.16x16.NewLegend" tooltip="${res:XML.MainMenu.GraphMenu.NewLayerLegend.Description}"
        class="Altaxo.Graph.Commands.NewLayerLegend" />
      <ToolbarItem id="RescaleAxes" icon="Icons.16x16.RescaleAxes" tooltip="${res:XML.MainMenu.GraphMenu.RescaleAxes.Description}"
        class="Altaxo.Graph.Commands.RescaleAxes" />
    </Condition>
    <ToolbarItem id="PlotSeparator"  type = "Separator"/>
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Disable">

      <ToolbarItem id="PlotLine" icon="Icons.16x16.PlotLine" tooltip="${res:XML.MainMenu.PlotMenu.PlotLine.Description}"
        class="Altaxo.Worksheet.Commands.PlotLine" />
      <ToolbarItem id="PlotScatter" icon="Icons.16x16.PlotScatter" tooltip="${res:XML.MainMenu.PlotMenu.PlotScatter.Description}"
        class="Altaxo.Worksheet.Commands.PlotScatter" />
      <ToolbarItem id="PlotLineScatter" icon="Icons.16x16.PlotLineScatter" tooltip="${res:XML.MainMenu.PlotMenu.PlotLineAndScatter.Description}"
        class="Altaxo.Worksheet.Commands.PlotLineAndScatter" />
    </Condition>
    <ToolbarItem id="ArrangeSeparator"  type = "Separator"/>
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Disable">
      <ToolbarItem id="ArrangeTop" icon="Icons.16x16.ArrangeTop" tooltip="${res:XML.MainMenu.GraphMenu.ArrangeTop.Description}"
        class="Altaxo.Graph.Commands.ArrangeTop" />
      <ToolbarItem id="ArrangeBottom" icon="Icons.16x16.ArrangeBottom" tooltip="${res:XML.MainMenu.GraphMenu.ArrangeBottom.Description}"
        class="Altaxo.Graph.Commands.ArrangeBottom" />
      <ToolbarItem id="ArrangeLeft" icon="Icons.16x16.ArrangeLeft" tooltip="${res:XML.MainMenu.GraphMenu.ArrangeLeft.Description}"
        class="Altaxo.Graph.Commands.ArrangeLeft" />
      <ToolbarItem id="ArrangeRight" icon="Icons.16x16.ArrangeRight" tooltip="${res:XML.MainMenu.GraphMenu.ArrangeRight.Description}"
        class="Altaxo.Graph.Commands.ArrangeRight" />
      <ToolbarItem id="ArrangeHorizontal" icon="Icons.16x16.ArrangeHorizontal" tooltip="${res:XML.MainMenu.GraphMenu.ArrangeHorizontal.Description}"
        class="Altaxo.Graph.Commands.ArrangeHorizontal" />
      <ToolbarItem id="ArrangeVertical" icon="Icons.16x16.ArrangeVertical" tooltip="${res:XML.MainMenu.GraphMenu.ArrangeVertical.Description}"
        class="Altaxo.Graph.Commands.ArrangeVertical" />
      <ToolbarItem id="ArrangeHorizontalTable" icon="Icons.16x16.ArrangeHorizontalTable" tooltip="${res:XML.MainMenu.GraphMenu.ArrangeHorizontalTable.Description}"
        class="Altaxo.Graph.Commands.ArrangeHorizontalTable" />
      <ToolbarItem id="ArrangeVerticalTable" icon="Icons.16x16.ArrangeVerticalTable" tooltip="${res:XML.MainMenu.GraphMenu.ArrangeVerticalTable.Description}"
        class="Altaxo.Graph.Commands.ArrangeVerticalTable" />
    </Condition>
  </Path>

  <Path name = "/Altaxo/Views/Worksheet/DataColumnHeader/ContextMenu">
    <Condition name="SelectedDataColumns" selected="one" action="Disable">
      <MenuItem id="Rename" label="${res:XML.MainMenu.ColumnMenu.Rename}" description="${res:XML.MainMenu.ColumnMenu.Rename.Description}"
        class="Altaxo.Worksheet.Commands.RenameColumn" />
      <MenuItem	id="SetColumnValues" label="${res:XML.MainMenu.ColumnMenu.SetColumnValues}"	description="${res:XML.MainMenu.ColumnMenu.SetColumnValues.Description}"
        class="Altaxo.Worksheet.Commands.SetColumnValues"	/>
      <MenuItem	id="SetColumnAsX"	label="${res:XML.MainMenu.ColumnMenu.SetColumnAsX}"	description="${res:XML.MainMenu.ColumnMenu.SetColumnAsX.Description}"
        class="Altaxo.Worksheet.Commands.SetColumnAsX" />
    </Condition>
    <MenuItem	id="SetColumnAsV"	label="${res:XML.MainMenu.ColumnMenu.SetColumnAsValue}"	description="${res:XML.MainMenu.ColumnMenu.SetColumnAsValue.Description}"
      class="Altaxo.Worksheet.Commands.SetColumnAsValue" />
    <MenuItem	id="SetColumnAsLabel"	label="${res:XML.MainMenu.ColumnMenu.SetColumnAsLabel}"	description="${res:XML.MainMenu.ColumnMenu.SetColumnAsLabel.Description}"
      class="Altaxo.Worksheet.Commands.SetColumnAsLabel" />
    <MenuItem id="SetColumnAsError" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsError}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsError.Description}"
  class="Altaxo.Worksheet.Commands.SetColumnAsError" />
    <MenuItem id="SetColumnAsPosError" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsPosError}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsPosError.Description}"
      class="Altaxo.Worksheet.Commands.SetColumnAsPositiveError" />
    <MenuItem id="SetColumnAsNegError" label="${res:XML.MainMenu.ColumnMenu.SetColumnAsNegError}" description="${res:XML.MainMenu.ColumnMenu.SetColumnAsNegError.Description}"
      class="Altaxo.Worksheet.Commands.SetColumnAsNegativeError" />
    <MenuItem	id="SetGroupNumber"	label="${res:XML.MainMenu.ColumnMenu.SetGroupNumber}"	description="${res:XML.MainMenu.ColumnMenu.SetGroupNumber.Description}"
      class="Altaxo.Worksheet.Commands.SetColumnGroupNumber" />
    <MenuItem	id="MoveColumns" label="${res:XML.MainMenu.ColumnMenu.MoveColumns}"	description="${res:XML.MainMenu.ColumnMenu.MoveColumns.Description}"
      class="Altaxo.Worksheet.Commands.SetColumnPosition"	/>

    <MenuItem id="CleanSeparator"  type = "Separator"/>
    <MenuItem id="Clean" label="${res:XML.MainMenu.EditMenu.Clean}" icon="Icons.16x16.CleanWorksheetIcon"
      description="${res:XML.MainMenu.EditMenu.Clean.Description}" class="Altaxo.Worksheet.Commands.EditClean" />
    <MenuItem id="Delete" label="${res:XML.MainMenu.EditMenu.Delete}" icon="Icons.16x16.DeleteIcon"
      description="${res:XML.MainMenu.EditMenu.Delete.Description}" class="Altaxo.Worksheet.Commands.EditRemove" />
  </Path>

  <Path name = "/Altaxo/Views/Worksheet/DataRowHeader/ContextMenu">

    <MenuItem id="InsertOneRow" label="${res:XML.MainMenu.WorksheetMenu.InsertOneRow}" 
      description="${res:XML.MainMenu.WorksheetMenu.InsertOneRow.Description}" class="Altaxo.Worksheet.Commands.InsertOneDataRow" />
    <MenuItem id="InsertRows" label="${res:XML.MainMenu.WorksheetMenu.InsertDataRows}"
      description="${res:XML.MainMenu.WorksheetMenu.InsertDataRows.Description}" class="Altaxo.Worksheet.Commands.InsertDataRows" />

    <MenuItem id="CleanSeparator"  type = "Separator"/>
    <MenuItem id="Clean" label="${res:XML.MainMenu.EditMenu.Clean}" icon="Icons.16x16.CleanWorksheetIcon"
      description="${res:XML.MainMenu.EditMenu.Clean.Description}" class="Altaxo.Worksheet.Commands.EditClean" />
    <MenuItem id="Delete" label="${res:XML.MainMenu.EditMenu.Delete}" icon="Icons.16x16.DeleteIcon"
      description="${res:XML.MainMenu.EditMenu.Delete.Description}" class="Altaxo.Worksheet.Commands.EditRemove" />

  </Path>

  <Path name = "/Altaxo/Views/Worksheet/PropertyColumnHeader/ContextMenu">
    <Condition name="SelectedPropertyColumns" selected="one" action="Disable">
      <MenuItem id="Rename" label="${res:XML.MainMenu.ColumnMenu.Rename}" description="${res:XML.MainMenu.ColumnMenu.Rename.Description}"
        class="Altaxo.Worksheet.Commands.RenameColumn" />
      <MenuItem	id="SetColumnValues" label="${res:XML.MainMenu.ColumnMenu.SetColumnValues}"	description="${res:XML.MainMenu.ColumnMenu.SetColumnValues.Description}"
        class="Altaxo.Worksheet.Commands.SetColumnValues"	/>
    </Condition>
    <MenuItem	id="MoveColumns" label="${res:XML.MainMenu.ColumnMenu.MoveColumns}"	
      description="${res:XML.MainMenu.ColumnMenu.MoveColumns.Description}" class="Altaxo.Worksheet.Commands.SetColumnPosition"	/>
    <MenuItem id="ExtractPropertyValues" label="${res:XML.MainMenu.ColumnMenu.ExtractPropertyValues}"
      description="${res:XML.MainMenu.ColumnMenu.ExtractPropertyValues.Description}" class="Altaxo.Worksheet.Commands.ExtractPropertyValues" />

    <MenuItem id="CleanSeparator"  type = "Separator"/>
    <MenuItem id="Clean" label="${res:XML.MainMenu.EditMenu.Clean}" icon="Icons.16x16.CleanWorksheetIcon"
      description="${res:XML.MainMenu.EditMenu.Clean.Description}" class="Altaxo.Worksheet.Commands.EditClean" />
    <MenuItem id="Delete" label="${res:XML.MainMenu.EditMenu.Delete}" icon="Icons.16x16.DeleteIcon"
      description="${res:XML.MainMenu.EditMenu.Delete.Description}" class="Altaxo.Worksheet.Commands.EditRemove" />

  </Path>

  <Path name = "/Altaxo/Views/Worksheet/OutsideAll/ContextMenu">
    <MenuItem id="AddDataColumns" label="${res:XML.MainMenu.WorksheetMenu.AddDataColumns}" description="${res:XML.MainMenu.WorksheetMenu.AddDataColumns.Description}"
      class="Altaxo.Worksheet.Commands.AddDataColumns" />
    <MenuItem id="AddPropertyColumns" label="${res:XML.MainMenu.WorksheetMenu.AddPropertyColumns}"
      description="${res:XML.MainMenu.WorksheetMenu.AddPropertyColumns.Description}" class="Altaxo.Worksheet.Commands.AddPropertyColumns" />
  </Path>

  <Path name = "/Altaxo/Views/Worksheet/DataTableHeader/ContextMenu">
    <MenuItem id="AddDataColumns" label="${res:XML.MainMenu.WorksheetMenu.AddDataColumns}" description="${res:XML.MainMenu.WorksheetMenu.AddDataColumns.Description}"
      class="Altaxo.Worksheet.Commands.AddDataColumns" />
    <MenuItem id="AddPropertyColumns" label="${res:XML.MainMenu.WorksheetMenu.AddPropertyColumns}"
      description="${res:XML.MainMenu.WorksheetMenu.AddPropertyColumns.Description}" class="Altaxo.Worksheet.Commands.AddPropertyColumns" />
  </Path>

  <Path name = "/Altaxo/BuiltinTextures">
    <Texture id="Caustics/BlueCaustic" resource = "Textures.Caustics.BlueCaustics"/>
    <Texture id="Marbel/DarkMarble1" resource = "Textures.Marble.DarkMarble1"/>
    <Texture id="Marbel/RedMarble1" resource = "Textures.Marble.RedMarble1"/>
    <Texture id="Marbel/RedMarble2" resource = "Textures.Marble.RedMarble2"/>
    <Texture id="Metal/ScratchedSilver" resource = "Textures.Metal.ScratchedSilver"/>
    <Texture id="Paper/BrownPaper" resource = "Textures.Paper.BrownPaper"/>
    <Texture id="Paper/YellowPaper" resource = "Textures.Paper.YellowPaper"/>
  </Path>

  <!-- End of Altaxo stuff -->

  <Path name = "/SharpDevelop/Workbench/Ambiences">
    <Class id    = ".NET"
		       class = "ICSharpCode.Core.NetAmbience"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/DisplayBindings">
		<DisplayBinding id               = "Browser"
		                supportedformats = "Web Pages"
		                class            = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.BrowserDisplayBinding"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/FileFilter">
		<FileFilter id         = "AllFiles"
		            name       = "${res:SharpDevelop.FileFilter.AllFiles}"
		            extensions = "*.*"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/Pads">
		<Pad id       = "ProjectBrowser"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.ProjectScoutLabel}"
		     icon     = "PadIcons.ProjectBrowser"
		     shortcut = "Control|Alt|L"
		     class    = "ICSharpCode.SharpDevelop.Project.ProjectBrowserPad"/>
		
		<Pad id       = "ClassBrowser"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.ClassScoutLabel}"
		     icon     = "PadIcons.ClassBrowser"
		     shortcut = "Control|Shift|C"
		     class    = "ICSharpCode.SharpDevelop.Gui.ClassBrowser"/>
		
		<Pad id       = "SideBar"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.ToolbarLabel}"
		     icon     = "PadIcons.Toolbar"
		     shortcut = "Control|Alt|X"
		     class    = "ICSharpCode.SharpDevelop.Gui.SideBarView"/>
		
		<Pad id       = "ErrorList"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.ErrorList}"
		     shortcut = "Control|Alt|K"
		     icon     = "PadIcons.ErrorList"
		     class    = "ICSharpCode.SharpDevelop.Gui.ErrorListPad"/>
		
		<Pad id       = "TaskList"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.TaskList}"
		     icon     = "PadIcons.TaskList"
		     class    = "ICSharpCode.SharpDevelop.Gui.TaskListPad"/>
		
		<Pad id       = "CompilerMessageView"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.OutputWindow}"
		     icon     = "PadIcons.Output"
		     shortcut = "Control|Alt|O"
		     class    = "ICSharpCode.SharpDevelop.Gui.CompilerMessageView"/>
		
		<Pad id       = "PropertyPad"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.PropertiesScoutLabel}"
		     icon     = "Icons.16x16.PropertiesIcon"
		     shortcut = "F4"
		     class    = "ICSharpCode.SharpDevelop.Gui.PropertyPad"/>
		
		<Pad id       = "FileScout"
		     category = "Tools"
		     title    = "${res:MainWindow.Windows.FileScoutLabel}"
		     icon     = "PadIcons.FileBrowser"
		     shortcut = "Control|Alt|F"
		     class    = "ICSharpCode.SharpDevelop.Gui.FileScout"/>
		
		<Pad id       = "SearchResults"
		     category = "Tools"
		     title    = "${res:MainWindow.Windows.SearchResultsLabel}"
		     icon     = "PadIcons.FindResults"
		     class    = "SearchAndReplace.SearchResultPanel"/>
		
		<Pad id       = "Bookmarks"
		     category = "Tools"
		     title    = "${res:MainWindow.Windows.BookmarksLabel}"
		     icon     = "PadIcons.Bookmarks"
		     class    = "ICSharpCode.SharpDevelop.Bookmarks.BookmarkPad"/>
		
		<Pad id       = "DefinitionView"
		     category = "Tools"
		     title    = "${res:MainWindow.Windows.DefinitionViewLabel}"
		     icon     = "PadIcons.DefinitionView"
		     class    = "ICSharpCode.SharpDevelop.Gui.DefinitionViewPad"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/Combine/FileFilter">
    <FileFilter id         = "AltaxoProject"
		            name       = "Altaxo project file (*.axoprj)"
		            class      = "Altaxo.Main.Commands.LoadProject"
		            extensions = "*.axoprj"/>

    <FileFilter id         = "AltaxoWorksheet"
              name       = "Altaxo worksheet file/template (*.axowks)"
              class      = "Altaxo.Main.Commands.LoadWorksheet"
              extensions = "*.axowks"/>

    <FileFilter id         = "AltaxoGraph"
              name       = "Altaxo graph file (*.axogrp)"
              class      = "Altaxo.Main.Commands.LoadGraph"
              extensions = "*.axogrp"/>
    
		<FileFilter id         = "Solution"
		            name       = "Solutions (*.sln)"
		            class      = "ICSharpCode.SharpDevelop.Project.LoadSolution"
		            extensions = "*.sln"/>
		
		<FileFilter id         = "Combine"
		            name       = "${res:SharpDevelop.FileFilter.CombineFiles}"
		            class      = "ICSharpCode.SharpDevelop.Project.LoadSolution"
		            extensions = "*.cmbx"/>
		
		<FileFilter id         = "Prjx"
		            name       = "${res:SharpDevelop.FileFilter.PrjxFiles}"
		            class      = "ICSharpCode.SharpDevelop.Project.LoadSolution"
		            extensions = "*.prjx"/>
		
		<FileFilter id         = "Project"
		            name       = "${res:SharpDevelop.FileFilter.ProjectFiles}"
		            class      = "ICSharpCode.SharpDevelop.Project.LoadProject"
		            extensions = "*.vbproj;*.csproj"/>
		
		<FileFilter id         = "AllFiles"
		            name       = "${res:SharpDevelop.FileFilter.AllFiles}"
		            extensions = "*.*"/>
	</Path>
	
	<!-- Project browser Paths -->
	<Path name = "/SharpDevelop/Pads/ProjectBrowser/ToolBar/Standard">
		<Condition name = "SolutionOpen" action="Disable">
			<ToolbarItem id      = "Properties"
			             icon    = "Icons.16x16.PropertiesIcon"
			             tooltip = "${res:MainWindow.Windows.PropertiesScoutLabel}"
			             class   = "ICSharpCode.SharpDevelop.Project.Commands.ShowPropertiesForNode"/>
			<ToolbarItem id = "PropertySeparator" type = "Separator"/>
			<ToolbarItem id      = "ShowAll"
			             type    = "CheckBox"
			             icon    = "ProjectBrowser.Toolbar.ShowHiddenFiles"
			             tooltip = "${res:Gui.ProjectBrowser.ShowAllFiles}"
			             class   = "ICSharpCode.SharpDevelop.Project.Commands.ToggleShowAll"/>
			<ToolbarItem id      = "Refresh"
			             icon    = "ProjectBrowser.Toolbar.Refresh"
			             tooltip = "${res:AddIns.HtmlHelp2.Refresh}"
			             class   = "ICSharpCode.SharpDevelop.Project.Commands.RefreshProjectBrowser"/>
		</Condition>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ProjectBrowser/ToolBar/File">
		<ToolbarItem id      = "OpenFile"
		             icon    = "Icons.16x16.OpenFileIcon"
		             tooltip = "Open"
		             class   = "ICSharpCode.SharpDevelop.Project.Commands.OpenFileEvent"/>
	</Path>
	
	<Path path = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/SolutionNode">
		<MenuItem id = "Build"
		          label = "${res:XML.MainMenu.BuildMenu.BuildSolution}"
		          shortcut = "F8"
		          icon  = "Icons.16x16.BuildCombine"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.Build"/>
		<MenuItem id = "Rebuild"
		          label = "${res:XML.MainMenu.BuildMenu.RebuildSolution}"
		          shortcut = "Alt|F8"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.Rebuild"/>
		<MenuItem id = "Clean"
		          label = "${res:XML.MainMenu.BuildMenu.CleanSolution}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.Clean"/>
		<MenuItem id = "CombineBuildGroupSeparator" type = "Separator"/>
		
		<MenuItem id = "CombineAddMenu" label = "${res:ProjectComponent.ContextMenu.AddMenu}" type = "Menu">
			<MenuItem id    = "AddNewProjectToSolution"
			          label = "${res:ProjectComponent.ContextMenu.NewProject}"
			          icon  = "Icons.16x16.NewProjectIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewProjectToSolution"/>
			<MenuItem id    = "AddExitingProjectToSolution"
			          label = "${res:ProjectComponent.ContextMenu.ExistingProject}"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.AddExitingProjectToSolution"/>
			<MenuItem id    = "Separator1" type = "Separator" />
			<MenuItem id    = "AddItem"
			          label = "${res:ProjectComponent.ContextMenu.AddItem}"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.AddExistingItemToSolution"/>
			<MenuItem id    = "AddNewSolutionFolderToSolution"
			          icon  = "ProjectBrowser.SolutionFolder.CreateNew"
			          label = "${res:ProjectComponent.ContextMenu.NewSolutionFolder}"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewSolutionFolderToSolution"/>
		</MenuItem>
		
		<MenuItem id = "AddSeparator" type = "Separator"/>
		<MenuItem id    = "Paste"
		          label = "${res:XML.MainMenu.EditMenu.Paste}"
		          icon  = "Icons.16x16.PasteIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.PasteProjectBrowserNode"/>
		<MenuItem id       = "Rename"
		          label    = "${res:ProjectComponent.ContextMenu.Rename}"
		          shortcut = "F2"
		          class    = "ICSharpCode.SharpDevelop.Project.Commands.RenameEntryEvent"/>
		<MenuItem id = "Separator3" type = "Separator"/>
		<MenuItem id    = "Properties"
		          icon  = "Icons.16x16.PropertiesIcon"
		          label = "${res:XML.MainMenu.FormatMenu.ShowProperties}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.ShowPropertiesForNode"/>
	</Path>
	
	<Path path = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/SolutionFolderNode">
		<Include id = "CombineAddMenu" item="/SharpDevelop/Pads/ProjectBrowser/ContextMenu/SolutionNode/CombineAddMenu"/>
		
		<MenuItem id = "AddSeparator" type = "Separator"/>
		<MenuItem id    = "Cut"
		          label = "${res:XML.MainMenu.EditMenu.Cut}"
		          type  = "Item"
		          icon  = "Icons.16x16.CutIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.CutProjectBrowserNode"/>
		<MenuItem id    = "Paste"
		          label = "${res:XML.MainMenu.EditMenu.Paste}"
		          type  = "Item"
		          icon  = "Icons.16x16.PasteIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.PasteProjectBrowserNode"/>
		<MenuItem id    = "Remove"
		          type  = "Item"
		          label = "${res:Global.RemoveButtonText}"
		          icon  = "Icons.16x16.DeleteIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
		<MenuItem id       = "Rename"
		          label    = "${res:ProjectComponent.ContextMenu.Rename}"
		          shortcut = "F2"
		          class    = "ICSharpCode.SharpDevelop.Project.Commands.RenameEntryEvent"/>
	</Path>
	
	<Path path = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/SolutionItemNode">
		<MenuItem id = "OpenFile"
		          label = "${res:ProjectComponent.ContextMenu.Open}"
		          icon  = "Icons.16x16.OpenFileIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.OpenFileEvent"/>
		<MenuItem id = "OpenSeparator" type = "Separator" />
		<MenuItem id = "Cut"
		          label = "${res:XML.MainMenu.EditMenu.Cut}"
		          type = "Item"
		          icon = "Icons.16x16.CutIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.CutProjectBrowserNode"/>
		<MenuItem id = "Copy"
		          label = "${res:XML.MainMenu.EditMenu.Copy}"
		          type = "Item"
		          icon = "Icons.16x16.CopyIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.CopyProjectBrowserNode"/>
		<MenuItem id = "Remove"
		          label = "${res:Global.RemoveButtonText}"
		          type = "Item"
		          icon  = "Icons.16x16.DeleteIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
		<MenuItem id       = "Rename"
		          label    = "${res:ProjectComponent.ContextMenu.Rename}"
		          shortcut = "F2"
		          class    = "ICSharpCode.SharpDevelop.Project.Commands.RenameEntryEvent"/>
	</Path>
	
	<Path path = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/ProjectNode">
		<MenuItem id = "Build project"
		          label = "${res:ProjectComponent.ContextMenu.Build}"
		          icon  = "Icons.16x16.BuildCurrentSelectedProject"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.BuildProject"/>
		<MenuItem id = "Rebuild project"
		          label = "${res:ProjectComponent.ContextMenu.Rebuild}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.RebuildProject"/>
		<MenuItem id = "Clean project"
		          label = "${res:ProjectComponent.ContextMenu.Clean}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.CleanProject"/>
		<MenuItem id = "Publish project"
		          label = "${res:XML.MainMenu.BuildMenu.PublishProject}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.PublishProject"/>
		<MenuItem id = "CombineBuildGroupSeparator" type = "Separator"/>
		
		<MenuItem id = "ProjectAddMenu" label = "${res:ProjectComponent.ContextMenu.AddMenu}" type = "Menu" >
			<MenuItem id    = "New Item"
			          label = "${res:ProjectComponent.ContextMenu.NewItem}"
			          icon  = "Icons.16x16.NewDocumentIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewItemsToProject"/>
			<MenuItem id    = "Existing Item"
			          label = "${res:ProjectComponent.ContextMenu.ExistingItem}"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.AddExistingItemsToProject"/>
			<MenuItem id    = "NewFolder"
			          label = "${res:ProjectComponent.ContextMenu.NewFolder}"
			          icon  = "Icons.16x16.NewFolderIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewFolderToProject"/>
		</MenuItem>
		<MenuItem id    = "AddReference"
		          label = "${res:ProjectComponent.ContextMenu.AddReference}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.AddReferenceToProject"/>
		<MenuItem id    = "AddWebReference"
		          label = "${res:ProjectComponent.ContextMenu.AddWebReference}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.AddWebReferenceToProject"/>
		<MenuItem id = "AddSeparator" type = "Separator"/>
		<Include id = "ProjectActions" path="/SharpDevelop/Pads/ProjectBrowser/ContextMenu/ProjectActions"/>
		<MenuItem id = "Separator2" type = "Separator"/>
		<MenuItem id = "Cut"
		          label = "${res:XML.MainMenu.EditMenu.Cut}"
		          type = "Item"
		          icon = "Icons.16x16.CutIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.CutProjectBrowserNode"/>
		<MenuItem id = "Paste"
		          label = "${res:XML.MainMenu.EditMenu.Paste}"
		          type = "Item"
		          icon = "Icons.16x16.PasteIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.PasteProjectBrowserNode"/>
		<MenuItem id = "Remove"
		          label = "${res:Global.RemoveButtonText}"
		          type = "Item"
		          icon  = "Icons.16x16.DeleteIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
		<MenuItem id       = "Rename"
		          label    = "${res:ProjectComponent.ContextMenu.Rename}"
		          shortcut = "F2"
		          class    = "ICSharpCode.SharpDevelop.Project.Commands.RenameEntryEvent"/>
		<MenuItem id = "CutCopyPasteSeparator" type = "Separator"/>
		<MenuItem id    = "Properties"
		          icon  = "Icons.16x16.PropertiesIcon"
		          label = "${res:XML.MainMenu.FormatMenu.ShowProperties}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.ShowPropertiesForNode"/>
	</Path>
	
	<Path name="/SharpDevelop/Pads/ProjectBrowser/ContextMenu/ProjectActions">
		<Condition name="IsProcessRunning" isprocessrunning="False" isdebugging="False" action="Disable">
			<MenuItem id          = "Run"
			          label       = "${res:ProjectComponent.ContextMenu.RunProject}"
			          icon        = "Icons.16x16.RunProgramIcon"
			          class       = "ICSharpCode.SharpDevelop.Project.Commands.RunProject"/>
		</Condition>
		<MenuItem id    = "SetAsStartupProject"
		          label = "${res:ProjectComponent.ContextMenu.SetAsStartupProject}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.SetAsStartupProject"/>
		<MenuItem id = "ExportToHtml"
		          label = "${res:ProjectComponent.ContextMenu.HtmlExport}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.ExportProjectToHtml"/>
		<MenuItem id = "Convert"
		          label = "${res:ICSharpCode.SharpDevelop.Commands.Convert}"
		          type  = "Menu">
			<!-- elements are added by backend bindings -->
		</MenuItem>
		<MenuItem id = "GenerateDocumentation"
		          label = "${res:ProjectComponent.ContextMenu.GenerateDocumentation}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.GenerateProjectDocumentation"/>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/ReferenceFolderNode">
		<MenuItem id    = "AddReference"
		          label = "${res:ProjectComponent.ContextMenu.AddReference}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.AddReferenceToProject"/>
		<MenuItem id    = "AddWebReference"
		          label = "${res:ProjectComponent.ContextMenu.AddWebReference}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.AddWebReferenceToProject"/>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/FileNode">
		<ComplexCondition>
			<Not>
				<Condition name = "Ownerstate" ownerstate = "Missing"/>
			</Not>
			<MenuItem id = "OpenFile"
			          label = "${res:ProjectComponent.ContextMenu.Open}"
			          icon  = "Icons.16x16.OpenFileIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.OpenFileEvent"/>
		</ComplexCondition>
		<Condition name = "Ownerstate" ownerstate = "Missing">
			<MenuItem id = "Remove"
			          label = "${res:Global.RemoveButtonText}"
			          type = "Item"
			          icon  = "Icons.16x16.DeleteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
		</Condition>
		<ComplexCondition>
			<Not>
				<Condition name = "Ownerstate" ownerstate = "Missing"/>
			</Not>
			<MenuItem id = "OpenSeparator" type = "Separator" />
			
			<Condition name = "Ownerstate" ownerstate = "InProject">
				<MenuItem id = "Add" label = "${res:ProjectComponent.ContextMenu.AddMenu}" type="Menu">
					<MenuItem id    = "New Item"
					          label = "${res:ProjectComponent.ContextMenu.NewItem}"
					          icon  = "Icons.16x16.NewDocumentIcon"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewItemsToProject"/>
					<MenuItem id    = "Existing Item"
					          label = "${res:ProjectComponent.ContextMenu.ExistingItem}"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.AddExistingItemsToProject"/>
					<MenuItem id    = "NewFolder"
					          label = "${res:ProjectComponent.ContextMenu.NewFolder}"
					          icon  = "Icons.16x16.NewFolderIcon"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewFolderToProject"/>
				</MenuItem>
				<MenuItem id = "AddSeparator" type = "Separator"  />
			</Condition>
			
			<ComplexCondition>
				<Or>
					<Condition name = "Ownerstate" ownerstate = "InProject"/>
					<Condition name = "Ownerstate" ownerstate = "None"/>
				</Or>
				<Condition name = "Ownerstate" ownerstate = "InProject">
					<MenuItem id    = "ExcludeFile"
					          label = "${res:ProjectComponent.ContextMenu.ExcludeFileFromProject}"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.ExcludeFileFromProject"/>
				</Condition>
				
				<Condition name = "Ownerstate" ownerstate = "None">
					<MenuItem id    = "IncludeFile"
					          label = "${res:ProjectComponent.ContextMenu.IncludeFileInProject}"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.IncludeFileInProject"/>
				</Condition>
				
				<MenuItem id = "ExcludeSeparator" type = "Separator" />
			</ComplexCondition>
			<MenuItem id = "Cut"
			          label = "${res:XML.MainMenu.EditMenu.Cut}"
			          type = "Item"
			          icon = "Icons.16x16.CutIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.CutProjectBrowserNode"/>
			<MenuItem id = "Copy"
			          label = "${res:XML.MainMenu.EditMenu.Copy}"
			          type = "Item"
			          icon = "Icons.16x16.CopyIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.CopyProjectBrowserNode"/>
			<MenuItem id    = "Paste"
			          label = "${res:XML.MainMenu.EditMenu.Paste}"
			          type = "Item"
			          icon  = "Icons.16x16.PasteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.PasteProjectBrowserNode"/>
			<MenuItem id = "Delete"
			          label = "${res:XML.MainMenu.EditMenu.Delete}"
			          type = "Item"
			          icon  = "Icons.16x16.DeleteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
			<MenuItem id = "Rename"
			          label    = "${res:ProjectComponent.ContextMenu.Rename}"
			          shortcut = "F2"
			          class    = "ICSharpCode.SharpDevelop.Project.Commands.RenameEntryEvent"/>
			<MenuItem id = "RenameSeparator" type = "Separator" />
			<MenuItem id    = "Properties"
			          icon  = "Icons.16x16.PropertiesIcon"
			          label = "${res:XML.MainMenu.FormatMenu.ShowProperties}"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.ShowPropertiesForNode"/>
		</ComplexCondition>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/FolderNode">
		<Condition name = "Ownerstate" ownerstate = "Missing">
			<MenuItem id = "CreateMissing"
			          label = "${res:ProjectComponent.ContextMenu.NewFolder}"
			          type  = "Item"
			          icon  = "Icons.16x16.NewFolderIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.CreateMissingCommand"/>
			<MenuItem id = "RemoveMissing"
			          label = "${res:Global.RemoveButtonText}"
			          type  = "Item"
			          icon  = "Icons.16x16.DeleteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
		</Condition>
		<ComplexCondition>
			<Not>
				<Condition name = "Ownerstate" ownerstate = "Missing"/>
			</Not>
			<MenuItem id = "Add" label = "${res:ProjectComponent.ContextMenu.AddMenu}" type="Menu">
				<MenuItem id    = "New Item"
				          label = "${res:ProjectComponent.ContextMenu.NewItem}"
				          icon  = "Icons.16x16.NewDocumentIcon"
				          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewItemsToProject"/>
				<MenuItem id    = "Existing Item"
				          label = "${res:ProjectComponent.ContextMenu.ExistingItem}"
				          class = "ICSharpCode.SharpDevelop.Project.Commands.AddExistingItemsToProject"/>
				<MenuItem id    = "NewFolder"
				          label = "${res:ProjectComponent.ContextMenu.NewFolder}"
				          icon  = "Icons.16x16.NewFolderIcon"
				          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewFolderToProject"/>
			</MenuItem>
			<MenuItem id = "AddSeparator" type = "Separator"  />
			
			<ComplexCondition>
				<Or>
					<Condition name = "Ownerstate" ownerstate = "InProject"/>
					<Condition name = "Ownerstate" ownerstate = "None"/>
				</Or>
				<Condition name = "Ownerstate" ownerstate = "InProject">
					<MenuItem id    = "ExcludeFile"
					          label = "${res:ProjectComponent.ContextMenu.ExcludeFileFromProject}"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.ExcludeFileFromProject"/>
				</Condition>
				
				<Condition name = "Ownerstate" ownerstate = "None">
					<MenuItem id    = "IncludeFile"
					          label = "${res:ProjectComponent.ContextMenu.IncludeFileInProject}"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.IncludeFileInProject"/>
				</Condition>
				
				<MenuItem id = "ExcludeSeparator" type = "Separator" />
			</ComplexCondition>
			
			<MenuItem id = "Cut"
			          label = "${res:XML.MainMenu.EditMenu.Cut}"
			          type = "Item"
			          icon = "Icons.16x16.CutIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.CutProjectBrowserNode"/>
			<MenuItem id    = "Copy"
			          label = "${res:XML.MainMenu.EditMenu.Copy}"
			          type = "Item"
			          icon  = "Icons.16x16.CopyIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.CopyProjectBrowserNode"/>
			<MenuItem id    = "Paste"
			          label = "${res:XML.MainMenu.EditMenu.Paste}"
			          icon  = "Icons.16x16.PasteIcon"
			          type = "Item"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.PasteProjectBrowserNode"/>
			<MenuItem id = "Delete"
			          label = "${res:XML.MainMenu.EditMenu.Delete}"
			          type = "Item"
			          icon  = "Icons.16x16.DeleteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
			<MenuItem id = "Rename"
			          label    = "${res:ProjectComponent.ContextMenu.Rename}"
			          shortcut = "F2"
			          class    = "ICSharpCode.SharpDevelop.Project.Commands.RenameEntryEvent"/>
		</ComplexCondition>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/WebReferencesFolderNode">
		<Condition name = "Ownerstate" ownerstate = "Missing">
			<MenuItem id = "RemoveMissing"
			          label = "${res:Global.RemoveButtonText}"
			          type  = "Item"
			          icon  = "Icons.16x16.DeleteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
		</Condition>
		<ComplexCondition>
			<Not>
				<Condition name = "Ownerstate" ownerstate = "Missing"/>
			</Not>			
			<MenuItem id    = "AddWebReference"
		              label = "${res:ProjectComponent.ContextMenu.AddWebReference}"
		              class = "ICSharpCode.SharpDevelop.Project.Commands.AddWebReferenceToProject"/>
			<MenuItem id = "AddSeparator" type = "Separator"/>
			<MenuItem id = "Delete"
			          label = "${res:XML.MainMenu.EditMenu.Delete}"
			          type = "Item"
			          icon  = "Icons.16x16.DeleteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
			<MenuItem id = "Rename"
			          label    = "${res:ProjectComponent.ContextMenu.Rename}"
			          shortcut = "F2"
			          class    = "ICSharpCode.SharpDevelop.Project.Commands.RenameEntryEvent"/>
		</ComplexCondition>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/WebReferenceNode">
		<Condition name = "Ownerstate" ownerstate = "Missing">
			<MenuItem id = "RemoveMissing"
			          label = "${res:Global.RemoveButtonText}"
			          type  = "Item"
			          icon  = "Icons.16x16.DeleteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
		</Condition>
		<ComplexCondition>
			<Not>
				<Condition name = "Ownerstate" ownerstate = "Missing"/>
			</Not>		
			<MenuItem id = "Refresh"
	                  label = "${res:ProjectComponent.ContextMenu.RefreshWebReference}" 
			          type = "Item"
	                  class = "ICSharpCode.SharpDevelop.Project.Commands.RefreshWebReference"/>
			<MenuItem id = "RefreshSeparator" type = "Separator" />
			<MenuItem id = "Delete"
			          label = "${res:XML.MainMenu.EditMenu.Delete}"
			          type = "Item"
			          icon  = "Icons.16x16.DeleteIcon"
			          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
			<MenuItem id = "Rename"
			          label    = "${res:ProjectComponent.ContextMenu.Rename}"
			          shortcut = "F2"
			          class    = "ICSharpCode.SharpDevelop.Project.Commands.RenameEntryEvent"/>
			<MenuItem id = "PropertiesSeparator" type = "Separator" />
			<MenuItem id = "Properties"
		          icon  = "Icons.16x16.PropertiesIcon"
		          label = "${res:XML.MainMenu.FormatMenu.ShowProperties}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.ShowPropertiesForNode"/>
		</ComplexCondition>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ProjectBrowser/ContextMenu/ReferenceNode">
		<MenuItem id    = "OpenFile"
		          label = "${res:ProjectComponent.ContextMenu.Open}"
		          icon  = "Icons.16x16.OpenFileIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.OpenFileEvent"/>
		
		<MenuItem id   = "OpenSeparator"
		          type = "Separator"  />
		
		<MenuItem id    = "Remove"
		          label = "${res:Global.RemoveButtonText}"
		          icon  = "Icons.16x16.DeleteIcon"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.DeleteProjectBrowserNode"/>
		<MenuItem id = "RemoveSeparator" type = "Separator" />
		<MenuItem id    = "Properties"
		          icon  = "Icons.16x16.PropertiesIcon"
		          label = "${res:XML.MainMenu.FormatMenu.ShowProperties}"
		          class = "ICSharpCode.SharpDevelop.Project.Commands.ShowPropertiesForNode"/>
	</Path>
	
	<!-- END Project Browser Paths-->
	
	<Path name = "/SharpDevelop/Pads/CompilerMessageView/Toolbar">
		<ToolbarItem id      = "CategorySelect"
		             type    = "ComboBox"
		             tooltip = "${res:MainWindow.Windows.CompilerMessageView.ShowOutputFromComboBox.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ShowOutputFromComboBox"/>
		
		<ToolbarItem id    = "CategorySelectSeparator" type  = "Separator"/>
		
		<ToolbarItem id      = "Clear"
		             icon    = "OutputPad.Toolbar.ClearOutputWindow"
		             tooltip = "${res:MainWindow.Windows.CompilerMessageView.ClearAllButton.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ClearOutputWindow"/>
		
		<ToolbarItem id      = "ToggleWordWrap"
		             type    = "CheckBox"
		             icon    = "OutputPad.Toolbar.ToggleWordWrap"
		             tooltip = "${res:MainWindow.Windows.CompilerMessageView.ToggleWordWrapButton.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ToggleMessageViewWordWrap"/>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/CompilerMessageView/ContextMenu">
		<Include id = "Copy" item = "/SharpDevelop/Workbench/MainMenu/Edit/Copy"/>
		<Include id = "SelectAll" item = "/SharpDevelop/Workbench/MainMenu/Edit/SelectAll"/>
		<MenuItem id    = "Clear"
		          icon  = "OutputPad.Toolbar.ClearOutputWindow"
		          label = "${res:MainWindow.Windows.CompilerMessageView.ClearAllButton.ToolTip}"
		          class = "ICSharpCode.SharpDevelop.Gui.ClearOutputWindow"/>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ErrorList/Toolbar">
		<ToolbarItem id      = "Errors"
		             type    = "CheckBox"
		             icon    = "Icons.16x16.Error"
		             label   = "${res:MainWindow.Windows.ErrorList.ErrorButton.Label}"
		             tooltip = "${res:MainWindow.Windows.ErrorList.ErrorButton.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ShowErrorsToggleButton"/>
		
		<ToolbarItem id    = "ErrorsSeparator" type  = "Separator"/>
		
		<ToolbarItem id    = "Warnings"
		             type  = "CheckBox"
		             icon  = "Icons.16x16.Warning"
		             label = "${res:MainWindow.Windows.ErrorList.WarningButton.Label}"
		             tooltip = "${res:MainWindow.Windows.ErrorList.WarningButton.ToolTip}"
		             class = "ICSharpCode.SharpDevelop.Gui.ShowWarningsToggleButton"/>
		<ToolbarItem id    = "WarningsSeparator" type  = "Separator"/>
		
		<ToolbarItem id    = "Messages"
		             type  = "CheckBox"
		             icon  = "Icons.16x16.Information"
		             label = "${res:MainWindow.Windows.ErrorList.MessageButton.Label}"
		             tooltip = "${res:MainWindow.Windows.ErrorList.MessageButton.ToolTip}"
		             class = "ICSharpCode.SharpDevelop.Gui.ShowMessagesToggleButton"/>
	</Path>
	
	<!-- ClassBrowser -->
	<Path name = "/SharpDevelop/Pads/ClassBrowser/Toolbar">
		<ToolbarItem id      = "Back"
		             icon    = "Icons.16x16.BrowserBefore"
		             tooltip = "${res:MainWindow.Windows.ClassBrowser.BackButton.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ClassBrowserNavigateBackward"/>
		<ToolbarItem id      = "Forward"
		             icon    = "Icons.16x16.BrowserAfter"
		             tooltip = "${res:MainWindow.Windows.ClassBrowser.ForwardButton.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ClassBrowserNavigateForward"/>
		
		<ToolbarItem id = "NavigationSeparator" type  = "Separator"/>
		<ToolbarItem id      = "SelectFilter"
		             type    = "DropDownButton"
		             icon    = "Icons.16x16.FindInFiles"
		             tooltip = "${res:MainWindow.Windows.ClassBrowser.ClassViewSettingsButton.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.SelectClassBrowserFilter">
			
			<MenuItem id    = "ShowProjectReferences"
			          type  = "CheckBox"
			          label = "${res:MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowProjectReferences.Label}"
			          class = "ICSharpCode.SharpDevelop.Gui.ShowProjectReferences"/>
			<MenuItem id = "ReferenceSeparator" type = "Separator"  />
			<MenuItem id    = "ShowPublicMembers"
			          type  = "CheckBox"
			          label = "${res:MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowPublicMembers.Label}"
			          class = "ICSharpCode.SharpDevelop.Gui.ShowPublicMembers"/>
			
			<MenuItem id    = "ShowPrivateMembers"
			          type  = "CheckBox"
			          label = "${res:MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowPrivateMembers.Label}"
			          class = "ICSharpCode.SharpDevelop.Gui.ShowPrivateMembers"/>
			
			<MenuItem id    = "ShowProtectedMembers"
			          type  = "CheckBox"
			          label = "${res:MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowProtectedMembers.Label}"
			          class = "ICSharpCode.SharpDevelop.Gui.ShowProtectedMembers"/>
			
			<MenuItem id    = "ShowOtherMembers"
			          type  = "CheckBox"
			          label = "${res:MainWindow.Windows.ClassBrowser.ClassViewSettings.ShowOtherMembers.Label}"
			          class = "ICSharpCode.SharpDevelop.Gui.ShowOtherMembers"/>
		</ToolbarItem>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ClassBrowser/Searchbar">
		<ToolbarItem id      = "Search"
		             type    = "ComboBox"
		             tooltip = "${res:MainWindow.Windows.ClassBrowser.SearchButton.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ClassBrowserSearchTerm"/>
		
		<ToolbarItem id      = "CommitSearch"
		             icon    = "Icons.16x16.FindIcon"
		             tooltip = "${res:MainWindow.Windows.ClassBrowser.CommitSearch.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ClassBrowserCommitSearch"/>
		
		<ToolbarItem id      = "CancelSearch"
		             icon    = "OutputPad.Toolbar.ClearOutputWindow"
		             tooltip = "${res:MainWindow.Windows.ClassBrowser.ClearSearch.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ClassBrowserCancelSearch"/>
	</Path>
	
	<!-- end ClassBrowser -->
	
	<!-- toolbars -->
	<Path name = "/SharpDevelop/Workbench/ToolBar/Standard">
		<ToolbarItem id      = "New"
		             icon    = "Icons.16x16.NewDocumentIcon"
		             tooltip = "${res:XML.MainMenu.FileMenu.New.File.Description}"
		             class   = "ICSharpCode.SharpDevelop.Commands.CreateNewFile"/>
		<ToolbarItem id      = "Open"
		             icon    = "Icons.16x16.OpenFileIcon"
		             tooltip = "${res:XML.MainMenu.FileMenu.Open.File.Description}"
		             class   = "ICSharpCode.SharpDevelop.Commands.OpenFile"/>
		
		<ToolbarItem id      = "OpenProject"
		             tooltip = "${res:XML.MainMenu.FileMenu.Open.Project}"
		             icon    = "Icons.16x16.OpenProjectIcon"
		             class   = "ICSharpCode.SharpDevelop.Project.Commands.LoadSolution"
		/>
		
		<Condition name = "ActiveWindowState" windowstate="Dirty,Untitled" nowindowstate="ViewOnly" action="Disable">
			<ToolbarItem id      = "Save"
			             icon    = "Icons.16x16.SaveIcon"
			             tooltip = "${res:XML.MainMenu.FileMenu.Save.Description}"
			             class   = "ICSharpCode.SharpDevelop.Commands.SaveFile"/>
		</Condition>
		
		<Condition name = "OpenWindowState" openwindowstate="Dirty" action="Disable">
			<ToolbarItem id = "SaveAll"
			             icon = "Icons.16x16.SaveAllIcon"
			             tooltip = "${res:XML.MainMenu.FileMenu.SaveAll.Description}"
			             class = "ICSharpCode.SharpDevelop.Commands.SaveAllFiles"/>
		</Condition>
		
		<ToolbarItem id = "Separator1" type = "Separator"/>
		
		<ToolbarItem id = "Cut"
		             icon = "Icons.16x16.CutIcon"
		             tooltip = "${res:XML.MainMenu.EditMenu.Cut.Description}"
		             loadclasslazy = "false"
		             class = "ICSharpCode.SharpDevelop.Commands.Cut"/>
		<ToolbarItem id = "Copy"
		             icon = "Icons.16x16.CopyIcon"
		             tooltip = "${res:XML.MainMenu.EditMenu.Copy.Description}"
		             loadclasslazy = "false"
		             class = "ICSharpCode.SharpDevelop.Commands.Copy"/>
		<ToolbarItem id = "Paste"
		             icon = "Icons.16x16.PasteIcon"
		             tooltip = "${res:XML.MainMenu.EditMenu.Paste.Description}"
		             loadclasslazy = "false"
		             class = "ICSharpCode.SharpDevelop.Commands.Paste"/>
		<ToolbarItem id = "Delete"
		             icon = "Icons.16x16.DeleteIcon"
		             tooltip = "${res:XML.MainMenu.EditMenu.Delete.Description}"
		             loadclasslazy = "false"
		             class = "ICSharpCode.SharpDevelop.Commands.Delete"/>
		<ToolbarItem id = "UndoRedoSeparator"  type = "Separator"/>
		<ToolbarItem id      = "Undo"
		             icon    = "Icons.16x16.UndoIcon"
		             tooltip = "${res:XML.MainMenu.EditMenu.Undo.Description}"
		             loadclasslazy = "false"
		             class   = "ICSharpCode.SharpDevelop.Commands.Undo"/>
		<ToolbarItem id      = "Redo"
		             icon    = "Icons.16x16.RedoIcon"
		             tooltip = "${res:XML.MainMenu.EditMenu.Redo.Description}"
		             loadclasslazy = "false"
		             class   = "ICSharpCode.SharpDevelop.Commands.Redo"/>
		
		<ToolbarItem id = "CompileSeparator" type = "Separator"/>
		
		<ComplexCondition action="Disable">
			<Or>
				<And>
					<Or>
						<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider"/>
						<Condition name = "WindowActive" activewindow="ICSharpCode.FormsDesigner.FormsDesignerViewContent"/>
					</Or>
					<Condition name = "ActiveViewContentUntitled" activewindowuntitled="False"/>
				</And>
				<Condition name = "SolutionOpen"/>
			</Or>
			<ToolbarItem id      = "Compile"
			             icon    = "Icons.16x16.BuildCombine"
			             tooltip = "${res:XML.MainMenu.RunMenu.Compile.Description}"
			             class   = "ICSharpCode.SharpDevelop.Project.Commands.Build"/>
			
			<ToolbarItem id      = "BuildProject"
			             icon    = "Icons.16x16.BuildCurrentSelectedProject"
			             tooltip = "${res:XML.MainMenu.RunMenu.BuildProject.Description}"
			             class   = "ICSharpCode.SharpDevelop.Project.Commands.Rebuild"/>
			
			<ToolbarItem id = "DebuggerSeparator" type = "Separator"  />
			
			<ComplexCondition>
				<Or>
					<Condition name="IsProcessRunning" isdebugging = "False"/>
					<Not>
						<Condition name="DebuggerSupports" debuggersupports = "ExecutionControl"/>
					</Not>
				</Or>
				<Condition name="IsProcessRunning" isdebugging = "False" action = "Disable">
					<Condition name="DebuggerSupports" debuggersupports = "Start">
						<ToolbarItem id      = "Run"
						             icon    = "Icons.16x16.RunProgramIcon"
						             tooltip = "${res:XML.MainMenu.RunMenu.Run.Description}"
						             class   = "ICSharpCode.SharpDevelop.Project.Commands.Execute"/>
					</Condition>
					
					<Condition name="DebuggerSupports" debuggersupports = "StartWithoutDebugging">
						<ToolbarItem id      = "RunWithoutDebugger"
						             icon    = "Icons.16x16.Debug.StartWithoutDebugging"
						             tooltip = "${res:XML.MainMenu.DebugMenu.RunWithoutDebug.Description}"
						             class   = "ICSharpCode.SharpDevelop.Project.Commands.ExecuteWithoutDebugger"/>
					</Condition>
				</Condition>
			</ComplexCondition>
			
			<Condition name="IsProcessRunning" isdebugging = "True">
				<Condition name="DebuggerSupports" debuggersupports = "ExecutionControl">
					<Condition name="IsProcessRunning" isprocessrunning = "False" action = "Disable">
						<ToolbarItem id      = "Continue"
						             icon    = "Icons.16x16.Debug.Continue"
						             tooltip = "${res:XML.MainMenu.DebugMenu.Continue.Description}"
						             class   = "ICSharpCode.SharpDevelop.Project.Commands.ContinueDebuggingCommand"/>
					</Condition>
					<Condition name="IsProcessRunning" isprocessrunning = "True" action = "Disable">
						<ToolbarItem id      = "Break"
						             icon    = "Icons.16x16.Debug.Break"
						             tooltip = "${res:XML.MainMenu.DebugMenu.Break.Description}"
						             class   = "ICSharpCode.SharpDevelop.Project.Commands.BreakDebuggingCommand"/>
					</Condition>
				</Condition>
			</Condition>
			
			<Condition name="DebuggerSupports" debuggersupports = "Stop">
				<ComplexCondition action = "Disable">
					<Or>
						<Condition name="IsProcessRunning" isdebugging = "True"/>
						<Condition name="IsProcessRunning" isprocessrunning = "True"/>
					</Or>
					<ToolbarItem id = "Stop"
					             icon = "Icons.16x16.StopProcess"
					             tooltip = "${res:XML.MainMenu.DebugMenu.Stop.Description}"
					             class = "ICSharpCode.SharpDevelop.Project.Commands.StopDebuggingCommand"/>
				</ComplexCondition>
			</Condition>
			
			<Condition name="IsProcessRunning" isdebugging = "True">
				<Condition name="DebuggerSupports" debuggersupports = "Stepping">
					<Condition name="IsProcessRunning" isprocessrunning = "False" action = "Disable">
						<ToolbarItem id = "SteppingSeparator" type = "Separator"  />
						<ToolbarItem id      = "Step over"
						             icon    = "Icons.16x16.Debug.StepOver"
						             tooltip = "${res:XML.MainMenu.DebugMenu.StepOver.Description}"
						             class   = "ICSharpCode.SharpDevelop.Project.Commands.StepDebuggingCommand"/>
						<ToolbarItem id      = "Step into"
						             icon    = "Icons.16x16.Debug.StepInto"
						             tooltip = "${res:XML.MainMenu.DebugMenu.StepInto}"
						             class   = "ICSharpCode.SharpDevelop.Project.Commands.StepIntoDebuggingCommand"/>
						<ToolbarItem id      = "Step out"
						             icon    = "Icons.16x16.Debug.StepOut"
						             tooltip = "${res:XML.MainMenu.DebugMenu.StepOut}"
						             class   = "ICSharpCode.SharpDevelop.Project.Commands.StepOutDebuggingCommand"/>
					</Condition>
				</Condition>
			</Condition>
			
			<ToolbarItem id = "ChooseConfigurationSeparator" type = "Separator"/>
		</ComplexCondition>
		<ToolbarItem id    = "ChooseLayout"
		             type  = "ComboBox"
		             class = "ICSharpCode.SharpDevelop.Commands.ChooseLayoutCommand" />
	</Path>
	<!-- end toolbars -->

  <!-- ModifiedForAltaxo context menu of worksheet and graph tabs -->
	<Path name = "/SharpDevelop/Workbench/OpenFileTab/ContextMenu">

    <!-- Graph menu -->
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDGraphViewContent" action="Exclude">
      <MenuItem id="Rename"
                label="${res:XML.MainMenu.GraphMenu.Rename}"
                description="${res:XML.MainMenu.GraphMenu.Rename.Description}"
                class="Altaxo.Graph.Commands.GraphRename" />

      <MenuItem id="Duplicate"
                label="${res:XML.MainMenu.GraphMenu.Duplicate}" 
                icon="Icons.16x16.Duplicate"
                description="${res:XML.MainMenu.GraphMenu.Duplicate.Description}" 
                class="Altaxo.Graph.Commands.DuplicateGraph" />

      <MenuItem id="SaveGraphAsTemplate" 
                  label="${res:XML.MainMenu.FileMenu.SaveGraphAsTemplate}"
                  icon="Icons.16x16.NewDocumentIcon" 
                  description="${res:XML.MainMenu.FileMenu.SaveGraphAsTemplate.Description}"
                  class="Altaxo.Graph.Commands.SaveGraphAsTemplate" />

    </Condition>
    <!-- Worksheet menu -->
    <Condition name = "WindowActive" activewindow="Altaxo.Gui.SharpDevelop.SDWorksheetViewContent" action="Exclude">
      <MenuItem id="Rename" label="${res:XML.MainMenu.WorksheetMenu.Rename}" description="${res:XML.MainMenu.WorksheetMenu.Rename.Description}"
        class="Altaxo.Worksheet.Commands.WorksheetRename" />
      <MenuItem id="Duplicate" label="${res:XML.MainMenu.WorksheetMenu.Duplicate}" description="${res:XML.MainMenu.WorksheetMenu.Duplicate.Description}"
        class="Altaxo.Worksheet.Commands.WorksheetDuplicate" />
      <MenuItem id="AddDataColumns" label="${res:XML.MainMenu.WorksheetMenu.AddDataColumns}" description="${res:XML.MainMenu.WorksheetMenu.AddDataColumns.Description}"
					class="Altaxo.Worksheet.Commands.AddDataColumns" />
        <MenuItem id="Transpose" label="${res:XML.MainMenu.WorksheetMenu.Transpose}" description="${res:XML.MainMenu.WorksheetMenu.Transpose.Description}"
					class="Altaxo.Worksheet.Commands.WorksheetTranspose" />
        <MenuItem id="TableScript" label="${res:XML.MainMenu.WorksheetMenu.TableScript}" description="${res:XML.MainMenu.WorksheetMenu.TableScript.Description}"
					class="Altaxo.Worksheet.Commands.OpenTableScriptDialog" />
        <MenuItem id="ExtractTableData" label="${res:XML.MainMenu.WorksheetMenu.ExtractTableData}" description="${res:XML.MainMenu.WorksheetMenu.ExtractTableData.Description}"
					class="Altaxo.Worksheet.Commands.OpenExtractTableDataScriptDialog" />

      <MenuItem id="SaveWorksheetAs" label="${res:XML.MainMenu.FileMenu.SaveWorksheetAs}" icon="Icons.16x16.SaveIcon"
  description="${res:XML.MainMenu.FileMenu.SaveWorksheetAs.Description}" class="Altaxo.Worksheet.Commands.SaveAs" />
      <MenuItem id="SaveWorksheetAsTemplate" label="${res:XML.MainMenu.FileMenu.SaveWorksheetAsTemplate}"
        icon="Icons.16x16.SaveIcon" description="${res:XML.MainMenu.FileMenu.SaveWorksheetAsTemplate.Description}"
        class="Altaxo.Worksheet.Commands.SaveAsTemplate" />


    </Condition>

    <MenuItem id = "CloseSeparator" type = "Separator" />


    <MenuItem id = "Close"
          label = "${res:OpenFileTabEventHandler.ContextMenu.Close}"
          icon  = "Icons.16x16.CloseFileIcon"
          class = "ICSharpCode.SharpDevelop.Commands.TabStrip.CloseFileTab"/>
    <MenuItem id    = "CloseAll"
		          icon  = "Icons.16x16.CloseAllDocuments"
		          label = "${res:XML.MainMenu.FileMenu.CloseAll}"
		          class = "ICSharpCode.SharpDevelop.Commands.CloseAllWindows" />
    <MenuItem id    = "CloseAllButThis"
		          label = "${res:OpenFileTabEventHandler.ContextMenu.CloseAllButThis}"
		          class = "ICSharpCode.SharpDevelop.Commands.TabStrip.CloseAllButThisFileTab" />

    <MenuItem id="Delete"
              icon="Icons.16x16.DeleteIcon"
              label="${res:XML.MainMenu.EditMenu.Delete}"
              class="ICSharpCode.SharpDevelop.Commands.Delete" />




  </Path>
	
	<Path name = "/SharpDevelop/Views/PropertyPad/ContextMenu">
		<MenuItem id    = "ResetProperty"
		          label = "${res:ICSharpCode.SharpDevelop.Gui.Pads.PropertyPad.ContextMenu.Reset}"
		          class = "ICSharpCode.SharpDevelop.Gui.PropertyPadResetCommand"/>
		<MenuItem id = "Separator"  type = "Separator" />
		<MenuItem id    = "ShowDescription"
		          label = "${res:ICSharpCode.SharpDevelop.Gui.Pads.PropertyPad.ContextMenu.ShowDescription}"
		          class = "ICSharpCode.SharpDevelop.Gui.PropertyPadShowDescriptionCommand"/>
	</Path>
	
	<Path name = "/SharpDevelop/Dialogs/OptionsDialog">
		<DialogPanel id    = "UIOptions"
		             label = "${res:Dialog.Options.TreeViewOptions.SharpDevelopOptionsText}">
			<DialogPanel id    = "SelectCulture"
			             label = "${res:Dialog.Options.IDEOptions.SelectCulture.PanelName}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.IDEOptionPanel"/>
			<DialogPanel id    = "SelectStyle"
			             label = "${res:Dialog.Options.IDEOptions.SelectVisualStyle.PanelName}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.SelectStylePanel"/>
			<DialogPanel id    = "Fullscreen"
			             label = "${res:Dialog.Options.IDEOptions.FullScreen.Title}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.FullscreenPanel"/>
			<DialogPanel id    = "LoadSave"
			             label = "${res:Dialog.Options.IDEOptions.LoadSaveOptions.PanelName}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.LoadSavePanel"/>
			<DialogPanel id    = "TaskListOptions"
			             label = "${res:Dialog.Options.IDEOptions.TaskListOptions.PanelName}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.TaskListOptions"/>
			<DialogPanel id    = "OutputWindowOptions"
			             label = "${res:Dialog.Options.IDEOptions.OutputPanel.Title}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.OutputWindowOptionsPanel"/>
		</DialogPanel>
		<DialogPanel id    = "CodingOptions"
		             label = "${res:Dialog.Options.IDEOptions.CodingOptionsText}">
			<DialogPanel id    = "CodeGeneration"
			             label = "${res:Dialog.Options.IDEOptions.CodeGenerationOptionsPanel.Title}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.CodeGenerationPanel"/>
			<DialogPanel id    = "EditStandardHeaderPanel"
			             label = "${res:Dialog.Options.IDEOptions.EditStandardHeaderPanel.Title}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.EditStandardHeaderPanel"/>
		</DialogPanel>
		
		<DialogPanel id    = "ToolsOptions"
		             label = "${res:Dialog.Options.IDEOptions.ToolsOptionsText}">
			<DialogPanel id    = "ExternalTools"
			             label = "${res:Dialog.Options.ExternalToolsText}"
			             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.ExternalToolPane"/>
		</DialogPanel>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/SharpDevelopSideBar/ContextMenu">
		<Condition name = "Ownerstate" ownerstate = "TabCanBeDeleted" action="Disable">
			<MenuItem id     = "DeleteTab"
			          label = "${res:SideBarComponent.ContextMenu.DeleteTab}"
			          class = "ICSharpCode.SharpDevelop.Commands.SideBarDeleteTabHeader"/>
		</Condition>
		
		<Condition name = "Ownerstate" ownerstate="CanBeRenamed" action="Disable">
			<MenuItem id    = "RenameTab"
		              label = "${res:SideBarComponent.ContextMenu.RenameTab}"
		              class = "ICSharpCode.SharpDevelop.Commands.SideBarRenameTabHeader"/>
		</Condition>
			
		<MenuItem id = "Separator1" type = "Separator" />
		<MenuItem id    = "AddTab"
		          label = "${res:SideBarComponent.ContextMenu.AddTab}"
		          class = "ICSharpCode.SharpDevelop.Commands.SideBarAddTabHeader"/>

		<MenuItem id = "Separator2" type = "Separator" />
		<Condition name = "Ownerstate" ownerstate="CanMoveUp" action="Disable">
			<MenuItem id    = "MoveTabUp"
			          label = "${res:SideBarComponent.ContextMenu.MoveTabUp}"
			          class = "ICSharpCode.SharpDevelop.Commands.SideBarMoveTabUp"/>
		</Condition>
		
		<Condition name = "Ownerstate" ownerstate="CanMoveDown" action="Disable">
			<MenuItem id    = "MoveTabDown"
			          label = "${res:SideBarComponent.ContextMenu.MoveTabDown}"
			          class = "ICSharpCode.SharpDevelop.Commands.SideBarMoveTabDown"/>
		</Condition>
		
		<Include id="CommonContextMenu" path="/SharpDevelop/Workbench/SharpDevelopSideBar/CommonContextMenu"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/SharpDevelopSideBar/SideTab/ContextMenu">
		<Condition name = "Ownerstate" ownerstate="TabCanBeDeleted" action="Disable">
			<MenuItem id = "DeleteTabItem"
		              label = "${res:SideBarComponent.ContextMenu.DeleteTabItem}"
		              class = "ICSharpCode.SharpDevelop.Commands.SideBarDeleteTabItem"/>
		</Condition>
		
		<Condition name = "Ownerstate" ownerstate="CanBeRenamed" action="Disable">
			<MenuItem id = "RenameTabItem"
		              label = "${res:SideBarComponent.ContextMenu.RenameTabItem}"
		              class = "ICSharpCode.SharpDevelop.Commands.SideBarRenameTabItem" />
		</Condition>
		
		<MenuItem id = "Separator1" type = "Separator" />
		<Condition name = "Ownerstate" ownerstate="CanMoveItemUp" action="Disable">
			<MenuItem id = "MoveItemUp"
				      label = "${res:SideBarComponent.ContextMenu.MoveTabItemUp}"
				      class = "ICSharpCode.SharpDevelop.Commands.SideBarMoveActiveItemUp"/>
		</Condition>
		
		<Condition name = "Ownerstate" ownerstate="CanMoveItemDown" action="Disable">
			<MenuItem id = "MoveItemDown"
				      label = "${res:SideBarComponent.ContextMenu.MoveTabItemDown}"
				      class = "ICSharpCode.SharpDevelop.Commands.SideBarMoveActiveItemDown"/>
		</Condition>
		
		<Include id="CommonContextMenu" path="/SharpDevelop/Workbench/SharpDevelopSideBar/CommonContextMenu"/>
	</Path>
	
	<!-- Main Menu -->
	<Path name = "/SharpDevelop/Workbench/MainMenu">
		<MenuItem id = "File" label    = "${res:XML.MainMenu.FileMenu}" type="Menu">
			<MenuItem id = "New" label = "${res:XML.MainMenu.FileMenu.New}" type="Menu">
				<MenuItem id           = "File"
				          label        = "${res:XML.MainMenu.FileMenu.New.File}"
				          icon         = "Icons.16x16.NewDocumentIcon"
				          shortcut     = "Control|N"
				          class        = "ICSharpCode.SharpDevelop.Commands.CreateNewFile"/>
				
				<MenuItem id          = "Project"
				          label       = "${res:XML.MainMenu.FileMenu.New.Project}"
				          icon        = "Icons.16x16.NewProjectIcon"
				          shortcut    = "Control|Shift|N"
				          class       = "ICSharpCode.SharpDevelop.Project.Commands.CreateNewSolution"/>
			</MenuItem>
			
			
			<MenuItem id = "Open" label = "${res:XML.MainMenu.FileMenu.Open}" type="Menu">
				<MenuItem id          = "File"
				          label       = "${res:XML.MainMenu.FileMenu.Open.File}"
				          icon        = "Icons.16x16.OpenFileIcon"
				          shortcut    = "Control|O"
				          class       = "ICSharpCode.SharpDevelop.Commands.OpenFile"/>
				
				<MenuItem id = "Project"
				          label = "${res:XML.MainMenu.FileMenu.Open.Project}"
				          icon = "Icons.16x16.OpenProjectIcon"
				          shortcut = "Control|Shift|O"
				          class = "ICSharpCode.SharpDevelop.Project.Commands.LoadSolution"/>
			</MenuItem>
			
			<MenuItem id = "Close" label = "${res:XML.MainMenu.FileMenu.Close}" type="Menu">
				<Condition name = "WindowActive" activewindow="*" action="Disable">
					<MenuItem id = "CloseFile"
					          label = "${res:XML.MainMenu.FileMenu.Close.File}"
					          icon  = "Icons.16x16.CloseFileIcon"
					          shortcut = "Control|F4"
					          class ="ICSharpCode.SharpDevelop.Commands.CloseFile"/>
				</Condition>
				<Condition name = "SolutionOpen" action="Disable">
					<MenuItem id = "CloseCombine"
					          label = "${res:XML.MainMenu.FileMenu.Close.Project}"
					          shortcut = "Control|Shift|F4"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.CloseSolution"/>
				</Condition>
			</MenuItem>
			
			<MenuItem id = "ReloadSeparator" type = "Separator"  />
			<Condition name = "WindowActive" activewindow="*" action="Disable">
				<MenuItem id = "Reloadfile"
				          label = "${res:XML.MainMenu.FileMenu.Reload}"
				          shortcut = "Shift|Control|U"
				          class = "ICSharpCode.SharpDevelop.Commands.ReloadFile" />
			</Condition>
			
			<MenuItem id = "SaveSeparator" type = "Separator"  />
			
			<Condition name = "ActiveWindowState" windowstate="Dirty, Untitled" nowindowstate="ViewOnly" action="Disable">
				<MenuItem id = "Save"
				          label = "${res:XML.MainMenu.FileMenu.Save}"
				          icon = "Icons.16x16.SaveIcon"
				          shortcut = "Control|S"
				          class = "ICSharpCode.SharpDevelop.Commands.SaveFile"/>
			</Condition>
			
			<Condition name = "ActiveWindowState" windowstate="None" nowindowstate="ViewOnly" action="Disable">
				<MenuItem id = "SaveAs"
				          label = "${res:XML.MainMenu.FileMenu.SaveAs}"
				          class = "ICSharpCode.SharpDevelop.Commands.SaveFileAs"/>
			</Condition>
			
			<Condition name = "OpenWindowState" openwindowstate="Dirty" action="Disable">
				<MenuItem id = "SaveAll"
				          label = "${res:XML.MainMenu.FileMenu.SaveAll}"
				          icon = "Icons.16x16.SaveAllIcon"
				          shortcut = "Control|Shift|S"
				          class = "ICSharpCode.SharpDevelop.Commands.SaveAllFiles"/>
			</Condition>
			
			<MenuItem id = "PrintSeparator" type = "Separator"  />
			<Condition name = "WindowActive" activewindow="*" action="Disable">
				<MenuItem id = "Print"
				          label = "${res:XML.MainMenu.FileMenu.Print}"
				          icon = "Icons.16x16.Print"
				          shortcut = "Control|P"
				          class = "ICSharpCode.SharpDevelop.Commands.Print"/>
				<MenuItem id = "PrintPreview"
				          label = "${res:XML.MainMenu.FileMenu.PrintPreview}"
				          icon = "Icons.16x16.PreView"
				          class = "ICSharpCode.SharpDevelop.Commands.PrintPreview"/>
			</Condition>
			
			<MenuItem id = "RecentSeparator" type = "Separator"  />
			<MenuItem id = "RecentFiles"    attribute = "RecentFiles" label = "${res:XML.MainMenu.FileMenu.RecentFiles}" type="Menu">
				<MenuItem id = "RecentFilesBuilder" type = "Builder" class = "ICSharpCode.SharpDevelop.Commands.RecentFilesMenuBuilder" />
				<MenuItem id = "RecentFilesSeparator" type = "Separator"  />
				<MenuItem id = "ClearRecentFiles"
				          label = "${res:XML.MainMenu.FileMenu.ClearRecentFiles}"
				          class = "ICSharpCode.SharpDevelop.Commands.ClearRecentFiles" />
			</MenuItem>
			
			<MenuItem id = "RecentProjects" attribute = "RecentProjects" label = "${res:XML.MainMenu.FileMenu.RecentProjects}" type="Menu">
				<MenuItem id = "RecentProjectsBuilder" type = "Builder" class = "ICSharpCode.SharpDevelop.Commands.RecentProjectsMenuBuilder" />
				<MenuItem id = "RecentProjectsSeparator" type = "Separator"  />
				<MenuItem id = "ClearRecentFiles"
				          label = "${res:XML.MainMenu.FileMenu.ClearRecentProjects}"
				          class = "ICSharpCode.SharpDevelop.Commands.ClearRecentProjects" />
			</MenuItem>
			
			<MenuItem id = "ExitSC:eparator" type = "Separator"  />
			<MenuItem id = "Exit"
			          label = "${res:XML.MainMenu.FileMenu.Exit}"
			          icon = "Icons.16x16.CancelIcon"
			          class = "ICSharpCode.SharpDevelop.Commands.ExitWorkbenchCommand" />
		</MenuItem> <!-- END File menu -->
		
		<MenuItem id = "Edit" label = "${res:XML.MainMenu.EditMenu}" type="Menu">
			<MenuItem id = "Undo"
			          label = "${res:XML.MainMenu.EditMenu.Undo}"
			          icon = "Icons.16x16.UndoIcon"
			          type = "Item"
			          shortcut = "Control|Z"
			          loadclasslazy = "false"
			          class = "ICSharpCode.SharpDevelop.Commands.Undo"/>
			<MenuItem id = "Redo"
			          label = "${res:XML.MainMenu.EditMenu.Redo}"
			          icon = "Icons.16x16.RedoIcon"
			          type = "Item"
			          shortcut = "Control|Y"
			          loadclasslazy = "false"
			          class = "ICSharpCode.SharpDevelop.Commands.Redo"/>
			<MenuItem id = "Separator1" type = "Separator"  />
			<MenuItem id = "Cut"
			          label = "${res:XML.MainMenu.EditMenu.Cut}"
			          icon = "Icons.16x16.CutIcon"
			          type = "Item"
			          shortcut = "Control|X"
			          loadclasslazy = "false"
			          class = "ICSharpCode.SharpDevelop.Commands.Cut"/>
			<MenuItem id = "Copy"
			          label = "${res:XML.MainMenu.EditMenu.Copy}"
			          icon = "Icons.16x16.CopyIcon"
			          type = "Item"
			          shortcut = "Control|C"
			          loadclasslazy = "false"
			          class = "ICSharpCode.SharpDevelop.Commands.Copy"/>
			<MenuItem id = "Paste"
			          label = "${res:XML.MainMenu.EditMenu.Paste}"
			          icon = "Icons.16x16.PasteIcon"
			          type = "Item"
			          shortcut = "Control|V"
			          loadclasslazy = "false"
			          class = "ICSharpCode.SharpDevelop.Commands.Paste"/>
			<MenuItem id = "Delete"
			          label = "${res:XML.MainMenu.EditMenu.Delete}"
			          icon = "Icons.16x16.DeleteIcon"
			          type = "Item"
			          loadclasslazy = "false"
			          class = "ICSharpCode.SharpDevelop.Commands.Delete"/>
			<MenuItem id = "SelectAll"
			          label = "${res:XML.MainMenu.EditMenu.SelectAll}"
			          type = "Item"
			          shortcut = "Control|A"
			          loadclasslazy = "false"
			          class = "ICSharpCode.SharpDevelop.Commands.SelectAll"/>
			<MenuItem id = "Separator4" type = "Separator"  />
			<ComplexCondition action="Disable">
				<Or>
					<Condition name = "WindowActive" activewindow="*"/>
					<Condition name = "SolutionOpen"/>
				</Or>
				<MenuItem id = "WordCount"
				          label = "${res:XML.MainMenu.EditMenu.WordCount}"
				          class = "ICSharpCode.SharpDevelop.Commands.WordCount"/>
			</ComplexCondition>
		</MenuItem> <!-- end EDIT menu -->
		
		<MenuItem id = "View" label = "${res:XML.MainMenu.ViewMenu}" type="Menu">
			<MenuItem id    = "MainViewMenuBuilder"
			          type  = "Builder"
			          class = "ICSharpCode.SharpDevelop.Commands.MainViewMenuBuilder" />
			
			<MenuItem id = "Tools" label = "${res:XML.MainMenu.ViewMenu.ToolsMenu}" type="Menu">
				<MenuItem id    = "ToolsViewMenuBuilder"
				          type  = "Builder"
				          class = "ICSharpCode.SharpDevelop.Commands.ToolsViewMenuBuilder" />
			</MenuItem>
			
			<MenuItem id = "ViewItemsSeparator" type = "Separator" />
			<MenuItem id = "FullScreen"
			          label         = "${res:XML.MainMenu.ViewMenu.FullScreen}"
			          icon        = "Icons.16x16.FullScreen"
			          class       = "ICSharpCode.SharpDevelop.Commands.ToggleFullscreenCommand" />
		</MenuItem> <!-- end VIEW menu -->
		
		<Condition name = "ProjectActive" activeproject="*">
			<MenuItem id = "Project" label = "${res:XML.MainMenu.ProjectMenu}" type="Menu">
				<MenuItem id = "ProjectAddMenu" label = "${res:ProjectComponent.ContextMenu.AddMenu}" type = "Menu" >
					<MenuItem id    = "New Item"
					          label = "${res:ProjectComponent.ContextMenu.NewItem}"
					          icon  = "Icons.16x16.NewDocumentIcon"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewItemsToProject"/>
					<MenuItem id    = "Existing Item"
					          label = "${res:ProjectComponent.ContextMenu.ExistingItem}"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.AddExistingItemsToProject"/>
					<MenuItem id    = "NewFolder"
					          label = "${res:ProjectComponent.ContextMenu.NewFolder}"
					          icon  = "Icons.16x16.NewFolderIcon"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.AddNewFolderToProject"/>
				</MenuItem>
				<MenuItem id    = "AddReference"
				          label = "${res:ProjectComponent.ContextMenu.AddReference}"
				          class = "ICSharpCode.SharpDevelop.Project.Commands.AddReferenceToProject"/>
				<MenuItem id    = "AddWebReference"
		          	          label = "${res:ProjectComponent.ContextMenu.AddWebReference}"
		          	          class = "ICSharpCode.SharpDevelop.Project.Commands.AddWebReferenceToProject"/>
				<MenuItem id = "AddSeparator" type = "Separator"/>
				<Include id = "ProjectActions" path="/SharpDevelop/Pads/ProjectBrowser/ContextMenu/ProjectActions"/>
				<MenuItem id = "Separator2" type = "Separator" />
				<MenuItem id = "Options"
				          label = "${res:XML.MainMenu.ProjectMenu.Options}"
				          class = "ICSharpCode.SharpDevelop.Project.Commands.ViewProjectOptions"/>
			</MenuItem>
		</Condition> <!-- end PROJECT menu -->
		
		<MenuItem id = "Build" label = "${res:XML.MainMenu.BuildMenu}" type="Menu">
			<ComplexCondition action="Disable">
				<Or>
					<And>
						<Or>
							<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider"/>
							<Condition name = "WindowActive" activewindow="ICSharpCode.FormsDesigner.FormsDesignerViewContent"/>
						</Or>
						<Condition name = "ActiveViewContentUntitled" activewindowuntitled="False"/>
					</And>
					<Condition name = "SolutionOpen"/>
				</Or>
				<MenuItem id       = "Build"
				          label    = "${res:XML.MainMenu.BuildMenu.BuildSolution}"
				          shortcut = "F8"
				          icon     = "Icons.16x16.BuildCombine"
				          class    = "ICSharpCode.SharpDevelop.Project.Commands.Build"/>
				<MenuItem id       = "Rebuild"
				          label    = "${res:XML.MainMenu.BuildMenu.RebuildSolution}"
				          shortcut = "Alt|F8"
				          class    = "ICSharpCode.SharpDevelop.Project.Commands.Rebuild"/>
				<MenuItem id    = "Clean"
				          label = "${res:XML.MainMenu.BuildMenu.CleanSolution}"
				          class = "ICSharpCode.SharpDevelop.Project.Commands.Clean"/>
				<Condition name = "ProjectActive" activeproject="*">
					<MenuItem id = "Separator1" type = "Separator" />
					<MenuItem id       = "Build project"
					          label    = "${res:XML.MainMenu.BuildMenu.BuildProject}"
					          shortcut = "F9"
					          icon     = "Icons.16x16.BuildCurrentSelectedProject"
					          class    = "ICSharpCode.SharpDevelop.Project.Commands.BuildProject"/>
					<MenuItem id       = "Rebuild project"
					          label    = "${res:XML.MainMenu.BuildMenu.RebuildProject}"
					          shortcut = "Alt|F9"
					          class    = "ICSharpCode.SharpDevelop.Project.Commands.RebuildProject"/>
					<MenuItem id    = "Clean project"
					          label = "${res:XML.MainMenu.BuildMenu.CleanProject}"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.CleanProject"/>
					<MenuItem id    = "Publish project"
					          label = "${res:XML.MainMenu.BuildMenu.PublishProject}"
					          class = "ICSharpCode.SharpDevelop.Project.Commands.PublishProject"/>
				</Condition>
				<MenuItem id = "Separator2" type = "Separator" />
				<MenuItem id = "SetConfiguration"
				          label = "${res:XML.MainMenu.BuildMenu.SetConfiguration}"
				          type = "Menu">
					<MenuItem id = "ConfigurationBuilder" type = "Builder" class = "ICSharpCode.SharpDevelop.Project.Commands.SetConfigurationMenuBuilder"/>
				</MenuItem>
			</ComplexCondition>
		</MenuItem> <!-- end RUN menu -->
		
		<MenuItem id = "Debug" label = "${res:XML.MainMenu.DebugMenu}" type="Menu">
			<ComplexCondition action="Disable">
				<Or>
					<And>
						<Or>
							<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider"/>
							<Condition name = "WindowActive" activewindow="ICSharpCode.FormsDesigner.FormsDesignerViewContent"/>
						</Or>
						<Condition name = "ActiveViewContentUntitled" activewindowuntitled="False"/>
					</And>
					<Condition name = "SolutionOpen"/>
				</Or>
				
				<Condition name="DebuggerSupports" debuggersupports = "Start">
					<Condition name="IsProcessRunning" isdebugging="False" action="Disable">
						<MenuItem id       = "Run"
						          label    = "${res:XML.MainMenu.RunMenu.Run}"
						          icon     = "Icons.16x16.RunProgramIcon"
						          shortcut = "F5"
						          class    = "ICSharpCode.SharpDevelop.Project.Commands.Execute"/>
					</Condition>
				</Condition>
				
				<Condition name="DebuggerSupports" debuggersupports = "StartWithoutDebugging">
					<Condition name="IsProcessRunning" isdebugging="False" action="Disable">
						<MenuItem id       = "RunWithoutDebugger"
						          label    = "${res:XML.MainMenu.DebugMenu.RunWithoutDebug}"
						          icon     = "Icons.16x16.Debug.StartWithoutDebugging"
						          shortcut = "Control|F5"
						          class    = "ICSharpCode.SharpDevelop.Project.Commands.ExecuteWithoutDebugger"/>
					</Condition>
				</Condition>
				
				<Condition name="DebuggerSupports" debuggersupports = "Stop">
					<Condition name="IsProcessRunning" isdebugging="True" action="Disable">
						<MenuItem id    = "Stop"
						          label = "${res:XML.MainMenu.DebugMenu.Stop}"
						          icon  = "Icons.16x16.StopProcess"
						          class = "ICSharpCode.SharpDevelop.Project.Commands.StopDebuggingCommand"/>
					</Condition>
				</Condition>
				
				<Condition name="DebuggerSupports" debuggersupports = "ExecutionControl">
					<MenuItem id = "ExecutionControlSeparator" type = "Separator" />
					<Condition name="IsProcessRunning" isprocessrunning = "True" isdebugging = "True" action = "Disable">
						<MenuItem id       = "Break"
						          label    = "${res:XML.MainMenu.DebugMenu.Break}"
						          icon     = "Icons.16x16.Debug.Break"
						          shortcut = "Control|Alt|B"
						          class    = "ICSharpCode.SharpDevelop.Project.Commands.BreakDebuggingCommand"/>
					</Condition>
					<Condition name="IsProcessRunning" isprocessrunning = "False" isdebugging = "True" action = "Disable">
						<MenuItem id       = "Continue"
						          label    = "${res:XML.MainMenu.DebugMenu.Continue}"
						          icon     = "Icons.16x16.Debug.Continue"
						          shortcut = "F6"
						          class    = "ICSharpCode.SharpDevelop.Project.Commands.ContinueDebuggingCommand"/>
					</Condition>
				</Condition>
				
				<Condition name="DebuggerSupports" debuggersupports = "Stepping">
					<Condition name="IsProcessRunning"  isprocessrunning = "False" isdebugging = "True" action = "Disable">
						<MenuItem id = "BeforeSteppingSeparator" type = "Separator" />
						<MenuItem id       = "Step over"
						          label    = "${res:XML.MainMenu.DebugMenu.Step}"
						          icon     = "Icons.16x16.Debug.StepOver"
						          shortcut = "F10"
						          class    = "ICSharpCode.SharpDevelop.Project.Commands.StepDebuggingCommand"/>
						<MenuItem id       = "Step into"
						          label    = "${res:XML.MainMenu.DebugMenu.StepInto}"
						          icon     = "Icons.16x16.Debug.StepInto"
						          shortcut = "F11"
						          class    = "ICSharpCode.SharpDevelop.Project.Commands.StepIntoDebuggingCommand"/>
						<MenuItem id       = "Step out"
						          label    = "${res:XML.MainMenu.DebugMenu.StepOut}"
						          icon     = "Icons.16x16.Debug.StepOut"
						          shortcut = "Shift|F11"
						          class    = "ICSharpCode.SharpDevelop.Project.Commands.StepOutDebuggingCommand"/>
					</Condition>
				</Condition>
				
				<MenuItem id = "ToggleBreakpointSeparator" type = "Separator" />
				<MenuItem id       = "Toggle Breakpoint"
				          label    = "Toggle Breakpoint"
				          shortcut = "F7"
				          class    = "ICSharpCode.SharpDevelop.Project.Commands.ToggleBreakpointCommand"/>
			</ComplexCondition>
		</MenuItem> <!-- end DEBUG menu -->
		
		<MenuItem id = "Tools" label = "${res:XML.MainMenu.ToolMenu}" type="Menu">
			<MenuItem id = "ToolBuilder" type="Builder" class = "ICSharpCode.SharpDevelop.Commands.ToolMenuBuilder" />
			<MenuItem id = "Separator1" type = "Separator" />
			<Include id = "ToolList" path = "/Workspace/Tools" />
			<MenuItem id = "Separator2" type = "Separator" />
			
			<ComplexCondition action = "Disable">
				<Or>
					<Condition name = "WindowActive" activewindow="ICSharpCode.FormsDesigner.FormsDesignerViewContent"/>
					<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider"/>
				</Or>
				<Condition name="ActiveContentExtension" activeextension=".cs" action = "Disable">
					<MenuItem id = "ConvertBuffer"
					          label = "${res:XML.MainMenu.ToolMenu.ConvertBufferToVBNET}"
					          class = "ICSharpCode.SharpDevelop.Commands.VBConvertBuffer"/>
				</Condition>
				<Condition name="ActiveContentExtension" activeextension=".vb" action = "Disable">
					<MenuItem id = "ConvertCSharpBuffer"
					          label = "${res:XML.MainMenu.ToolMenu.ConvertBufferToCSharp}"
					          class = "ICSharpCode.SharpDevelop.Commands.CSharpConvertBuffer"/>
				</Condition>
			</ComplexCondition>
			
			<MenuItem id = "Separator3" type = "Separator" />
			
			<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
				<MenuItem id = "InsertColor"
				          label = "${res:XML.MainMenu.ToolMenu.InsColor}"
				          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ShowColorDialog"/>
				<MenuItem id       = "InsertGuid"
				          shortcut = "Control|Shift|G"
				          label    = "${res:XML.MainMenu.ToolMenu.InsGUID}"
				          class    = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.InsertGuidCommand"/>
				<MenuItem id = "Separator4" type = "Separator" />
				
				<MenuItem id = "GenerateCodeAction"
				          label = "${res:XML.MainMenu.ToolMenu.GenerateCode}"
				          shortcut = "Alt|Insert"
				          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.GenerateCodeAction"/>
				<MenuItem id = "ShowQuickHelp"
				          label = "${res:XML.MainMenu.ToolMenu.QuickXmlDoc}"
				          shortcut = "Control|Q"
				          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.QuickDocumentation"/>
			</Condition>
			
			<MenuItem id = "LastSeparator" type = "Separator" />
			
			<MenuItem id = "Options"
			          label = "${res:XML.MainMenu.ToolMenu.Options}"
			          icon = "Icons.16x16.Options"
			          class = "ICSharpCode.SharpDevelop.Commands.OptionsCommand"/>
		</MenuItem> <!-- end TOOLS menu -->
		
		<MenuItem id = "Window" label = "${res:XML.MainMenu.WindowMenu}" type="Menu">
			<Condition name = "WindowActive" activewindow="*"  action="Disable">
				<MenuItem id  = "NextWindow"
				          label = "${res:XML.MainMenu.WindowMenu.NxtWindow}"
				          icon = "Icons.16x16.NextWindowIcon"
				          shortcut = "Control|Tab"
				          class = "ICSharpCode.SharpDevelop.Commands.SelectNextWindow" />
				<MenuItem id = "PrevWindow"
				          label = "${res:XML.MainMenu.WindowMenu.PrvWindow}"
				          icon = "Icons.16x16.PrevWindowIcon"
				          shortcut = "Shift|Control|Tab"
				          class = "ICSharpCode.SharpDevelop.Commands.SelectPrevWindow" />
				<MenuItem id ="NxtPrvSeparator" type = "Separator" />
				<MenuItem id    = "CloseAll"
				          label = "${res:XML.MainMenu.FileMenu.CloseAll}"
				          icon  = "Icons.16x16.CloseAllDocuments"
				          class = "ICSharpCode.SharpDevelop.Commands.CloseAllWindows" />
			</Condition>
			<MenuItem id = "ContentBuilder"  type="Builder" class="ICSharpCode.SharpDevelop.Commands.OpenContentsMenuBuilder"/>
		</MenuItem>	 <!-- end WINDOW menu -->
		
		<MenuItem id = "Help" label = "${res:XML.MainMenu.HelpMenu}" type="Menu">
			<MenuItem id = "DynamicHelp"
			          label = "${res:XML.MainMenu.HelpMenu.DynamicHelp}"
			          icon = "Icons.16x16.HelpIcon"
			          shortcut = "F1"
			          class = "ICSharpCode.SharpDevelop.Commands.ShowSensitiveHelp"/>
			<MenuItem id = "Help"
			          label = "${res:XML.MainMenu.HelpMenu.Topics}"
			          shortcut = "Alt|F1"
			          link = "http://wiki.sharpdevelop.net/"/>
			<MenuItem id = "TipOfTheDay"
			          label = "${res:XML.MainMenu.HelpMenu.Tips}"
			          icon = "Icons.16x16.TipOfTheDay"
			          class = "ICSharpCode.SharpDevelop.Commands.ViewTipOfTheDay" />
			
			<MenuItem id = "Separator1" type = "Separator" />
			<MenuItem id    = "ViewReadme"
			          label = "${res:XML.MainMenu.HelpMenu.ReadMe}"
			          link  = "home://doc/ReadMe.rtf" />
			<MenuItem id    = "ViewStyleguide"
			          label = "${res:XML.MainMenu.HelpMenu.StyleGuide}"
			          link  = "home://doc/technotes/CodingStyleGuide.rtf" />
			<MenuItem id = "Separator2" type = "Separator" />
			<MenuItem id = "Web" label = "${res:XML.MainMenu.HelpMenu.WebMenu}" type="Menu">
				<MenuItem id = "SharpDevelop" label = "SharpDevelop" type="Menu">
					<MenuItem id = "Downloads" label = "Downloads" icon = "Icons.16x16.WebSearchIcon" link = "http://www.sharpdevelop.net/OpenSource/SD/Download/" />
					<MenuItem id = "Forum" label = "Community Forums" icon = "Icons.16x16.WebSearchIcon" link = "http://community.sharpdevelop.net/forums/" />
					<MenuItem id = "Announcement" label = "Announcement List" icon = "Icons.16x16.WebSearchIcon" link = "http://www.sharpdevelop.net/OpenSource/SD/AnnouncementList.aspx" />
					<MenuItem id = "Mail" label = "Send Us a Mail" icon = "Icons.16x16.WebSearchIcon" link = "http://www.sharpdevelop.net/OpenSource/SD/ContactUs.asp" />
				</MenuItem>
				<MenuItem id = "C#" label = "C#" type="Menu">
					<MenuItem id = "C# Help" label = "C# Help" icon = "Icons.16x16.WebSearchIcon" link = "http://www.csharphelp.com" />
					<MenuItem id = "CodeProject" label = "CodeProject" icon = "Icons.16x16.WebSearchIcon" link = "http://www.codeproject.com" />
					<MenuItem id = "C# Corner" label = "C# Corner" icon = "Icons.16x16.WebSearchIcon" link = "http://www.c-sharpcorner.com" />
					<MenuItem id = "GotDotNet" label = "GotDotNet" icon = "Icons.16x16.WebSearchIcon" link = "http://www.gotdotnet.com/" />
				</MenuItem>
				<MenuItem id = "IntegratedProjects" label = "Integrated Projects" type="Menu">
					<MenuItem id = "DockManager Control" label = "DockPanel Suite" icon = "Icons.16x16.WebSearchIcon" link = "http://sourceforge.net/projects/dockpanelsuite/" />
					<MenuItem id = "NUnit" label = "NUnit" icon = "PadIcons.NUnitTest" link = "http://www.nunit.org/" />
					<MenuItem id = "MbUnit" label = "MbUnit" icon = "PadIcons.MbUnitTest" link = "http://www.mbunit.org/" />
					<!--<MenuItem id = "WiX" label = "WiX" icon = "Icons.16x16.WebSearchIcon" link = "http://sourceforge.net/projects/wix/" />-->
					<MenuItem id = "NAnt" label = "NAnt" icon = "NAntAddIn.Icons.16x16.NAntPad" link = "http://nant.sourceforge.net/" />
					<MenuItem id = "NDoc" label = "NDoc" icon = "Icons.16x16.WebSearchIcon" link = "http://ndoc.sourceforge.net/" />
					<MenuItem id = "#ZipLib" label = "#ZipLib" icon = "Icons.16x16.WebSearchIcon" link = "http://www.sharpdevelop.net/OpenSource/SharpZipLib/" />
				</MenuItem>
				<MenuItem id = "NETPlatforms" label = ".NET Platforms" type="Menu">
					<MenuItem id = "MSNET"  label = "MS .NET" icon = "Icons.16x16.WebSearchIcon" link = "http://msdn.microsoft.com/net" />
					<MenuItem id = "Mono"   label = "Mono Project" icon = "Icons.16x16.WebSearchIcon" link = "http://www.mono-project.com/" />
					<MenuItem id = "DotGNU" label = "DotGNU" icon = "Icons.16x16.WebSearchIcon" link = "http://www.dotgnu.org" />
				</MenuItem>
			</MenuItem>
			<MenuItem id = "Separator3" type = "Separator" />
			<MenuItem id = "About"
			          label = "${res:XML.MainMenu.HelpMenu.About}"
			          icon = "Icons.16x16.AboutIcon"
			          class = "ICSharpCode.SharpDevelop.Commands.AboutSharpDevelop" />
		</MenuItem> <!-- end HELP menu -->
	</Path> <!-- end Main Menu -->
	
	
	<!-- TEXT EDITOR -->
	
	<Path name = "/SharpDevelop/Dialogs/OptionsDialog/CodingOptions">
		<DialogPanel id = "CodeTemplates"
		             label = "${res:Dialog.Options.CodeTemplatesText}"
		             class = "ICSharpCode.SharpDevelop.Gui.OptionPanels.CodeTemplatePanel"/>
	</Path>
	
	<Path name = "/AddIns/DefaultTextEditor/Formatter/XML">
		<Class id ="XmlFormatter" class = "ICSharpCode.SharpDevelop.DefaultEditor.XmlFormattingStrategy"/>
	</Path>
	
	<!-- File extensions that should not be searched since they are not opened
	 in a text editor -->
	<Path name="/AddIns/DefaultTextEditor/Search/ExcludedFileExtensions">
    	<String text=".resx"/>
		<String text=".resources"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/DisplayBindings">
		<DisplayBinding id    = "Text"
		                insertafter = "Browser"
		                supportedformats = "Text Files,Source Files"
		                class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.TextEditorDisplayBinding" />
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/ClassMemberContextMenu">
		<MenuItem id = "MenuBuilder" type="Builder" class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ClassMemberMenuBuilder" />
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/ClassBookmarkContextMenu">
		<MenuItem id = "MenuBuilder" type="Builder" class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ClassBookmarkMenuBuilder" />
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ClassBrowser/MemberContextMenu">
		<MenuItem id = "MenuBuilder" type="Builder" class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ClassMemberMenuBuilder" />
	</Path>
	
	<Path name = "/SharpDevelop/Pads/ClassBrowser/ClassContextMenu">
		<MenuItem id = "MenuBuilder" type="Builder" class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ClassBookmarkMenuBuilder" />
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/Common">
		<MenuItem id = "Rename"
		          label = "${res:SharpDevelop.Refactoring.RenameCommand}"
		          class = "ICSharpCode.SharpDevelop.Refactoring.RenameLocalVariableCommand"/>
		<MenuItem id = "FindReferences"
		          label = "${res:SharpDevelop.Refactoring.FindReferencesCommand}"
		          class = "ICSharpCode.SharpDevelop.Refactoring.FindLocalVariableReferencesCommand"/>				  
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/LocalVariableDefinition">
		<Include id = "Common" path = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/Common"/>
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/LocalVariable">
		<Include id = "Common" path = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/Common"/>
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/ParameterDefinition">
		<Include id = "Common" path = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/Common"/>
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/Parameter">
		<Include id = "Common" path = "/SharpDevelop/ViewContent/DefaultTextEditor/Refactoring/Common"/>
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/ContextMenu">
		<MenuItem id = "Refactoring" type = "Builder" class = "ICSharpCode.SharpDevelop.Refactoring.RefactoringMenuBuilder"/>
		<Include id = "Cut" item = "/SharpDevelop/Workbench/MainMenu/Edit/Cut"/>
		<Include id = "Copy" item = "/SharpDevelop/Workbench/MainMenu/Edit/Copy"/>
		<Include id = "Paste" item = "/SharpDevelop/Workbench/MainMenu/Edit/Paste"/>
		<Include id = "Delete" item = "/SharpDevelop/Workbench/MainMenu/Edit/Delete"/>
		<MenuItem id = "Separator1" type = "Separator" />
		<MenuItem id = "Save"
		          label = "${res:XML.MainMenu.FileMenu.Save}"
		          icon = "Icons.16x16.SaveIcon"
		          shortcut = "Control|S"
		          class = "ICSharpCode.SharpDevelop.Commands.SaveFile"/>
		<MenuItem id = "SaveAs"
		          label = "${res:XML.MainMenu.FileMenu.SaveAs}"
		          class = "ICSharpCode.SharpDevelop.Commands.SaveFileAs"/>
		<MenuItem id = "File"
		          label = "${res:XML.MainMenu.FileMenu.Close}"
		          class ="ICSharpCode.SharpDevelop.Commands.CloseFile"/>
		<MenuItem id = "Separator2" type = "Separator" />
		<MenuItem id = "Comment"
		          icon  = "Icons.16x16.CommentRegion"
		          label = "${res:XML.TextAreaContextMenu.CommentUncommentSelection}"
		          class= "ICSharpCode.SharpDevelop.DefaultEditor.Commands.CommentRegion"/>
		<!--		<MenuItem id = "Uncomment"
		          icon  = "Icons.16x16.UnCommentRegion"
                  label = "${res:XML.TextAreaContextMenu.UncommentSelection}"
		          class= "ICSharpCode.SharpDevelop.DefaultEditor.Commands.UncommentRegion"/>-->
		<MenuItem id = "Indent"
		          label = "${res:XML.TextAreaContextMenu.Indent}"
		          shortcut = "Control|I"
		          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.IndentSelection" />
		
		<MenuItem id = "FileMode" label = "${res:XML.TextAreaContextMenu.FileMode}"  type="Menu">
			<MenuItem id = "HighlightBuilder" type="Builder" class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.HighlightingTypeBuilder" />
		</MenuItem>
		
		<MenuItem id = "Separator3" type = "Separator" />
		<MenuItem id = "Options"
		          label = "${res:XML.TextAreaContextMenu.BufferOptions}"
		          icon = "Icons.16x16.PropertiesIcon"
		          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ShowBufferOptions"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/ToolBar/Standard">
		<ToolbarItem id = "SearchSeparator" type = "Separator"/>
		<!--			<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable"> -->
		<ToolbarItem id = "Comment"
		             icon = "Icons.16x16.CommentRegion"
		             tooltip = "${res:XML.TextAreaContextMenu.CommentUncommentSelection}"
		             class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.CommentRegion"/>
		<!--				<ToolbarItem id = "Uncomment"
				             icon = "Icons.16x16.UnCommentRegion"
				             tooltip = "${res:XML.TextAreaContextMenu.UncommentSelection}"
				             class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.UncommentRegion"/> -->
		
		<ToolbarItem id = "SearchSeparator2" type = "Separator"/>
		<ToolbarItem id = "ToggleBookmark"
		             icon = "Bookmarks.ToggleMark"
		             tooltip = "${res:XML.MainMenu.SearchMenu.ToggleBookmark.Description}"
		             class = "ICSharpCode.SharpDevelop.Bookmarks.ToggleBookmark"/>
		<ToolbarItem id = "PrevBookmark"
		             icon = "Bookmarks.GotoPrevInFile"
		             tooltip = "${res:XML.MainMenu.SearchMenu.PrevBookmark.Description}"
		             class = "ICSharpCode.SharpDevelop.Bookmarks.PrevBookmark"/>
		<ToolbarItem id = "NextBookmark"
		             icon = "Bookmarks.GotoNextInFile"
		             tooltip = "${res:XML.MainMenu.SearchMenu.NextBookmark.Description}"
		             class = "ICSharpCode.SharpDevelop.Bookmarks.NextBookmark"/>
		<ToolbarItem id = "ClearBookmarks"
		             icon = "Bookmarks.ClearAll"
		             tooltip = "${res:XML.MainMenu.SearchMenu.ClrBookmark.Description}"
		             class = "ICSharpCode.SharpDevelop.Bookmarks.ClearBookmarks"/>
		<!--			</Condition> -->
	</Path>
	
	
	<Path name = "/SharpDevelop/Workbench/MainMenu">
		<MenuItem id = "Search" insertafter ="View" insertbefore ="Tools" label = "${res:XML.MainMenu.SearchMenu}" type="Menu">
			<MenuItem id = "Find"
			          label = "${res:XML.MainMenu.SearchMenu.Find}"
			          icon = "Icons.16x16.FindIcon"
			          shortcut = "Control|F"
			          class = "SearchAndReplace.Find"/>
			<MenuItem id = "FindNext"
			          label = "${res:XML.MainMenu.SearchMenu.FindNext}"
			          icon = "Icons.16x16.FindNextIcon"
			          shortcut = "F3"
			          class = "SearchAndReplace.FindNext"/>
			<MenuItem id = "Replace"
			          label = "${res:XML.MainMenu.SearchMenu.Replace}"
			          icon = "Icons.16x16.ReplaceIcon"
			          shortcut = "Control|R"
			          class = "SearchAndReplace.Replace"/>
			
			<MenuItem id = "SearchInFilesSeparator" type = "Separator" />
			<!--			<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable"> -->
			<MenuItem id = "ToggleBookmark"
			          label = "${res:XML.MainMenu.SearchMenu.ToggleBookmark}"
			          shortcut = "Control|F2"
			          icon = "Bookmarks.ToggleMark"
			          class = "ICSharpCode.SharpDevelop.Bookmarks.ToggleBookmark"/>
			<MenuItem id = "PrevBookmark"
			          label = "${res:XML.MainMenu.SearchMenu.PrevBookmark}"
			          shortcut = "Alt|F2"
			          icon = "Bookmarks.GotoPrevInFile"
			          class = "ICSharpCode.SharpDevelop.Bookmarks.PrevBookmark"/>
			<MenuItem id = "NextBookmark"
			          label = "${res:XML.MainMenu.SearchMenu.NextBookmark}"
			          shortcut = "F2"
			          icon = "Bookmarks.GotoNextInFile"
			          class = "ICSharpCode.SharpDevelop.Bookmarks.NextBookmark"/>
			<MenuItem id = "ClearBookmarks"
			          label = "${res:XML.MainMenu.SearchMenu.ClrBookmark}"
			          icon = "Bookmarks.ClearAll"
			          class = "ICSharpCode.SharpDevelop.Bookmarks.ClearBookmarks"/>
			<MenuItem id = "Separator2" type = "Separator" />
			<MenuItem id = "GotoLineNr"
			          label = "${res:XML.MainMenu.SearchMenu.GotoLineNr}"
			          shortcut = "Control|G"
			          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.GotoLineNumber"/>
			<MenuItem id = "Separator3" type = "Separator" />
			<MenuItem id = "GotoBrace"
			          label = "${res:XML.MainMenu.SearchMenu.GotoBrace}"
			          shortcut = "Control|B"
			          class = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.GotoMatchingBrace"/>
			<!--			</Condition> -->
		</MenuItem>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/MainMenu/Window">
		<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
			<MenuItem id = "SplitTextEditor"
			          insertafter="NxtPrvSeparator"
			          insertbefore="CloseAll"
			          label = "${res:XML.MainMenu.WindowMenu.Split}"
			          icon  = "Icons.16x16.SplitWindow"
			          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.SplitTextEditor"/>
		</Condition>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/MainMenu/Edit">
		<MenuItem insertafter = "Delete" insertbefore = "SelectAll" id = "Separator2" type = "Separator" />
		<MenuItem insertafter = "Separator2" insertbefore = "Separator3" id = "Format" label = "${res:XML.MainMenu.EditMenu.FormatMenu}" type="Menu">
			<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
				
				<MenuItem id = "RemoveLeadingWs"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.RlWs}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.RemoveLeadingWS"/>
				<MenuItem id = "RemoveTrailingWs"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.RtWs}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.RemoveTrailingWS"/>
				<MenuItem id = "Seperator1" type = "Separator" />
				<MenuItem id = "UpperCase"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.UpperCase}"
				          icon = "Icons.16x16.LowerToUpperCase"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToUpperCase"/>
				<MenuItem id = "LowerCase"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.LowerCase}"
				          icon = "Icons.16x16.UpperToLowerCase"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToLowerCase"/>
				<MenuItem id = "Capitalize"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.Capitalize}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.CapitalizeAction"/>
				<MenuItem id = "InvertCase"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.InvertCase}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.InvertCaseAction"/>
				<MenuItem id = "Separator2" type = "Separator" />
				<MenuItem id = "SortSelection"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.SortLines}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.SortSelection"/>
				<MenuItem id = "Separator3" type = "Separator" />
				<MenuItem id = "Tabs2Spaces"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.Tab2Space}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConvertTabsToSpaces"/>
				<MenuItem id = "Spaces2Tabs"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.Space2Tab}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConvertSpacesToTabs"/>
				<MenuItem id = "LeadingTabs2Spaces"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.LdTab2Space}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConvertLeadingTabsToSpaces"/>
				<MenuItem id = "LeadingSpaces2Tabs"
				          label = "${res:XML.MainMenu.EditMenu.FormatMenu.LdSpace2Tab}"
				          class ="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConvertLeadingSpacesToTabs"/>
			</Condition>
		</MenuItem>
		<MenuItem insertafter = "Format" insertbefore = "Separator3" id = "Folding" label = "${res:XML.MainMenu.EditMenu.FoldingMenu}" type="Menu">
			<Condition name = "WindowActive" activewindow="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.ITextEditorControlProvider" action="Disable">
				<MenuItem id          = "ToggleFolding"
				          label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ToggleFolding}"
				          shortcut    = "Shift|Control|M"
				          class       = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToggleFolding"/>
				<MenuItem id          = "ToggleAllFoldings"
				          label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ToggleAllFoldings}"
				          shortcut    = "Shift|Control|L"
				          class       = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToggleAllFoldings"/>
				<MenuItem id          = "ShowDefinitionsOnly"
				          label       = "${res:XML.MainMenu.EditMenu.FoldingMenu.ShowDefinitions}"
				          shortcut    = "Shift|Control|P"
				          class       = "ICSharpCode.SharpDevelop.DefaultEditor.Commands.ShowDefinitionsOnly"/>
			</Condition>
		</MenuItem>
		<MenuItem insertafter = "Separator2" insertbefore = "SelectAll" id = "Separator3" type = "Separator" />
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/OptionsDialog">
		<DialogPanel id = "General"
		             label = "${res:Dialog.Options.IDEOptions.TextEditor.General.PanelName}"
		             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.GeneralTextEditorPanel"/>
		<DialogPanel id = "Markers"
		             label = "${res:Dialog.Options.IDEOptions.TextEditor.Markers.PanelName}"
		             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.MarkersTextEditorPanel"/>
		<DialogPanel id = "Behavior"
		             label = "${res:Dialog.Options.IDEOptions.TextEditor.Behaviour.PanelName}"
		             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.BehaviorTextEditorPanel"/>
		<DialogPanel id = "CodeCompletion"
		             label = "${res:Dialog.Options.IDEOptions.TextEditor.CodeCompletion.PanelName}"
		             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.CodeCompletionPanel"/>
	</Path>
	
	<Path name = "/SharpDevelop/ViewContent/Browser/Toolbar">
		<ToolbarItem id      = "Back"
		             icon    = "Icons.16x16.BrowserBefore"
		             tooltip = "${res:AddIns.HtmlHelp2.Back}"
		             class   = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.GoBack"/>
		
		<ToolbarItem id      = "Forward"
		             icon    = "Icons.16x16.BrowserAfter"
		             tooltip = "${res:AddIns.HtmlHelp2.Forward}"
		             class   = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.GoForward"/>
		
		<ToolbarItem id      = "Stop"
		             icon    = "Icons.16x16.BrowserCancel"
		             tooltip = "${res:AddIns.HtmlHelp2.Stop}"
		             class   = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.Stop"/>
		
		<ToolbarItem id      = "Refresh"
		             icon    = "Icons.16x16.BrowserRefresh"
		             tooltip = "${res:AddIns.HtmlHelp2.Refresh}"
		             class   = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.Refresh"/>
		
		<ToolbarItem id = "Separator" type  = "Separator"/>
		
		<ToolbarItem id      = "GoHome"
		             icon    = "Icons.16x16.BrowserHome"
		             tooltip = "${res:AddIns.HtmlHelp2.Homepage}"
		             class   = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.GoHome"/>
		
		<ToolbarItem id      = "GoSearch"
		             icon    = "Icons.16x16.FindIcon"
		             tooltip = "${res:AddIns.HtmlHelp2.Search}"
		             class   = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.GoSearch"/>
		
		<ToolbarItem id      = "URLComboBox"
		             type    = "ComboBox"
		             tooltip = "${res:AddIns.HtmlHelp2.EnterURL}"
		             class   = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.UrlComboBox"/>
		
		<ToolbarItem id      = "NewWindow"
		             icon    = "Icons.16x16.BrowserWindow"
		             tooltip = "${res:AddIns.HtmlHelp2.NewWindow}"
		             class   = "ICSharpCode.SharpDevelop.BrowserDisplayBinding.NewWindow"/>
	</Path>
	
	<Path name = "/SharpDevelop/Dialogs/OptionsDialog">
		<DialogPanel id    = "TextEditorOptions"
		             insertafter = "CodingOptions"
		             insertbefore = "ToolsOptions"
		             label = "${res:Dialog.Options.IDEOptions.TextEditorOptionsText}">
			<DialogPanel id = "General"
			             label = "${res:Dialog.Options.IDEOptions.TextEditor.General.PanelName}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.GeneralTextEditorPanel"/>
			<DialogPanel id = "Markers"
			             label = "${res:Dialog.Options.IDEOptions.TextEditor.Markers.PanelName}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.MarkersTextEditorPanel"/>
			<DialogPanel id = "Behavior"
			             label = "${res:Dialog.Options.IDEOptions.TextEditor.Behaviour.PanelName}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.BehaviorTextEditorPanel"/>
			<DialogPanel id = "CodeCompletion"
			             label = "${res:Dialog.Options.IDEOptions.TextEditor.CodeCompletion.PanelName}"
			             class = "ICSharpCode.SharpDevelop.DefaultEditor.Gui.OptionPanels.CodeCompletionPanel"/>
		</DialogPanel>
	</Path>
	
	<Path name = "/SharpDevelop/DefaultEditor/SearchAndReplace/WildcardHelpPath">
		<MenuItem id    = "*Char"
		          label = "* Zero or more of any character" />
		<MenuItem id    = "?Char"
		          label = "? Any single character" />
		<MenuItem id    = "#Char"
		          label = "# Any single digit" />
		<MenuItem id    = "[]Char"
		          label = "[] Any one character in the set" />
		<MenuItem id    = "[!]Char"
		          label = "[!] Any one character not in the set" />
	</Path>
	
	<!-- Note : Most actions are put directly into the control, because
	            they're used for the standalone version too, only put keys in the
	            tree that are sharpdevelop specific, general keys put into TextAreaControl.GenerateDefaultActions --> 
	<Path name = "/AddIns/DefaultTextEditor/EditActions">
		<EditAction id = "TemplateCompletion"  class = "ICSharpCode.SharpDevelop.DefaultEditor.Actions.TemplateCompletion"  keys = "Control|J"/>
		<EditAction id = "CodeCompletionPopup" class = "ICSharpCode.SharpDevelop.DefaultEditor.Actions.CodeCompletionPopup"  keys = "Control|Space"/>
		<EditAction id = "IndentSelection"     class = "ICSharpCode.TextEditor.Actions.IndentSelection"  keys = "Control|I"/>
		<EditAction id = "GoToDefinition"      class = "ICSharpCode.SharpDevelop.DefaultEditor.Actions.GoToDefinition"  keys = "Control|Enter"/>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/BookmarkPad/Toolbar">
		<ToolbarItem id      = "GotoPrev"
		             icon    = "Bookmarks.GotoPrev"
		             tooltip = "${res:MainWindow.Windows.BookmarkPad.GotoPrev.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Bookmarks.GotoPrev"/>
		<ToolbarItem id      = "GotoNext"
		             icon    = "Bookmarks.GotoNext"
		             tooltip = "${res:MainWindow.Windows.BookmarkPad.GotoNext.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Bookmarks.GotoNext"/>
		<ToolbarItem id = "GotoInFolderSeparator" type = "Separator" />
		<ToolbarItem id      = "EnableDisableAll"
		             icon    = "Bookmarks.EnableDisableAll"
		             tooltip = "${res:MainWindow.Windows.BookmarkPad.EnableDisableAll.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Bookmarks.EnableDisableAll"/>
		<ToolbarItem id = "EnableDisableSeparator" type = "Separator" />
		
		<ToolbarItem id      = "DeleteMark"
		             icon    = "Bookmarks.DeleteMark"
		             tooltip = "${res:MainWindow.Windows.BookmarkPad.DeleteMark.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Bookmarks.DeleteMark"/>
	</Path>
	
	<Path name = "/SharpDevelop/Pads/SearchResultPanel/Toolbar">
		<Condition name = "Ownerstate" ownerstate = "DefaultMode" action = "Exclude">
			<ToolbarItem id      = "ExpandAll"
			             icon    = "Icons.16x16.OpenAssembly"
			             tooltip = "${res:MainWindow.Windows.SearchResultPanel.ExpandAll.ToolTip}"
			             class   = "SearchAndReplace.ExpandAll"/>
			
			<ToolbarItem id      = "CollapseAll"
			             icon    = "Icons.16x16.Assembly"
			             tooltip = "${res:MainWindow.Windows.SearchResultPanel.CollapseAll.ToolTip}"
			             class   = "SearchAndReplace.CollapseAll"/>
		</Condition>
		<Condition name = "Ownerstate" ownerstate = "SpecialPanelMode" action = "Exclude">
			<ToolbarItem id      = "BackToNormalView"
			             icon    = "Icons.16x16.Assembly"
			             tooltip = "${res:MainWindow.Windows.SearchResultPanel.BackToNormalView.ToolTip}"
			             class   = "SearchAndReplace.BackToNormalView"/>
		</Condition>
		<ToolbarItem id = "ExpandCollapseSeparator" type = "Separator" />
		
		<ToolbarItem id      = "ShowLast"
		             type    = "DropDownButton"
		             icon    = "Icons.16x16.FindIcon"
		             tooltip = "${res:MainWindow.Windows.SearchResultPanel.ShowLast.ToolTip}"
		             class   = "SearchAndReplace.ShowLastSearchResults"/>
		
		<ToolbarItem id      = "SelectViewMode"
		             type    = "DropDownButton"
		             icon    = "Icons.16x16.FindIcon"
		             tooltip = "${res:MainWindow.Windows.SearchResultPanel.SelectViewMode.ToolTip}"
		             class   = "SearchAndReplace.SelectViewMode"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/ToolBar/Standard">
		<ToolbarItem id = "FindSeparator" type = "Separator" />
		<ToolbarItem id      = "Find"
		             icon    = "Icons.16x16.FindIcon"
		             tooltip = "${res:MainWindow.Windows.ClassBrowser.CommitSearch.ToolTip}"
		             class   = "SearchAndReplace.Find"/>
		
		<ToolbarItem id      = "FindComboBox"
		             type    = "ComboBox"
		             tooltip = "${res:MainWindow.Windows.ClassBrowser.CommitSearch.ToolTip}"
		             class   = "SearchAndReplace.FindComboBox"/>
	</Path>
	
	<Path name = "/Workspace/Icons">
		<!-- Resources -->
		<Icon id         = "ResourceFileIcon"
		      extensions = ".resources,.resx"
		      resource   = "Icons.16x16.ResourceFileIcon" />
		
		<!-- XML -->
		<Icon id         = "XmlFileIcon"
		      extensions = ".xml"
		      resource   = "FileIcons.XmlIcon" />
		
		<Icon id         = "DtdFileIcon"
		      extensions = ".dtd"
		      resource   = "Icons.16x16.DTDIcon"/>
		
		<Icon id         = "XsdFileIcon"
		      extensions = ".xsd"
		      resource   = "Icons.16x16.XSDIcon"/>
		
		<Icon id         = "XslFileIcon"
		      extensions = ".xsl"
		      resource   = "Icons.16x16.XSLIcon"/>
		
		<Icon id         = "HtmlFileIcon"
		      extensions = ".html,.htm"
		      resource   = "Icons.16x16.HTMLIcon"/>
		
		<Icon id         = "AspFileIcon"
		      extensions = ".asp,.aspx"
		      resource   = "Icons.16x16.ASPFileIcon"/>
		
		<Icon id         = "AddInFileIcon"
		      extensions = ".addin"
		      resource   = "Icons.16x16.AddInIcon" />
		
		<!-- TextFiles -->
		<Icon id         = "TextFileIcon"
		      extensions = ".txt,.doc"
		      resource   = "Icons.16x16.TextFileIcon"/>
		
		<Icon id         = "CssFileIcon"
		      extensions = ".css"
		      resource   = "Icons.16x16.CSSIcon"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/MainMenu/View">
		<MenuItem id    = "Debugger"
		          label = "${res:XML.MainMenu.ViewMenu.DebugMenu}"
		          type  = "Menu"
		          insertafter  = "Tools"
		          insertbefore = "ViewItemsSeparator">
			<MenuItem id    = "DebugViewMenuBuilder"
			          type  = "Builder"
			          class = "ICSharpCode.SharpDevelop.Commands.DebugViewMenuBuilder"/>
		</MenuItem>
	</Path>
	
	<Path name = "/SharpDevelop/Views/ProjectBrowser/NodeBuilders">
		<Class id = "DefaultBuilder"
		       class = "ICSharpCode.SharpDevelop.Project.DefaultDotNetNodeBuilder"/>
	</Path>
	
	<Path name = "/AddIns/DefaultTextEditor/CodeGenerator">
		<Class id="ConstructorCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ConstructorCodeGenerator"/>
		<Class id="GetterCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.GetterCodeGenerator"/>
		<Class id="SetterCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.SetterCodeGenerator"/>
		<Class id="GetterAndSetterCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.GetterAndSetterCodeGenerator"/>
		<Class id="OnXXXMethodsCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.OnXXXMethodsCodeGenerator"/>
		<Class id="OverrideMethodsCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.OverrideMethodsCodeGenerator"/>
		<Class id="OverridePropertiesCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.OverridePropertiesCodeGenerator"/>
		<Class id="InterfaceImplementorCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.InterfaceImplementorCodeGenerator"/>
		<Class id="AbstractClassImplementorCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.AbstractClassImplementorCodeGenerator"/>
		<Class id="ToStringCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.ToStringCodeGenerator"/>
		<Class id="EqualsCodeGenerator"
		       class="ICSharpCode.SharpDevelop.DefaultEditor.Commands.EqualsCodeGenerator"/>
	</Path>
	
	<Path name = "/SharpDevelop/Workbench/DependentFileExtensions">
		<String id = "FormsDesignerGeneratedCode" text=".Designer${Extension}"/>
		<String id = "FormsDesignerResources"     text=".resx"/>
	</Path>

  <Path name="/SharpDevelop/Services/ParserService/SingleFileGacReferences">
    <String id = "AltaxoCore" text ="AltaxoCore"/>
    <String id = "AltaxoBase" text ="AltaxoBase"/>
    <String id = "System" text = "System"/>
    <String id = "AltaxoSDGui" text ="AltaxoSDGui"/>
    <String id = "System.Data" text = "System.Data"/>
    <String id = "System.Drawing" text = "System.Drawing"/>
    <String id = "System.Windows.Forms" text = "System.Windows.Forms"/>
    <String id = "System.Xml" text = "System.Xml"/>
  </Path>
  
</AddIn>
