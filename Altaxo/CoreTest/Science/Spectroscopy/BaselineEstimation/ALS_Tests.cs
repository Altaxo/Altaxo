#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2022 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using Altaxo.Calc;
using Xunit;

namespace Altaxo.Science.Spectroscopy.BaselineEstimation
{
  public class ALS_Tests
  {
    private static readonly double[] _afterOneIteration = new double[]
    {
       9.8545073 ,  10.93813911,  12.02177237,  13.10541916,
        14.18909134,  15.2728097 ,  16.35659316,  17.4404679 ,
        18.52445653,  19.60858727,  20.69288309,  21.77737087,
        22.86207055,  23.94700432,  25.03218574,  26.1176289 ,
        27.20333755,  28.2893143 ,  29.3755497 ,  30.46203141,
        31.54873333,  32.63562477,  33.72265952,  34.80978502,
        35.89693148,  36.98402104,  38.07095684,  39.15763219,
        40.24391969,  41.32968037,  42.41475281,  43.4989623 ,
        44.58210998,  45.66398199,  46.74433869,  47.82292374,
        48.8994534 ,  49.97362569,  51.04510962,  52.1135545 ,
        53.17857914,  54.23978126,  55.29672677,  56.34895917,
        57.39598904,  58.43730341,  59.47235545,  60.50057471,
        61.52136334,  62.53414064,  63.53843786,  64.53407243,
        65.52122638,  66.50036794,  67.47207726,  68.43695166,
        69.39556106,  70.34845178,  71.29613623,  72.23910336,
        73.17780913,  74.11268713,  75.04413915,  75.97254589,
        76.89825756,  77.82160469,  78.74288879,  79.66239319,
        80.58037376,  81.49706976,  82.41269465,  83.3274469 ,
        84.24150089,  85.15501768,  86.06813595,  86.98098281,
        87.89366471,  88.80627826,  89.71890116,  90.63160304,
        91.54443632,  92.45744714,  93.37066616,  94.28411951,
        95.19781956,  96.11177587,  97.02598603,  97.94044648,
        98.85514344,  99.77006369, 100.68518548, 101.60048936,
       102.515949  , 103.4315421 , 104.34724118, 105.26302446,
       106.17886668, 107.09474993, 108.01065455, 108.9265699
    };
    private static readonly double[] _afterTwoIterations = new double[]
    {
        10.20841532,  11.21830459,  12.22819386,  13.23808314,
        14.24797014,  15.25785261,  16.2677258 ,  17.27758497,
        18.28742271,  19.29723163,  20.30700144,  21.31672187,
        22.3263796 ,  23.33596129,  24.34545036,  25.35483022,
        26.36408085,  27.37318865,  28.38213639,  29.39091313,
        30.39950407,  31.40790051,  32.41608979,  33.42406511,
        34.43181556,  35.43933595,  36.44661681,  37.45365423,
        38.46043988,  39.46697087,  40.47323969,  41.47924418,
        42.48497746,  43.49043783,  44.49561874,  45.50051877,
        46.5051315 ,  47.50945554,  48.51348443,  49.51721661,
        50.5206454 ,  51.52376895,  52.52658019,  53.52907682,
        54.53125128,  55.5331007 ,  56.53461698,  57.53579743,
        58.53664135,  59.53714808,  60.53731712,  61.53714827,
        62.53664172,  63.53579799,  64.53461774,  65.53310166,
        66.53125244,  67.5290782 ,  68.52658179,  69.52377077,
        70.52064746,  71.51721891,  72.51348699,  73.50945838,
        74.50513463,  75.50052219,  76.49562248,  77.4904419 ,
        78.48498188,  79.47924897,  80.47324486,  81.46697645,
        82.46044589,  83.45366069,  84.44662373,  85.43934336,
        86.43182348,  87.42407356,  88.4160988 ,  89.4079101 ,
        90.39951426,  91.39092394,  92.38214786,  93.37320078,
        94.36409367,  95.35484376,  96.34546463,  97.33597631,
        98.3263954 ,  99.31673846, 100.30701883, 101.29724985,
       102.28744177, 103.27760488, 104.26774658, 105.25787427,
       106.24799269, 107.23810658, 108.22821821, 109.21832984
    };
    private static readonly double[] _afterOneHundredIterations = new double[]
    {
      10.00048557,  11.00066937,  12.00085316,  13.00103695,
        14.00122073,  15.00140452,  16.00158831,  17.0017721 ,
        18.00195588,  19.00213965,  20.00232339,  21.00250709,
        22.00269071,  23.00287423,  24.00305759,  25.00324077,
        26.00342367,  27.00360625,  28.00378841,  29.00397006,
        30.00415107,  31.00433134,  32.00451071,  33.00468903,
        34.00486611,  35.00504177,  36.00521578,  37.00538793,
        38.00555794,  39.00572555,  40.00589044,  41.00605231,
        42.00621079,  43.00636553,  44.0065161 ,  45.00666211,
        46.00680306,  47.00693852,  48.00706793,  49.00719079,
        50.00730649,  51.00741446,  52.00751405,  53.0076046 ,
        54.0076854 ,  55.00775574,  56.00781488,  57.00786209,
        58.00789666,  59.00791792,  60.00792534,  61.00791873,
        62.00789828,  63.00786453,  64.00781814,  65.00775983,
        66.00769034,  67.00761039,  68.00752071,  69.00742201,
        70.00731494,  71.00720016,  72.00707825,  73.00694981,
        74.00681536,  75.00667543,  76.00653049,  77.00638101,
        78.0062274 ,  79.00607008,  80.0059094 ,  81.00574574,
        82.00557941,  83.00541071,  84.00523992,  85.0050673 ,
        86.00489308,  87.00471749,  88.0045407 ,  89.0043629 ,
        90.00418425,  91.0040049 ,  92.00382496,  93.00364456,
        94.00346377,  95.00328271,  96.00310142,  97.00291998,
        98.00273843,  99.00255681, 100.00237516, 101.0021935 ,
       102.00201184, 103.0018302 , 104.00164858, 105.00146699,
       106.00128542, 107.00110386, 108.00092232, 109.00074079
    };

    [Fact]
    public void Test_1Iteration()
    {
      var method = new ALS() { Lambda = 1e5, P = 0.001, Order = 2, MaximumNumberOfIterations = 1 };

      var x = new double[100];
      var y = new double[100];

      for (int i = 0; i < y.Length; i++)
      {
        x[i] = i;
        y[i] = 10 + i % 2 + i + 40 * Math.Exp(-RMath.Pow2((i - 50) / 2.0));
      }

      var z = method.Execute(y, y);


      for (int i = 0; i < y.Length; i++)
      {
        AssertEx.AreEqual(_afterOneIteration[i], z[i], 1E-6, 1E-6);
      }

    }

    [Fact]
    public void Test_2Iterations()
    {
      var method = new ALS() { Lambda = 1e5, P = 0.001, Order = 2, MaximumNumberOfIterations = 2 };

      var x = new double[100];
      var y = new double[100];

      for (int i = 0; i < y.Length; i++)
      {
        x[i] = i;
        y[i] = 10 + i % 2 + i + 40 * Math.Exp(-RMath.Pow2((i - 50) / 2.0));
      }

      var z = method.Execute(y, y);


      for (int i = 0; i < y.Length; i++)
      {
        AssertEx.AreEqual(_afterTwoIterations[i], z[i], 1E-6, 1E-6);
      }

    }

    [Fact]
    public void Test_100Iterations()
    {
      var method = new ALS() { Lambda = 1e5, P = 0.001, Order = 2, MaximumNumberOfIterations = 100 };

      var x = new double[100];
      var y = new double[100];

      for (int i = 0; i < y.Length; i++)
      {
        x[i] = i;
        y[i] = 10 + i % 2 + i + 40 * Math.Exp(-RMath.Pow2((i - 50) / 2.0));
      }

      var z = method.Execute(y, y);


      for (int i = 0; i < y.Length; i++)
      {
        AssertEx.AreEqual(_afterOneHundredIterations[i], z[i], 1E-6, 1E-6);
      }

    }
  }
}
