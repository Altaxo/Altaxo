#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Heptane_Argon"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Heptane_Argon : MixtureTestBase
  {

    public Test_Mixture_Heptane_Argon()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("142-82-5", 0.5), ("7440-37-1", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601375822138035, 999.999999920865, -2.90565406735926E-05, 12.5788787775212, 2 ),
      ( 250, 0.481093130256585, 999.999999999569, -1.34104325770749E-05, 12.5965728145966, 2 ),
      ( 250, 4.81151198214438, 9999.99999567481, -0.000134094282734642, 12.597693011105, 2 ),
      ( 250, 48.1732166971766, 100000, -0.00133993207469544, 12.608894734917, 2 ),
      ( 250, 26973.9744056106, 100000000.000001, 0.783521669278126, 16.4831540623741, 1 ),
      ( 300, 0.40090802978991, 999.99999999997, -6.1467927687902E-06, 12.6170331076916, 2 ),
      ( 300, 4.00930205017224, 9999.999999707, -6.1455898266813E-05, 12.6176974065896, 2 ),
      ( 300, 40.1151613138, 99999.9971904, -0.000613353235269922, 12.6243365519356, 2 ),
      ( 300, 403.329638026801, 999999.999999309, -0.00601015222279347, 12.6903299143126, 2 ),
      ( 300, 4197.62704806931, 10000000.0000968, -0.0449233319200563, 13.2950223752922, 2 ),
      ( 300, 24109.8779759317, 100000000.000228, 0.662827020078494, 15.6909057698902, 1 ),
      ( 350, 0.343634174733786, 999.99229492836, -2.37621382738768E-06, 12.6392790085458, 2 ),
      ( 350, 3.43641504233462, 9999.99999998982, -2.37526132558999E-05, 12.6397215735724, 2 ),
      ( 350, 34.3714649066659, 99999.9998869749, -0.000236554412429929, 12.6441443232824, 2 ),
      ( 350, 344.414252618851, 999999.999999999, -0.00226735903817612, 12.6880777870175, 2 ),
      ( 350, 3477.98252985476, 10000000.0000289, -0.011975077792976, 13.093889637626, 1 ),
      ( 350, 21696.6434661024, 100000000.000297, 0.583808769255653, 15.1564172923141, 1 ),
      ( 400, 0.300679258495516, 999.996692999729, -2.75121248106717E-07, 12.6616725561719, 2 ),
      ( 400, 3.00679999159545, 9999.99999999998, -2.7439172832848E-06, 12.6619924531963, 2 ),
      ( 400, 30.068720500259, 99999.9999999193, -2.67084330727452E-05, 12.6651895545132, 2 ),
      ( 400, 300.737429132927, 999999.99965976, -0.000193707230205963, 12.6969724281282, 2 ),
      ( 400, 2990.00905696047, 10000000.0000829, 0.00561292086584274, 12.9948454155948, 1 ),
      ( 400, 19682.8850140858, 100000000.000981, 0.527617388938416, 14.7772763637285, 1 ),
      ( 500, 0.240542926889511, 1000.01637556339, 1.68088537085643E-06, 12.7031003272685, 1 ),
      ( 500, 2.40539295192743, 10000.0000000023, 1.68126461551929E-05, 12.7032968282248, 1 ),
      ( 500, 24.050280660797, 100000.000023817, 0.000168533113646239, 12.7052611018891, 1 ),
      ( 500, 240.128893231647, 999999.999999999, 0.00172593167480281, 12.7248297280145, 1 ),
      ( 500, 2355.42742318165, 10000000.0000174, 0.0212301042580642, 12.9130007517495, 1 ),
      ( 500, 16587.6510549025, 100000000, 0.45013503418078, 14.285385485819, 1 ),
      ( 600, 0.200452295725346, 1000.0195139988, 2.38201301394761E-06, 12.7384146294154, 1 ),
      ( 600, 2.00448007669699, 10000.0000000046, 2.38220176002335E-05, 12.7385528609838, 1 ),
      ( 600, 20.0404995132622, 100000.000046659, 0.000238455199350508, 12.7399348786479, 1 ),
      ( 600, 199.971259529194, 999999.999999999, 0.00240796210919825, 12.7537248865343, 1 ),
      ( 600, 1953.1146408346, 10000000.0000032, 0.0263236911685352, 12.8885589727355, 1 ),
      ( 600, 14357.7377874673, 100000000, 0.396130683767185, 13.9880035984303, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.400956362626482, 999.999999766096, -0.00012668993405001, 85.0718122376627, 2 ),
      ( 300, 4.01414577001304, 10000.0000051957, -0.00126804440903702, 85.0979599023257, 2 ),
      ( 350, 0.343659487322568, 999.999999995154, -7.60795898833976E-05, 96.2056657470612, 2 ),
      ( 350, 3.43895081560243, 9999.9999508823, -0.000761103380791639, 96.2190405777708, 2 ),
      ( 350, 34.6279637313621, 99999.9999960298, -0.00764207636501796, 96.3539183072745, 2 ),
      ( 400, 0.300693650074197, 999.999999975654, -4.81418736114925E-05, 107.408615000986, 2 ),
      ( 400, 3.0082401264938, 9999.99975412113, -0.000481472625927947, 107.416223512273, 2 ),
      ( 400, 30.2135507119491, 99999.9996112615, -0.00482013187515038, 107.492696925088, 2 ),
      ( 500, 0.240548297590956, 999.999999999929, -2.06124766052793E-05, 128.128857462937, 2 ),
      ( 500, 2.40592919075555, 9999.99998970656, -0.000206073316269759, 128.13197356945, 2 ),
      ( 500, 24.1038814954146, 99999.9999999999, -0.00205558452910554, 128.163198509543, 2 ),
      ( 500, 245.461468171098, 999999.982226374, -0.0200362559063715, 128.481112055967, 2 ),
      ( 600, 0.200454481070274, 999.999999999937, -8.47237038088702E-06, 145.78907807707, 2 ),
      ( 600, 2.00469756988786, 9999.99999937161, -8.46723384811252E-05, 145.790682346876, 2 ),
      ( 600, 20.0621624985923, 99999.9944642749, -0.00084159537119686, 145.806739279328, 2 ),
      ( 600, 202.051322457389, 999999.999999622, -0.00791155276508912, 145.968457154233, 2 ),
      ( 600, 2075.81398766697, 10000000.0000031, -0.0343413044877014, 147.453594436487, 1 ),
      ( 600, 8826.96647795633, 100000000.000114, 1.27091360600669, 150.804791952211, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.401356596472358, 999.9999999697, -0.00112376620905814, 157.582466058773, 2 ),
      ( 350, 0.343846421670171, 999.999992904272, -0.000619694740150013, 179.799259827075, 2 ),
      ( 350, 3.45788137296957, 9999.99999999793, -0.00623154815840278, 180.072136196367, 2 ),
      ( 350, 7150.13450511994, 100000000, 3.80597031571434, 201.77688067196, 1 ),
      ( 400, 0.300792345007462, 999.999998768991, -0.000376242582961956, 202.170132923002, 2 ),
      ( 400, 3.01818485875467, 9999.98672218441, -0.00377481926615604, 202.316761247084, 2 ),
      ( 400, 31.2908846605496, 99999.9999999996, -0.0390838182418534, 203.844423471367, 2 ),
      ( 400, 6048.12854862507, 10000000.0025146, -0.502855847439681, 217.319885264716, 1 ),
      ( 400, 6897.94714840777, 100000000, 3.35896604670136, 221.213735818441, 1 ),
      ( 500, 0.240583574597538, 999.999999928266, -0.000167240439430047, 243.559743363437, 2 ),
      ( 500, 2.40946821336106, 9999.99925963987, -0.00167456872403045, 243.612026582974, 2 ),
      ( 500, 24.4695333070799, 99999.9999911807, -0.0169680137480458, 244.144022922824, 2 ),
      ( 500, 301.08957216414, 999999.999936496, -0.201090434413781, 250.798875656225, 2 ),
      ( 500, 5088.4862160618, 10000000.0000002, -0.527279176790292, 255.510990894051, 1 ),
      ( 500, 6429.42384951585, 99999999.9999998, 2.74128918741204, 258.397392782979, 1 ),
      ( 600, 0.200470074571404, 999.999999992849, -8.62563940023275E-05, 278.841925747195, 2 ),
      ( 600, 2.00625914887143, 9999.99992740324, -0.000862960003401997, 278.864674745912, 2 ),
      ( 600, 20.2205829587338, 99999.9999999704, -0.00866961560166254, 279.094255588337, 2 ),
      ( 600, 220.550718068376, 999999.999999998, -0.0911261386892385, 281.612951735882, 2 ),
      ( 600, 3829.77963707349, 9999999.9999495, -0.476594473466421, 290.112311704388, 1 ),
      ( 600, 6004.58244828723, 100000000, 2.3383300915927, 290.842883795442, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
