#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Methane_SO2"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Methane_SO2 : MixtureTestBase
  {

    public Test_Mixture_Methane_SO2()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("74-82-8", 0.5), ("7446-09-5", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601835371644543, 999.999999999335, -0.000786863718992192, 28.0971999323635, 2 ),
      ( 200, 25333.025227023, 1000000.00000591, -0.976261745139443, 56.0021805069337, 1 ),
      ( 200, 25463.0837861015, 9999999.99999803, -0.763829937380239, 56.1271110663947, 1 ),
      ( 250, 0.481245670779052, 999.999999999581, -0.00032462296899338, 29.8537566105457, 2 ),
      ( 250, 4.82661176569584, 9999.99999570698, -0.00325638203620402, 30.00771790089, 2 ),
      ( 250, 23362.9465166937, 1000000.00062657, -0.979408014853859, 53.1022074738759, 1 ),
      ( 250, 23551.1270024736, 9999999.99999926, -0.795725509301875, 53.1160885828853, 1 ),
      ( 300, 0.400972006778998, 999.999999999876, -0.000159946232552793, 31.6455001161615, 2 ),
      ( 300, 4.01551056871798, 9999.9999987207, -0.00160174912560306, 31.7210455798169, 2 ),
      ( 300, 40.7531755382425, 99999.9853315253, -0.0162536575125918, 32.4924975823618, 2 ),
      ( 300, 21269.2538040042, 1000000.01414496, -0.981150825404001, 51.8765356953276, 1 ),
      ( 300, 21566.8555144234, 10000000.0000235, -0.814109260133487, 51.633775972163, 1 ),
      ( 350, 0.343666537777161, 999.999999999962, -9.08386944002712E-05, 33.4337730817435, 2 ),
      ( 350, 3.43947981437383, 9999.99999963264, -0.000909038275067462, 33.468723794057, 2 ),
      ( 350, 34.6810934089582, 99999.9960226696, -0.00915661542860025, 33.8226431851082, 2 ),
      ( 350, 381.64387268202, 999999.99933295, -0.0995916764738414, 37.9013418494615, 2 ),
      ( 350, 19312.6084821913, 10000000.0034158, -0.822066853377972, 50.8322841555793, 1 ),
      ( 400, 0.300697983570231, 999.99538607291, -5.67974495819337E-05, 35.1598774607784, 2 ),
      ( 400, 3.00851847368811, 9999.99999991322, -0.000568195799452861, 35.176271740886, 2 ),
      ( 400, 30.2405835805851, 99999.9989014654, -0.00570402736430653, 35.3414990626572, 2 ),
      ( 400, 319.694818454622, 999999.999988391, -0.0594752017985029, 37.1373836972887, 2 ),
      ( 400, 16292.4603881554, 9999999.99999831, -0.815447822213879, 51.1969830468054, 1 ),
      ( 500, 0.240550928598421, 999.992954176599, -2.57943897603945E-05, 38.2399432887618, 2 ),
      ( 500, 2.40606794329066, 9999.99999999357, -0.000257975419795361, 38.2446791087769, 2 ),
      ( 500, 24.1167594396804, 99999.9999348269, -0.00258272968567498, 38.2921530156758, 2 ),
      ( 500, 246.998748882448, 999999.999999993, -0.0261297890024018, 38.7789095028789, 2 ),
      ( 500, 3406.90487161932, 10000000.0000008, -0.293949397604282, 45.3019347775302, 2 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601494522928694, 999.99999999957, -0.000223514038710461, 26.6419275202242, 2 ),
      ( 300, 0.400930205865319, 999.999999984424, -5.85776757012284E-05, 29.5533454038419, 2 ),
      ( 300, 4.0114178954616, 9999.99984189557, -0.000586000368973543, 29.5640236567477, 2 ),
      ( 300, 40.3279036496049, 99999.9999999056, -0.00588256754992068, 29.6718277297932, 2 ),
      ( 350, 0.343646513362101, 999.999999997412, -3.54482614901002E-05, 31.5415474013547, 2 ),
      ( 350, 3.43756208430005, 9999.9999738779, -0.000354544110215392, 31.5464310211203, 2 ),
      ( 350, 34.4859138564184, 99999.9999999985, -0.00355161494500025, 31.5954859312212, 2 ),
      ( 350, 356.525804545667, 1000000.00033463, -0.0361585969236145, 32.1088296972929, 2 ),
      ( 400, 0.300686778481481, 999.999999999971, -2.24095392869679E-05, 33.7274069663975, 2 ),
      ( 400, 3.00747440608484, 9999.99999583731, -0.000224109568523498, 33.730171228906, 2 ),
      ( 400, 30.1355834459486, 100000, -0.00224251251253452, 33.7578618433768, 2 ),
      ( 400, 307.621732841819, 999999.99472907, -0.0225656767210371, 34.0396091235917, 2 ),
      ( 400, 3916.93269092662, 9999999.99999999, -0.232358419316571, 37.2487931676206, 2 ),
      ( 500, 0.240546269506804, 999.999999999977, -9.30101041978374E-06, 38.216046818146, 2 ),
      ( 500, 2.40566406032194, 9999.99999975765, -9.30048759406651E-05, 38.2173926334999, 2 ),
      ( 500, 24.0767831564116, 99999.997580891, -0.00092952357368157, 38.2308485747105, 2 ),
      ( 500, 242.787453877092, 999999.999997543, -0.0092402702768059, 38.3651569517122, 2 ),
      ( 500, 2624.62137963076, 9999999.9999472, -0.0835095909438131, 39.6464034530882, 2 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601396268451479, 999.999999885213, -6.30478638346975E-05, 25.2020019472462, 2 ),
      ( 200, 6.0173787315876, 9999.99882725969, -0.00063070886793292, 25.2074188876537, 2 ),
      ( 200, 60.5189403270799, 99999.9999934373, -0.00633033479661358, 25.2623117849335, 2 ),
      ( 200, 643.761721871287, 1000000, -0.0658681135103797, 25.8856253201878, 2 ),
      ( 200, 16632.5791820659, 9999999.99998617, -0.638445520013342, 30.1382228451387, 1 ),
      ( 250, 0.481101926786498, 999.999999990484, -3.16885560099639E-05, 25.9571436305059, 2 ),
      ( 250, 4.81239191161762, 9999.99990406712, -0.000316910596541504, 25.9596641516763, 2 ),
      ( 250, 48.2617356656527, 99999.9999999839, -0.0031716126061263, 25.9849610813416, 2 ),
      ( 250, 496.974122971205, 1000000.0001598, -0.031968347803779, 26.2471445458796, 2 ),
      ( 250, 7021.89890891778, 9999999.99999351, -0.314876662849321, 29.2176230777419, 2 ),
      ( 300, 0.40091237402166, 999.999999998966, -1.69768287213609E-05, 27.4673425493122, 2 ),
      ( 300, 4.00973636320072, 9999.99998962876, -0.000169758091009281, 27.4687641901493, 2 ),
      ( 300, 40.15868818119, 100000, -0.00169655444790039, 27.4829895049408, 2 ),
      ( 300, 407.778921587998, 999999.995520821, -0.0168555886354493, 27.6260677935374, 2 ),
      ( 300, 4689.34800524056, 9999999.99999998, -0.145071836526264, 29.006160987126, 2 ),
      ( 350, 0.343636497737474, 999.999999999879, -9.17803581751443E-06, 29.6522042518405, 2 ),
      ( 350, 3.4366488047319, 9999.99999878067, -9.17656868341674E-05, 29.6531006535725, 2 ),
      ( 350, 34.3948464505823, 99999.9882245983, -0.000916185626222033, 29.6620607021639, 2 ),
      ( 350, 346.757855040205, 999999.999980052, -0.00901064291792954, 29.7512380923634, 2 ),
      ( 350, 3695.39492274448, 10000000.0017296, -0.070103869787593, 30.5658256973862, 2 ),
      ( 400, 0.300680587718403, 999.999999999989, -4.69557312602276E-06, 32.296201667981, 2 ),
      ( 400, 3.00693291220663, 9999.99999987358, -4.69427498365869E-05, 32.2968086347457, 2 ),
      ( 400, 30.081999794342, 99999.9988107501, -0.000468127425010746, 32.302873417098, 2 ),
      ( 400, 302.053316595677, 999999.999999944, -0.00454933174004745, 32.3630254954689, 2 ),
      ( 400, 3100.96357456747, 9999999.99999828, -0.030368565704113, 32.9068548132147, 1 ),
      ( 500, 0.240543400572526, 999.99692445898, -2.44106780631739E-07, 38.1924125053646, 2 ),
      ( 500, 2.40543925913148, 10000, -2.4329551158024E-06, 38.1927301797673, 2 ),
      ( 500, 24.054899771097, 99999.9999999504, -2.35171646980733E-05, 38.1959042942279, 2 ),
      ( 500, 240.580287823902, 1000000.00065269, -0.000153575106564088, 38.2273838732303, 1 ),
      ( 500, 2389.00667953559, 10000000.0003439, 0.00687596540109856, 38.5172224908299, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
