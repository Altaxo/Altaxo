#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_SO2_HCl"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_SO2_HCl : MixtureTestBase
  {

    public Test_Mixture_SO2_HCl()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("7446-09-5", 0.5), ("7647-01-0", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601502844442561, 999.999999999858, -0.000234465644939116, 20.8285412956115, 2 ),
      ( 200, 6.0277824202878, 9999.99999854524, -0.00234983487795793, 20.9374797383479, 2 ),
      ( 200, 61.6175412130508, 99999.9834254667, -0.0240412009779104, 22.0578824633833, 2 ),
      ( 200, 31761.9062617631, 1000000.00089418, -0.98106657049466, 36.7543572251654, 1 ),
      ( 200, 32112.5621333414, 10000000.0000012, -0.812733157139189, 36.8409854392358, 1 ),
      ( 250, 0.481139943666863, 999.999999999962, -0.000104945588832726, 20.8243802099368, 2 ),
      ( 250, 4.81595311779481, 9999.99999960096, -0.00105038735804239, 20.8636762038103, 2 ),
      ( 250, 48.6243019147114, 99999.9956457126, -0.0105987509242214, 21.2618586031991, 2 ),
      ( 250, 545.312654815425, 999999.999591437, -0.117773178499114, 25.895477760002, 2 ),
      ( 250, 28470.1420510865, 10000000.0006195, -0.83101965233685, 34.5246069746534, 1 ),
      ( 300, 0.400930917696892, 999.989756393907, -5.74720806556994E-05, 20.8264391858663, 2 ),
      ( 300, 4.01138512597148, 9999.99999991088, -0.000574957185821779, 20.8418005795348, 2 ),
      ( 300, 40.3235676269968, 99999.9989755113, -0.00577280543478933, 20.9965825780071, 2 ),
      ( 300, 426.614752608688, 999999.999990258, -0.0602578258825514, 22.6724129370825, 2 ),
      ( 300, 23280.9687512251, 9999999.9999498, -0.827795879368689, 33.5444321246603, 1 ),
      ( 350, 0.34364749397285, 999.988700103362, -3.54208840563661E-05, 20.8366507363664, 2 ),
      ( 350, 3.43757106842033, 9999.99999997725, -0.000354277198483275, 20.8434240115043, 2 ),
      ( 350, 34.4859304756164, 99999.9997673674, -0.00354922484640446, 20.9114818721374, 2 ),
      ( 350, 356.525612291275, 999999.999999837, -0.0361553007964054, 21.6257930455454, 2 ),
      ( 350, 6417.08005753213, 9999999.9897249, -0.46449893267354, 33.0357688068935, 2 ),
      ( 400, 0.300687945469454, 999.99404073929, -2.34099255057131E-05, 20.8626608901203, 2 ),
      ( 400, 3.0075131712139, 9999.99999999582, -0.00023411626908661, 20.8660573854102, 2 ),
      ( 400, 30.1386971948273, 99999.9999579426, -0.00234272104575549, 20.9001295678106, 2 ),
      ( 400, 307.941924904507, 999999.999999996, -0.0235791815669693, 21.251670242645, 2 ),
      ( 400, 3981.3963443618, 9999999.98110938, -0.244785295093605, 25.7360427436954, 2 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601625124831469, 999.999999999607, -0.000437668126524585, 24.460027511786, 2 ),
      ( 200, 28157.4974182521, 1000000.0000645, -0.978642923990391, 45.8749643957481, 1 ),
      ( 200, 28362.2134229776, 10000000.0000003, -0.787970775158414, 45.930641377333, 1 ),
      ( 250, 0.481178283625913, 999.999999999859, -0.000184616548111306, 25.3353056590084, 2 ),
      ( 250, 4.81980774417147, 9999.99999856781, -0.00184929422821907, 25.4210819169969, 2 ),
      ( 250, 49.0315996150214, 100000.003443194, -0.018817551119036, 26.2988853960048, 2 ),
      ( 250, 25579.6988457972, 1000000.00760337, -0.981192528634076, 43.6366468696447, 1 ),
      ( 250, 25912.4199006993, 10000000.0000111, -0.814340207517112, 43.5282910939491, 1 ),
      ( 300, 0.400946182590185, 999.999999999962, -9.55426564599118E-05, 26.2315800271842, 2 ),
      ( 300, 4.01291577546431, 9999.99999961562, -0.00095616863401211, 26.2674089718993, 2 ),
      ( 300, 40.4809085999652, 99999.9958240077, -0.00963716173536895, 26.6302543756253, 2 ),
      ( 300, 23051.3579360463, 10000000.0023205, -0.826080582181167, 41.9617801718878, 1 ),
      ( 350, 0.343654778227466, 999.980989583218, -5.66158876408366E-05, 27.1302091508658, 2 ),
      ( 350, 3.43830062947181, 9999.99999989684, -0.000566388547405416, 27.1457477026253, 2 ),
      ( 350, 34.5600391058576, 99999.9989199493, -0.00568595851724355, 27.3023209671612, 2 ),
      ( 350, 365.286470144168, 999999.999989492, -0.0592716959873304, 28.9992286913188, 2 ),
      ( 350, 19076.5881406037, 9999999.99999973, -0.819865418803148, 41.640976926594, 1 ),
      ( 400, 0.300691851031315, 999.997168490932, -3.63982435338853E-05, 28.0052727923886, 2 ),
      ( 400, 3.00790410459768, 9999.99999997908, -0.000364054540488448, 28.0127011368592, 2 ),
      ( 400, 30.1781708867643, 99999.9997412326, -0.00364767805467538, 28.087331720887, 2 ),
      ( 400, 312.303717714743, 999999.999999775, -0.0372163721094552, 28.8700703342203, 2 ),
      ( 400, 6149.18265382602, 9999999.99999999, -0.511022971226885, 43.0169267618501, 2 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601835925782906, 999.999999998881, -0.000787777984549804, 28.0928416222478, 2 ),
      ( 200, 25327.1057134942, 99999.9999972956, -0.997625619684056, 56.000720352808, 1 ),
      ( 200, 25340.4186169572, 1000000.00003274, -0.976268670940323, 56.0129497474406, 1 ),
      ( 200, 25470.3731756327, 10000000.0000016, -0.763897525747469, 56.1379982524596, 1 ),
      ( 250, 0.481245841942246, 999.999999999452, -0.000324972761215899, 29.8486356640161, 2 ),
      ( 250, 4.82662883116539, 9999.99999438609, -0.00325990047121734, 30.002787092437, 2 ),
      ( 250, 23350.9019973839, 99999.9999983919, -0.997939739329134, 53.1089610978664, 1 ),
      ( 250, 23370.4830460157, 1000000.00092064, -0.979414655246608, 53.108621884674, 1 ),
      ( 250, 23558.4895724622, 9999999.99999995, -0.79578934860336, 53.1229440368472, 1 ),
      ( 300, 0.400972069447049, 999.999999999847, -0.000160096737747401, 31.6388638922569, 2 ),
      ( 300, 4.01551666333445, 9999.99999845224, -0.00160325870911751, 31.714525721727, 2 ),
      ( 300, 40.7538209409652, 99999.9820989354, -0.0162692305239159, 32.4871701896087, 2 ),
      ( 300, 21277.2032463389, 1000000.01520637, -0.98115786757445, 51.8789154055094, 1 ),
      ( 300, 21574.4490446848, 10000000.0000215, -0.81417468678053, 51.6372184796197, 1 ),
      ( 350, 0.343666565485503, 999.999999999959, -9.09135522067644E-05, 33.4249549538912, 2 ),
      ( 350, 3.43948241553938, 9999.99999957065, -0.000909788098347369, 33.4599680827445, 2 ),
      ( 350, 34.6813605331867, 99999.9953350111, -0.00916424137154517, 33.8145209495603, 2 ),
      ( 350, 381.683525172263, 999999.998977135, -0.0996852132266139, 37.9008760042002, 2 ),
      ( 350, 19320.8981976777, 10000000.0032279, -0.822143195347775, 50.832907108424, 1 ),
      ( 400, 0.300697998350874, 999.995057345162, -5.68408216285329E-05, 35.14843559599, 2 ),
      ( 400, 3.00851979842674, 9999.99999990029, -0.000568630120529674, 35.1648609417474, 2 ),
      ( 400, 30.2407171197634, 99999.9987357707, -0.00570841231164879, 35.3304020475429, 2 ),
      ( 400, 319.711375360452, 999999.999983873, -0.0595239033755764, 37.1297953461456, 2 ),
      ( 400, 16303.1940089289, 10000000.0198442, -0.815569325419585, 51.1915735282577, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
