#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Butane_Hexane"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Butane_Hexane : MixtureTestBase
  {

    public Test_Mixture_Butane_Hexane()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("106-97-8", 0.5), ("110-54-3", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 8611.61119954936, 99999.999996812, -0.993016889356528, 124.102601643668, 1 ),
      ( 200, 8617.67949375631, 999999.999999762, -0.930218065055909, 124.150620196442, 1 ),
      ( 200, 8676.20399941984, 9999999.9999996, -0.306887723057845, 124.626146417797, 1 ),
      ( 200, 9122.59444958963, 100000000.000002, 5.59196629104136, 128.921511338334, 1 ),
      ( 250, 0.481825350287573, 999.995109443259, -0.0015330573212422, 117.606692565422, 2 ),
      ( 250, 8100.97286984374, 99999.9999990326, -0.994061371623556, 136.15572379828, 1 ),
      ( 250, 8109.42009899824, 1000000.0012812, -0.940675575456114, 136.199776082145, 1 ),
      ( 250, 8189.58835795345, 10000000.0000001, -0.412563049893273, 136.637198633001, 1 ),
      ( 250, 8751.01812086194, 100000000.000002, 4.49749382464892, 140.556068653127, 1 ),
      ( 300, 0.401207710559725, 999.999987715876, -0.000753084311252325, 134.947697597012, 2 ),
      ( 300, 4.03968726238857, 9999.99031979697, -0.0075826560131798, 135.28915597605, 2 ),
      ( 300, 7579.81315163811, 100000.000000419, -0.994710878020641, 150.790321453872, 1 ),
      ( 300, 7591.99544160233, 1000000.0181036, -0.947193649242726, 150.829758186799, 1 ),
      ( 300, 7704.62848773631, 10000000.0000306, -0.479656198926098, 151.228644887183, 1 ),
      ( 300, 8408.09272733373, 100000000.000002, 3.76809165080098, 154.89360707563, 1 ),
      ( 350, 0.343778806265948, 999.999998390223, -0.00042312918315042, 153.91081300921, 2 ),
      ( 350, 3.4509907752769, 9999.98247636545, -0.00424727742904575, 154.077418740273, 2 ),
      ( 350, 35.953250466198, 99999.9999996243, -0.0442217630826922, 155.825983490017, 2 ),
      ( 350, 7038.00334255777, 1000000.0000007, -0.951174597897582, 167.613170823143, 1 ),
      ( 350, 7203.81988959913, 10000000.0004971, -0.52298454333853, 167.938490488898, 1 ),
      ( 350, 8085.91256392995, 100000000.000003, 3.24977812588693, 171.380710423522, 1 ),
      ( 400, 0.300757563465656, 999.999999708606, -0.000260635084382641, 173.142449429926, 2 ),
      ( 400, 3.01466671328164, 9999.99693465462, -0.00261221444118761, 173.232208714393, 2 ),
      ( 400, 30.8939623561191, 99999.9996077005, -0.0267380659690005, 174.155001631435, 2 ),
      ( 400, 6403.55423518207, 999999.999999952, -0.953044955278007, 185.282035918015, 1 ),
      ( 400, 6669.36907323326, 10000000.0007911, -0.549163988057522, 185.402527157332, 1 ),
      ( 400, 7780.49976994004, 100000000.000005, 2.8645226448968, 188.575874192568, 1 ),
      ( 500, 0.240571658525255, 999.999999998989, -0.000117711833838153, 208.971248503357, 2 ),
      ( 500, 2.4082706699099, 9999.99985261223, -0.00117813415290275, 209.003464466942, 2 ),
      ( 500, 24.3436528230506, 99999.9999997149, -0.0118847724808785, 209.32960527762, 2 ),
      ( 500, 276.985874264993, 999999.983260162, -0.131568201004767, 213.079756821139, 2 ),
      ( 500, 5395.8317426867, 10000000.0017997, -0.554205260833279, 219.252719069086, 1 ),
      ( 500, 7213.44326008404, 100000000.000008, 2.33465353120938, 221.308658498243, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 9731.45442461176, 100000.000001634, -0.993820453835859, 105.484884084426, 1 ),
      ( 200, 9739.26106719759, 1000000.00125181, -0.938254070951354, 105.529851958812, 1 ),
      ( 200, 9814.28535874091, 10000000.0000002, -0.387260813758779, 105.970266075058, 1 ),
      ( 200, 10376.3436352466, 100000000.000007, 4.79548773229255, 109.672518878602, 1 ),
      ( 250, 0.48153254732275, 999.999999929271, -0.000923653805212753, 98.0877296857997, 2 ),
      ( 250, 9105.52213491576, 100000.000001007, -0.994716527304943, 114.164991213062, 1 ),
      ( 250, 9116.79256651733, 1000000.00004815, -0.947230588578592, 114.208605926109, 1 ),
      ( 250, 9222.86127219394, 10000000.0000006, -0.478374699835942, 114.637884305795, 1 ),
      ( 250, 9938.60288530338, 100000000.000045, 3.84059765245861, 118.265166992434, 1 ),
      ( 300, 0.401096937533083, 999.99999437204, -0.000474837593364669, 112.813131384616, 2 ),
      ( 300, 4.02827844710205, 9999.99995288957, -0.00476968782065009, 112.984684438257, 2 ),
      ( 300, 8459.99329471182, 999999.999999934, -0.952611489456669, 125.910804685592, 1 ),
      ( 300, 8616.63801526598, 10000000.0000021, -0.534729808868284, 126.318077069439, 1 ),
      ( 300, 9529.14144264392, 100000000.00026, 3.20716267086082, 129.884888132329, 1 ),
      ( 350, 0.343728992804602, 999.999999175366, -0.000275989797895962, 128.762242518441, 2 ),
      ( 350, 3.44587475480741, 9999.99123026294, -0.00276663430768727, 128.847159167203, 2 ),
      ( 350, 35.3670406876739, 100000.006165699, -0.0283774955700097, 129.729813696072, 2 ),
      ( 350, 7721.31938675199, 999999.999999787, -0.955495413426518, 139.692383012806, 1 ),
      ( 350, 7971.74126373269, 10000000.002989, -0.56893467080867, 140.001371898448, 1 ),
      ( 350, 9142.42700545177, 100000000.001151, 2.75867509698324, 143.454230963529, 1 ),
      ( 400, 0.300732189180031, 999.999999838831, -0.000174001857121277, 144.827278201358, 2 ),
      ( 400, 3.01204713511356, 9999.99832789153, -0.00174250992425451, 144.873706489401, 2 ),
      ( 400, 30.6092174696654, 99999.9999462085, -0.0176819726882913, 145.348395724697, 2 ),
      ( 400, 7256.07521543748, 9999999.99999993, -0.585616394134559, 154.452403957022, 1 ),
      ( 400, 8775.45510413282, 100000000.004096, 2.42637342067885, 157.650370994532, 1 ),
      ( 500, 0.240563182158377, 999.999999989479, -8.020006102785E-05, 174.689123881018, 2 ),
      ( 500, 2.40737061145984, 9999.99989309213, -0.000802419729168946, 174.706421110912, 2 ),
      ( 500, 24.2500028602064, 99999.9999999393, -0.00806655409875063, 174.88091366487, 2 ),
      ( 500, 263.004110182781, 999999.999999948, -0.0853987460145913, 176.793847131401, 2 ),
      ( 500, 5379.65943251009, 10000000.0152876, -0.55286409435914, 183.367093502068, 1 ),
      ( 500, 8095.6034059036, 100000000, 1.97129042658794, 184.798551364092, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.60205245320774, 999.99724244678, -0.00114833415444123, 68.2144996563025, 2 ),
      ( 200, 11592.3827452596, 100000.000003964, -0.994812446200426, 85.6732283677256, 1 ),
      ( 200, 11602.8012624604, 1000000.00302607, -0.948171042328004, 85.7179763611181, 1 ),
      ( 200, 11702.5221286128, 10000000.0000075, -0.486126932906628, 86.1520350302271, 1 ),
      ( 200, 12434.6122872398, 100000000.003758, 3.83618692753156, 89.5668428768716, 1 ),
      ( 250, 0.481340257027155, 999.999987133744, -0.00052225405542682, 78.5876933251716, 2 ),
      ( 250, 4.83628772682434, 9999.9968908968, -0.00525174864341747, 78.7545437432927, 2 ),
      ( 250, 11872.4488121143, 100000000.000001, 3.05214528810388, 95.4652441186048, 1 ),
      ( 300, 0.401020446018454, 999.999998574783, -0.000281906032190509, 90.6866070915938, 2 ),
      ( 300, 4.02043764154841, 9999.98469153606, -0.00282647456344168, 90.7604883761389, 2 ),
      ( 300, 41.2902190594389, 100000.007033005, -0.0290499682549271, 91.5442271072143, 2 ),
      ( 300, 9837.64753968287, 999999.999999869, -0.95924763574642, 100.594707922673, 1 ),
      ( 300, 10077.9643725494, 10000000.0011639, -0.602194072971175, 101.008662053498, 1 ),
      ( 300, 11341.4888748182, 100000000.000009, 2.53487448041946, 104.558370360625, 1 ),
      ( 350, 0.343693007337356, 999.99999977012, -0.000169036128818638, 103.617585475299, 2 ),
      ( 350, 3.44217584533123, 9999.99761021882, -0.00169274789442212, 103.65519858584, 2 ),
      ( 350, 34.9639469168558, 99999.9998866068, -0.0171735713191558, 104.04270784873, 2 ),
      ( 350, 8693.04281271655, 1000000.00008226, -0.960470123266012, 111.782327062299, 1 ),
      ( 350, 9145.52531089193, 9999999.99999998, -0.624258969146105, 111.876327747522, 1 ),
      ( 350, 10838.0701339529, 100000000.000039, 2.17062822583806, 115.33096442447, 1 ),
      ( 400, 0.300713154249388, 999.999999997304, -0.000108433227086744, 116.514245717542, 2 ),
      ( 400, 3.01007206730964, 9999.99960692534, -0.00108522241024399, 116.535498505115, 2 ),
      ( 400, 30.4007231108472, 99999.9999980534, -0.0109427794268691, 116.751459397513, 2 ),
      ( 400, 341.861764423704, 999999.99815619, -0.120461606626811, 119.339275956566, 2 ),
      ( 400, 8032.93779822884, 10000000.000009, -0.625690432934532, 123.635222400528, 1 ),
      ( 400, 10359.8265615256, 100000000.000371, 1.90237047084687, 126.6113637015, 1 ),
      ( 500, 0.240556502412264, 999.999999996883, -5.01539173828665E-05, 140.407828106296, 2 ),
      ( 500, 2.40665176611867, 9999.99996848183, -0.000501688910145797, 140.416271822482, 2 ),
      ( 500, 24.1760959061151, 99999.9999999973, -0.00503191871152749, 140.501078441587, 2 ),
      ( 500, 253.705681565241, 1000000.0003727, -0.0518760318168681, 141.387744668391, 2 ),
      ( 500, 4611.72560880001, 9999999.99999996, -0.478406874202765, 147.909032299877, 1 ),
      ( 500, 9474.63774001276, 100000000.009618, 1.53882464091034, 148.277276531714, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
