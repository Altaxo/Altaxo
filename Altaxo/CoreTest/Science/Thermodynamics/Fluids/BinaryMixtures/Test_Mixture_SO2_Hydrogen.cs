#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_SO2_Hydrogen"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_SO2_Hydrogen : MixtureTestBase
  {

    public Test_Mixture_SO2_Hydrogen()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("7446-09-5", 0.5), ("1333-74-0", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601357095658169, 1000.00000000038, 6.65446473615085E-06, 18.9724322317726, 1 ),
      ( 200, 6.01321079390787, 10000.0000038312, 6.65500983671912E-05, 18.9726623646604, 1 ),
      ( 200, 60.0960827571703, 100000, 0.000666049728455979, 18.9749634489747, 1 ),
      ( 200, 597.34768992617, 1000000.00127447, 0.00671871259307678, 18.9979489841868, 1 ),
      ( 250, 0.481085812297017, 1000.00000000039, 6.37224609147892E-06, 20.0180565349519, 1 ),
      ( 250, 4.81058222574, 10000.0000039277, 6.37247609085732E-05, 20.0182370005833, 1 ),
      ( 250, 48.078238923688, 100000, 0.000637478959631094, 20.0200415857475, 1 ),
      ( 250, 478.029879530713, 1000000.00076326, 0.00639917816191531, 20.0380794066231, 1 ),
      ( 250, 4508.88730347289, 10000000.0000614, 0.066979158081526, 20.2169019782517, 1 ),
      ( 300, 0.400905062868991, 1000.00000000021, 5.82525988147449E-06, 20.5439585505171, 1 ),
      ( 300, 4.00884045313834, 10000.0000021476, 5.82535813379851E-05, 20.5441080378577, 1 ),
      ( 300, 40.0673951705721, 99999.9999999999, 0.000582634679492687, 20.5456028390599, 1 ),
      ( 300, 398.58095736055, 1000000.00015834, 0.00583680887343275, 20.5605430335659, 1 ),
      ( 300, 3783.21494161507, 10000000.0000017, 0.0597002930899432, 20.7086692155822, 1 ),
      ( 350, 0.343633102712802, 1000.00000000012, 5.2674458842738E-06, 20.7846514756198, 1 ),
      ( 350, 3.43616812820213, 10000.0000011987, 5.26748421170986E-05, 20.7847792627529, 1 ),
      ( 350, 34.3453985662883, 100000.011998953, 0.000526787132906814, 20.7860570476965, 1 ),
      ( 350, 341.832757023248, 1000000.00003926, 0.00527203935599915, 20.7988258774064, 1 ),
      ( 350, 3262.44261408054, 10000000.0000171, 0.0533056161616258, 20.9253106815531, 1 ),
      ( 400, 0.300679116762021, 1000.00000000001, 4.76229234600944E-06, 20.8856859256394, 1 ),
      ( 400, 3.00666230050171, 10000.0000000905, 4.7623019400209E-05, 20.8857974572294, 1 ),
      ( 400, 30.0537420750312, 100000.000902423, 0.00047623997868226, 20.8869126795171, 1 ),
      ( 400, 299.255030823489, 1000000.00000018, 0.00476355518540299, 20.8980553217585, 1 ),
      ( 400, 2869.4762494577, 10000000.0016327, 0.0478586422973861, 21.008340884684, 1 ),
      ( 500, 0.240543472647342, 1000, 3.93838403132985E-06, 20.9576982547318, 1 ),
      ( 500, 2.40534965782956, 10000.0000000329, 3.93837299946449E-05, 20.9577868311714, 1 ),
      ( 500, 24.0449743577937, 100000.000327842, 0.000393826036424425, 20.9586725052415, 1 ),
      ( 500, 239.601079579165, 1000000.00000002, 0.00393720832416149, 20.96752013218, 1 ),
      ( 500, 2314.44415323349, 10000000.0000497, 0.0393183979448592, 21.0550164132096, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601415740427897, 999.999999999957, -9.02632796256009E-05, 23.5174933017417, 2 ),
      ( 250, 0.481110910711697, 999.999999979907, -4.52015836977149E-05, 24.9250275090117, 2 ),
      ( 250, 4.81306778977679, 9999.99999999998, -0.000452134170091026, 24.9306192776515, 2 ),
      ( 250, 48.3279985291173, 99999.9999991644, -0.00453323458887768, 24.9868274199738, 2 ),
      ( 300, 0.40091766394072, 999.999999997577, -2.50113538437282E-05, 26.0873502836623, 2 ),
      ( 300, 4.0100794455823, 9999.999975584, -0.000250139959019137, 26.0898645534869, 2 ),
      ( 300, 40.1914044251536, 99999.9999989523, -0.00250403741169504, 26.1150326366276, 2 ),
      ( 350, 0.343640071421307, 999.999999999653, -1.44176043657711E-05, 27.1030017968811, 2 ),
      ( 350, 3.43684669297447, 9999.99999650652, -0.000144179671492702, 27.1045345519588, 2 ),
      ( 350, 34.4131406951273, 100000, -0.00144215257988315, 27.1198566874909, 2 ),
      ( 350, 348.673434005081, 1000000.0000008, -0.0144499596441843, 27.2725145396899, 2 ),
      ( 400, 0.300683234035217, 999.999999999998, -8.33667979809025E-06, 28.0162789605695, 2 ),
      ( 400, 3.00705795541226, 9999.99999957727, -8.33645583925015E-05, 28.017361079234, 2 ),
      ( 400, 30.0931528789116, 99999.9948944919, -0.00083341696337263, 28.0281752211816, 2 ),
      ( 400, 303.199288994673, 999999.99999085, -0.00830662125767711, 28.1355978297553, 2 ),
      ( 400, 3251.33601291379, 9999999.99999966, -0.0752086953144225, 29.1226115505378, 2 ),
      ( 500, 0.240545141435802, 999.980186944484, -2.28059086318955E-06, 29.5900033297486, 2 ),
      ( 500, 2.40550067201864, 9999.99999999545, -2.28032925917479E-05, 29.5906454051487, 2 ),
      ( 500, 24.0599372238461, 99999.9999556471, -0.000227724493325551, 29.5970621577075, 2 ),
      ( 500, 241.08573552078, 1000000, -0.00224465230520786, 29.6608281713314, 2 ),
      ( 500, 2448.29417187933, 9999999.99995234, -0.017501309150395, 30.2563408572679, 2 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601834622394024, 999.999999999645, -0.000785615187640219, 28.0909216653, 2 ),
      ( 250, 0.481245426710801, 999.99999999969, -0.000324111405134237, 29.84778810024, 2 ),
      ( 250, 4.8265868488808, 9999.99999682032, -0.00325123188296083, 30.0015336107072, 2 ),
      ( 300, 0.400971913442124, 999.999999999899, -0.000159708923576253, 31.6385546536126, 2 ),
      ( 300, 4.01550101219891, 9999.99999895947, -0.00159936846759631, 31.7139620574297, 2 ),
      ( 300, 40.7521567146217, 99999.988186317, -0.0162290593570278, 32.4839776616679, 2 ),
      ( 300, 21566.4171840991, 10000000.0000195, -0.814105481115917, 51.6118745154348, 1 ),
      ( 350, 0.343666496182547, 999.999999999969, -9.07131035448075E-05, 33.424888253822, 2 ),
      ( 350, 3.43947549927674, 9999.99999968941, -0.000907780269358334, 33.4597625072374, 2 ),
      ( 350, 34.6806457260628, 99999.9966507401, -0.00914382043501982, 33.8129010102128, 2 ),
      ( 350, 381.577399292946, 999999.999581545, -0.0994348151058505, 37.8816821447442, 2 ),
      ( 350, 19309.8961105149, 10000000.0035297, -0.822041859117635, 50.8122134256934, 1 ),
      ( 400, 0.300697962331154, 999.995713511906, -5.67222698284611E-05, 35.1484512838135, 2 ),
      ( 400, 3.0085162216951, 9999.99999992518, -0.000567443117589024, 35.1648068522919, 2 ),
      ( 400, 30.2403526544042, 99999.9990552813, -0.00569643002829898, 35.329641899918, 2 ),
      ( 400, 319.666191399515, 999999.999991859, -0.0593909707158967, 37.1210097686794, 2 ),
      ( 400, 16284.2637831823, 9999999.9999919, -0.815354927929014, 51.1824964514474, 1 ),
      ( 500, 0.240550921343958, 999.993390238032, -2.57596740819476E-05, 38.2226902722393, 2 ),
      ( 500, 2.40606711826134, 9999.99999999436, -0.000257628043692754, 38.2274162190939, 2 ),
      ( 500, 24.1166753033023, 99999.9999427769, -0.00257924541566332, 38.2747907869578, 2 ),
      ( 500, 246.989632287013, 999999.999999995, -0.0260938381812636, 38.7604898328634, 2 ),
      ( 500, 3404.26534731355, 9999999.99154437, -0.293401952130245, 45.2621093599113, 2 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
