#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Butane_Isobutane"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Butane_Isobutane : MixtureTestBase
  {

    public Test_Mixture_Butane_Isobutane()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("106-97-8", 0.5), ("75-28-5", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 150, 12148.5316881716, 99999.9999969254, -0.993399903660346, 72.7526598772032, 1 ),
      ( 150, 12156.1058642444, 1000000.00011123, -0.934040160183088, 72.8233225153513, 1 ),
      ( 150, 12229.7423105657, 9999999.99999603, -0.344373106830217, 73.4991061334058, 1 ),
      ( 200, 0.601935795355977, 999.999999989456, -0.000954750836521435, 63.560119214562, 2 ),
      ( 200, 11317.3898456218, 99999.9999983358, -0.994686397626207, 79.213654994292, 1 ),
      ( 200, 11328.9118799561, 1000000.00220751, -0.946918017877674, 79.2759534274531, 1 ),
      ( 200, 11438.7060480611, 10000000.0000021, -0.474275242215358, 79.8678581496024, 1 ),
      ( 250, 0.481305571147466, 999.99999999718, -0.000450220897226554, 75.6448408074833, 2 ),
      ( 250, 4.83275506545622, 9999.99997000488, -0.00452460176210493, 75.7659706472343, 2 ),
      ( 250, 10432.2385522907, 100000.000003091, -0.995388440628607, 87.5872577982165, 1 ),
      ( 250, 10450.7000731676, 1000000.00000013, -0.953965870828228, 87.6449376056063, 1 ),
      ( 250, 10620.3635882036, 10000000.000051, -0.547012799208795, 88.1969560405891, 1 ),
      ( 300, 0.401007361713546, 999.999999999581, -0.000249282071294982, 88.8348934670956, 2 ),
      ( 300, 4.01911574810858, 9999.99999562878, -0.00249850241763351, 88.8898972407479, 2 ),
      ( 300, 41.1432932835623, 99999.9999999994, -0.0255826265419945, 89.476090473768, 2 ),
      ( 300, 9457.85590664469, 1000000.00000024, -0.957611175119917, 98.2721753862189, 1 ),
      ( 300, 9744.63327718426, 10000000.0022097, -0.588586469651342, 98.711920296621, 1 ),
      ( 350, 0.343687276472919, 999.999999999968, -0.000152359729593923, 102.57430856403, 2 ),
      ( 350, 3.4415989297277, 9999.99999965655, -0.00152539738306514, 102.602916231807, 2 ),
      ( 350, 34.9023485985418, 99999.994541624, -0.0154389991826746, 102.897812736467, 2 ),
      ( 350, 419.432086274118, 999999.9999377, -0.180713818460457, 107.077942139563, 2 ),
      ( 350, 8758.14806787577, 9999999.99999998, -0.607639754764296, 110.693713223751, 1 ),
      ( 400, 0.300710407104678, 999.998263325897, -9.92939594220648E-05, 116.125147763993, 2 ),
      ( 400, 3.0097959570626, 9999.99999997785, -0.000993580244667607, 116.141770362188, 2 ),
      ( 400, 30.3717938988469, 99999.9996247974, -0.0100006953784779, 116.310677404103, 2 ),
      ( 400, 336.984287773245, 999999.999513318, -0.107731252599177, 118.326540324178, 2 ),
      ( 400, 7555.45547440149, 10000000.0000002, -0.602035179289196, 123.485477465776, 1 ),
      ( 500, 0.240555820398678, 999.998346396549, -4.73142539276699E-05, 140.935236602238, 2 ),
      ( 500, 2.40658321199385, 9999.99999999932, -0.000473212553488802, 140.942152396275, 2 ),
      ( 500, 24.1689822782581, 99999.9999920327, -0.00473906639289453, 141.011598744448, 2 ),
      ( 500, 252.699129319344, 999999.999999996, -0.0480994560266039, 141.735841816761, 2 ),
      ( 500, 4100.44457082644, 10000000, -0.413369856595316, 147.859618106849, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 150, 12270.1140230994, 99999.9999944811, -0.993465302820515, 82.1639681731075, 1 ),
      ( 150, 12277.4427905749, 1000000.00010785, -0.934692035690734, 82.2319864540575, 1 ),
      ( 150, 12348.7303406732, 10000000.0161178, -0.350690496352725, 82.8862590417919, 1 ),
      ( 200, 0.60198827979125, 999.999997707851, -0.00104185273868285, 65.8675441090411, 2 ),
      ( 200, 11450.3402033236, 100000.000002015, -0.994748094078795, 82.9039438585225, 1 ),
      ( 200, 11461.2948093691, 1000000.00000584, -0.947531137927989, 82.9583980650595, 1 ),
      ( 200, 11565.928579067, 10000000.0188767, -0.480058091609168, 83.480672657275, 1 ),
      ( 250, 0.481320793302903, 999.999996831939, -0.000481832457708127, 77.095158757574, 2 ),
      ( 250, 4.83430503467035, 9999.99999999971, -0.00484376992685266, 77.2378529167023, 2 ),
      ( 250, 10587.9768969322, 99999.9999983378, -0.995456271964143, 89.4974269722384, 1 ),
      ( 250, 10605.1465989815, 1000000.01224326, -0.954636281686663, 89.5481699716595, 1 ),
      ( 250, 10763.9856001472, 10000000.0000105, -0.553056929664121, 90.0383740514905, 1 ),
      ( 300, 0.40101296677082, 999.999999640855, -0.000263255833892138, 89.7376203551195, 2 ),
      ( 300, 4.0196820030483, 9999.99620653796, -0.00263902002996476, 89.8014642886765, 2 ),
      ( 300, 41.2062690656885, 100000.00501937, -0.0270718357142949, 90.4802536578132, 2 ),
      ( 300, 9648.02209984056, 1000000, -0.958446675015967, 99.3147329616947, 1 ),
      ( 300, 9909.44578468901, 10000000.0012107, -0.595429041619639, 99.7343590448111, 1 ),
      ( 350, 0.343689675102533, 999.999999941071, -0.000159337722622326, 103.070224118723, 2 ),
      ( 350, 3.44184039865164, 9999.99939221512, -0.00159544718942941, 103.103003360713, 2 ),
      ( 350, 34.9281937654992, 99999.9999944048, -0.0161675273567648, 103.440811475849, 2 ),
      ( 350, 425.703106677474, 999999.999999927, -0.192782700001131, 108.272043569312, 2 ),
      ( 350, 8952.58639579311, 10000000.0015091, -0.616161299953579, 111.156032709154, 1 ),
      ( 400, 0.300711529460771, 999.999999999297, -0.000103026096031674, 116.291142304883, 2 ),
      ( 400, 3.00990875854766, 9999.9998980366, -0.00103101971045652, 116.309886874553, 2 ),
      ( 400, 30.3836594850291, 99999.9999998873, -0.0103873151158911, 116.500367911894, 2 ),
      ( 400, 339.042759739859, 999999.998289741, -0.113148593323989, 118.77962862344, 2 ),
      ( 400, 7801.72884932406, 10000000.0000326, -0.614597540963271, 123.442146083274, 1 ),
      ( 500, 0.240556078579782, 999.999999999157, -4.83875492285308E-05, 140.637471561414, 2 ),
      ( 500, 2.40660915099565, 9999.99999147833, -0.000483985688847316, 140.64505859995, 2 ),
      ( 500, 24.1716986791793, 100000, -0.00485091321517751, 140.721253721402, 2 ),
      ( 500, 253.11108261159, 1000000.00000372, -0.0496487305940486, 141.516944513203, 2 ),
      ( 500, 4355.33214548433, 10000000.0044894, -0.44770127598833, 147.834587468721, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 150, 12410.4455806083, 1000000.00060089, -0.935391941352915, 83.893791452972, 1 ),
      ( 150, 12479.5716945966, 9999999.99999788, -0.357498145647694, 84.3800078153554, 1 ),
      ( 200, 0.602051368620528, 999.997250978623, -0.00114653018667092, 68.1756379431339, 2 ),
      ( 200, 11596.9907733855, 100000.000000819, -0.994814507435237, 85.6282716481777, 1 ),
      ( 200, 11607.4169248323, 1000000.00303132, -0.948191651755381, 85.6730414981893, 1 ),
      ( 200, 11707.2096224007, 9999999.99999718, -0.48633268213363, 86.1072946111845, 1 ),
      ( 250, 0.481339909660479, 999.999987208679, -0.000521528198347891, 78.5457228611292, 2 ),
      ( 250, 4.83625208023131, 9999.9969042179, -0.00524441210944602, 78.7121965339637, 2 ),
      ( 250, 10753.1696886922, 100000.000002297, -0.99552607381535, 91.4278049792406, 1 ),
      ( 250, 10769.2091003237, 1000000.00072, -0.955327371495943, 91.4727763456628, 1 ),
      ( 250, 10918.4192774897, 9999999.99999685, -0.559378637979213, 91.9121465239233, 1 ),
      ( 300, 0.401020304059035, 999.999998582579, -0.000281547567339103, 90.6404622928834, 2 ),
      ( 300, 4.02042312896086, 9999.98477704559, -0.00282287052210161, 90.7141837634735, 2 ),
      ( 300, 41.2885965343619, 100000.006981355, -0.0290118082084352, 91.4962078094473, 2 ),
      ( 300, 9840.79504711925, 1000000.00000043, -0.959260669910464, 100.541057781055, 1 ),
      ( 300, 10081.3915900995, 10000000.0012578, -0.602329307187909, 100.954975548328, 1 ),
      ( 350, 0.343692939259595, 999.99999977133, -0.000168833515452228, 103.566204423921, 2 ),
      ( 350, 3.44216885366665, 9999.99762291771, -0.00169071559271002, 103.603739227407, 2 ),
      ( 350, 34.9632011098449, 99999.9998881242, -0.0171526019610702, 103.99043386004, 2 ),
      ( 350, 8694.79784775682, 1000000.00006896, -0.960478102146493, 111.725881202954, 1 ),
      ( 350, 9148.06360382615, 9999999.9999996, -0.624363223460443, 111.818383972765, 1 ),
      ( 400, 0.300713117854392, 999.999999997319, -0.000108307641399418, 116.457175084784, 2 ),
      ( 400, 3.01006828982845, 9999.99960895815, -0.00108396425835563, 116.478386138139, 2 ),
      ( 400, 30.4003292903235, 99999.9999980772, -0.0109299621833245, 116.693919862448, 2 ),
      ( 400, 341.799353427145, 999999.998192991, -0.120301002929179, 119.27609857498, 2 ),
      ( 400, 8034.16887545759, 10000000.000008, -0.625747786750438, 123.573683954292, 1 ),
      ( 500, 0.240556489703181, 999.9999999969, -5.00965179057828E-05, 140.339725463925, 2 ),
      ( 500, 2.40665039404855, 9999.99996864317, -0.000501114512029393, 140.348154319381, 2 ),
      ( 500, 24.1759554591242, 99999.999999997, -0.00502613402979399, 140.432810874572, 2 ),
      ( 500, 253.68901304071, 1000000.00036415, -0.0518137314163643, 141.317820866381, 2 ),
      ( 500, 4608.37841981839, 10000000, -0.478028024725091, 147.835392066594, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
