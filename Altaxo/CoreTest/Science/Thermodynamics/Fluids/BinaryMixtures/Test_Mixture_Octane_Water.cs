#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Octane_Water"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Octane_Water : MixtureTestBase
  {

    public Test_Mixture_Octane_Water()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("111-65-9", 0.5), ("7732-18-5", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.401105740280136, 999.99999976561, -0.000482407358433173, 25.5600142143763, 2 ),
      ( 300, 55209.6964026068, 999999.999912928, -0.99273837260372, 74.4733096616637, 1 ),
      ( 300, 55430.7520991088, 10000000.0000412, -0.927673316932773, 73.9563142364447, 1 ),
      ( 300, 57435.1241812924, 100000000.000012, -0.301973749279544, 69.9515294374297, 1 ),
      ( 350, 0.343707969851642, 999.999999940552, -0.00020047144960509, 25.7763213932313, 2 ),
      ( 350, 3.4433385701297, 9999.99934869498, -0.00201778226557951, 26.0679685504171, 2 ),
      ( 350, 53934.7064377741, 1000000.00012715, -0.99362860968444, 70.180475429654, 1 ),
      ( 350, 54154.2046653316, 10000000.0000265, -0.93654434252322, 69.8725230509874, 1 ),
      ( 350, 56120.1640448827, 100000000.00059, -0.387672733914471, 67.2955102740593, 1 ),
      ( 400, 0.300715710287516, 999.999999994002, -0.000104841040366309, 26.1644950321791, 2 ),
      ( 400, 3.01000585526106, 9999.99993769201, -0.00105116933214362, 26.2665807072065, 2 ),
      ( 400, 30.3965130664615, 99999.999998695, -0.0107938289838786, 27.371591426318, 2 ),
      ( 400, 51919.6041053042, 1000000.00015477, -0.994208658017053, 65.5881396043163, 1 ),
      ( 400, 52171.7946087009, 9999999.99998346, -0.942366524825702, 65.399540032189, 1 ),
      ( 400, 54357.0583065198, 100000000.003482, -0.446835071070107, 63.7559848864707, 1 ),
      ( 500, 0.240557159463175, 999.999999998932, -4.07932631089719E-05, 27.165992585902, 2 ),
      ( 500, 2.40645574984507, 9999.99998915685, -0.000408187986531494, 27.1887068800269, 2 ),
      ( 500, 24.1539490933401, 99999.9999999995, -0.00410758743605088, 27.4213325092346, 2 ),
      ( 500, 251.577893931526, 999999.999999981, -0.0438454564010759, 30.3282819804399, 2 ),
      ( 500, 46377.0909085863, 10000000.0000004, -0.94813229082742, 58.2421267029427, 1 ),
      ( 500, 49776.2439624316, 99999999.9999896, -0.516742672401686, 57.5414045591629, 1 ),
      ( 600, 0.200460142632072, 999.999999999997, -2.0057215806817E-05, 28.3018839363546, 2 ),
      ( 600, 2.00496344767595, 9999.99999929573, -0.000200616165389854, 28.3101371644988, 2 ),
      ( 600, 20.0859965720194, 99999.9911399114, -0.00201057349988928, 28.393316368126, 2 ),
      ( 600, 204.663760682675, 999999.999792464, -0.0205587872909914, 29.2908311314227, 2 ),
      ( 600, 2762.19237117228, 9999999.99999999, -0.274286164671956, 47.4973497399218, 2 ),
      ( 600, 43807.2996161414, 99999999.9999986, -0.542413881439365, 53.0334154339021, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.401111421141916, 999.999999993389, -0.000504879968731161, 102.878841410143, 2 ),
      ( 350, 0.343727187700736, 999.99999654694, -0.000264689059433794, 115.74659285795, 2 ),
      ( 350, 3.44551848440218, 9999.99999120108, -0.00265748556516498, 115.90339352283, 2 ),
      ( 400, 0.300728744825851, 999.999999447168, -0.000156499209101309, 128.696585679031, 2 ),
      ( 400, 3.01153871032603, 9999.9941327473, -0.00156793514896138, 128.76953943768, 2 ),
      ( 400, 30.5565112362777, 100000.00026525, -0.015981639144414, 129.544946789237, 2 ),
      ( 500, 0.240561453944843, 999.999999998374, -6.69647297798618E-05, 152.698364623855, 2 ),
      ( 500, 2.40706628309848, 9999.99976366134, -0.000670041764400353, 152.722048970888, 2 ),
      ( 500, 24.2177669239922, 99999.9999996036, -0.00674019374939232, 152.962647029433, 2 ),
      ( 500, 13229.2965507097, 100000000.000016, 0.818277667977829, 171.492691563427, 1 ),
      ( 600, 0.200461105324412, 999.999999997508, -3.3180074167856E-05, 173.23875543093, 2 ),
      ( 600, 2.00521000513563, 9999.99997486131, -0.000331867999631949, 173.249078064425, 2 ),
      ( 600, 20.1123272206428, 99999.9999999987, -0.00332541424730015, 173.352853033487, 2 ),
      ( 600, 207.49589176809, 1000000.000037, -0.0339353116742994, 174.444991821424, 2 ),
      ( 600, 3280.38598494598, 9999999.99999999, -0.388930281588888, 188.083226397678, 2 ),
      ( 600, 11967.6932107786, 100000000.00272, 0.674963173649251, 188.025454478196, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.401539513330925, 999.999991984864, -0.00157877650427542, 180.322580353871, 2 ),
      ( 300, 6107.877595045, 99999.9999995314, -0.99343625398617, 206.691004925018, 1 ),
      ( 300, 6115.33664401096, 1000000.00464087, -0.934442599423041, 206.746255438883, 1 ),
      ( 300, 6185.4275925833, 10000000.000005, -0.351854716351849, 207.295241993778, 1 ),
      ( 300, 6654.36527518879, 100000000.014086, 5.02470041318981, 212.153918480633, 1 ),
      ( 350, 0.343927485099571, 999.999975550818, -0.000855231190757629, 205.760881170318, 2 ),
      ( 350, 3.46621061764243, 9999.98566164785, -0.00861952762505321, 206.170790648233, 2 ),
      ( 350, 5756.91295461799, 999999.999999733, -0.940309441833061, 227.900367879325, 1 ),
      ( 350, 5853.37590902872, 10000000.0000817, -0.412931352926042, 228.393822297384, 1 ),
      ( 350, 6427.35393139919, 99999999.9999996, 4.3464201792433, 232.937691332178, 1 ),
      ( 400, 0.300832817815941, 999.999995967586, -0.000510711178981866, 231.249862256214, 2 ),
      ( 400, 3.02229799880393, 9999.99999999949, -0.00513060174888646, 231.470062066103, 2 ),
      ( 400, 31.7817169793088, 99999.9999886811, -0.0539240553615768, 233.807346401136, 2 ),
      ( 400, 5371.6494098422, 999999.999999838, -0.9440247945852, 250.176893973157, 1 ),
      ( 400, 5510.38578255149, 10000000.0009563, -0.454340964460103, 250.564501195639, 1 ),
      ( 400, 6213.33257037992, 99999999.9999993, 3.83925776910189, 254.813580709151, 1 ),
      ( 500, 0.240596448368641, 999.999999784112, -0.000220722555085748, 278.238807737276, 2 ),
      ( 500, 2.41076433446739, 9999.99774494497, -0.00221129047053742, 278.317458570646, 2 ),
      ( 500, 24.608904083006, 99999.9998524188, -0.0225353290711071, 279.122444549472, 2 ),
      ( 500, 5816.46600287915, 100000000.000001, 3.13555831301579, 296.600655979364, 1 ),
      ( 600, 0.200475127689428, 999.999999979832, -0.000111443257413658, 318.180466442242, 2 ),
      ( 600, 2.00676592479561, 9999.99979410424, -0.00111525905418551, 318.214742249086, 2 ),
      ( 600, 20.2730773729259, 99999.9999996519, -0.01123651599567, 318.561548751544, 2 ),
      ( 600, 228.377249429396, 999999.999737952, -0.122273402464158, 322.496990930552, 2 ),
      ( 600, 3798.63668749189, 9999999.99996142, -0.472303348327836, 331.275175166449, 1 ),
      ( 600, 5455.76563754944, 100000000, 2.67414583772206, 333.01765473539, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
