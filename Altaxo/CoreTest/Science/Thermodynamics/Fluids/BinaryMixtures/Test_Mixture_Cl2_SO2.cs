#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Cl2_SO2"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Cl2_SO2 : MixtureTestBase
  {

    public Test_Mixture_Cl2_SO2()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("7782-50-5", 0.5), ("7446-09-5", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601836056596263, 999.999999998875, -0.000787995170448703, 28.0953960304741, 2 ),
      ( 200, 25319.1332906467, 100000.000002071, -0.997624872045244, 56.0009816529782, 1 ),
      ( 200, 25332.4414378916, 1000000.00003185, -0.97626119795117, 56.013221878807, 1 ),
      ( 200, 25462.3498632582, 9999999.9999995, -0.763823128690123, 56.1383768202932, 1 ),
      ( 250, 0.48124590235238, 999.999999999451, -0.000325098249042718, 29.852477469867, 2 ),
      ( 250, 4.82663494765281, 9999.99999436671, -0.00326116357652223, 30.0066098976677, 2 ),
      ( 250, 23343.5476691399, 99999.9999993133, -0.997939090248971, 53.1095499888886, 1 ),
      ( 250, 23363.1207186992, 1000000.00092633, -0.979408168268703, 53.1092197053609, 1 ),
      ( 250, 23551.0514234415, 10000000.0000023, -0.79572485257595, 53.1236282340302, 1 ),
      ( 300, 0.400972096445712, 999.999999999847, -0.000160164059989646, 31.6437063181946, 2 ),
      ( 300, 4.01551937937607, 9999.99999844772, -0.00160393401082563, 31.7193817410781, 2 ),
      ( 300, 40.7541097733767, 99999.9820442295, -0.0162762024074756, 32.4921727608542, 2 ),
      ( 300, 21270.7576886585, 1000000.01521197, -0.981152157949267, 51.8806388434207, 1 ),
      ( 300, 21567.8450272793, 10000000.0000245, -0.814117787558448, 51.6390049556734, 1 ),
      ( 350, 0.343666578531171, 999.999999999959, -9.09515090022562E-05, 33.4305420501796, 2 ),
      ( 350, 3.43948372435913, 9999.9999995695, -0.000910168280114433, 33.4655686449689, 2 ),
      ( 350, 34.6814958161428, 99999.9953222495, -0.00916810634717048, 33.8202599667565, 2 ),
      ( 350, 381.703646558491, 999999.998968505, -0.0997326730329971, 37.9085314524406, 2 ),
      ( 350, 19315.62570146, 10000000.0032122, -0.82209464660599, 50.8355263056282, 1 ),
      ( 400, 0.300698005265511, 999.995051965762, -5.68638151886561E-05, 35.1545666137813, 2 ),
      ( 400, 3.00852049122892, 9999.99999990003, -0.000568860269612537, 35.1710008540005, 2 ),
      ( 400, 30.2407877662833, 99999.9987324449, -0.00571073510934962, 35.3366322797858, 2 ),
      ( 400, 319.720149503841, 999999.999983764, -0.0595497130473643, 37.1370936949227, 2 ),
      ( 400, 16300.721867559, 10000000.019605, -0.815541354962844, 51.1927980466309, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.60169373652226, 999.999999996106, -0.000551649139565593, 25.7393354175602, 2 ),
      ( 250, 0.481206793240601, 999.999999999123, -0.000243851687226579, 27.2576520019362, 2 ),
      ( 250, 4.82268192340784, 9999.99999097623, -0.00244416323708113, 27.346907920593, 2 ),
      ( 250, 49.344329044694, 99999.9999999943, -0.0250359879928382, 28.2682604473838, 2 ),
      ( 250, 22060.2885842609, 1000000.00574714, -0.978192059867486, 43.9348498956717, 1 ),
      ( 250, 22295.161722012, 9999999.99999935, -0.784218003821895, 43.9092113095511, 1 ),
      ( 300, 0.400958739493558, 999.999999999798, -0.000126856860184365, 28.6529784319009, 2 ),
      ( 300, 4.01417662251503, 9999.99999796239, -0.0012699668509144, 28.697252377341, 2 ),
      ( 300, 40.6123743348136, 99999.9999999999, -0.0128430512276194, 29.1476291747882, 2 ),
      ( 300, 19827.9230911207, 1000000.00000476, -0.979780642012464, 43.2665875852367, 1 ),
      ( 300, 20223.6495826464, 10000000.0000176, -0.801762845283664, 42.9131140740621, 1 ),
      ( 350, 0.343660955341235, 999.99999999995, -7.45903879299804E-05, 29.9237018069137, 2 ),
      ( 350, 3.43891977447184, 9999.99999948324, -0.000746327122220704, 29.945465617443, 2 ),
      ( 350, 34.6234219076029, 99999.9944067748, -0.00750618286497964, 30.1653653590183, 2 ),
      ( 350, 373.541826933232, 999999.99900089, -0.0800619989713798, 32.6281730654732, 2 ),
      ( 350, 17783.010776468, 10000000.0000496, -0.806762012430827, 42.3409148531054, 1 ),
      ( 400, 0.30069521985408, 999.994286577434, -4.7601113191933E-05, 31.0707033573892, 2 ),
      ( 400, 3.00824146201355, 9999.99999988847, -0.000476158107830879, 31.0818710672594, 2 ),
      ( 400, 30.2123887488842, 99999.9985898065, -0.00477612388961877, 31.1942926018971, 2 ),
      ( 400, 316.288067909207, 999999.999984749, -0.049344768732592, 32.3997397797828, 2 ),
      ( 400, 14178.6743363477, 10000000.0000002, -0.787934401191513, 43.8650586930384, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601631822275119, 999.99999998906, -0.000448795384325507, 23.3855109511191, 2 ),
      ( 200, 6.04084987858235, 9999.99999999755, -0.00450793383633351, 23.3998419187975, 2 ),
      ( 200, 23551.8312307908, 99999.9999984848, -0.997446645202591, 36.7666634230557, 1 ),
      ( 200, 23567.3418009425, 1000000.00002213, -0.974483256627918, 36.78441958718, 1 ),
      ( 200, 23717.9499681207, 10000000.0147174, -0.746452870346236, 36.9606126834957, 1 ),
      ( 250, 0.48119539401013, 999.999999997839, -0.00022016806329374, 24.6649320133523, 2 ),
      ( 250, 4.82153224944182, 9999.99997766788, -0.00220630026630304, 24.7084360706546, 2 ),
      ( 250, 49.2186626880617, 99999.9999999889, -0.0225466847784634, 25.1575223559058, 2 ),
      ( 250, 21651.2219750154, 1000000.00001973, -0.977780032429428, 35.0767631677165, 1 ),
      ( 250, 21874.3695033685, 10000000.0000003, -0.780067055154366, 35.2112933922476, 1 ),
      ( 300, 0.400956379636844, 999.999999999529, -0.000120972037120713, 25.6638871105865, 2 ),
      ( 300, 4.01393972005851, 9999.99999519863, -0.00121102187021535, 25.6915397344934, 2 ),
      ( 300, 40.587726365825, 99999.9999999997, -0.012243574154581, 25.9726010104478, 2 ),
      ( 300, 19568.1691524866, 1000000.00000323, -0.979512243992846, 34.4767067958196, 1 ),
      ( 300, 19931.6371550659, 9999999.99999967, -0.79885853228848, 34.4586022689847, 1 ),
      ( 350, 0.343660459877691, 999.999999999881, -7.31487714375611E-05, 26.417786594052, 2 ),
      ( 350, 3.43887017314083, 9999.9999988011, -0.000731914158121248, 26.4346283115235, 2 ),
      ( 350, 34.618406872746, 99999.9868460843, -0.00736240357253386, 26.6047061932914, 2 ),
      ( 350, 372.98849696331, 999999.992015135, -0.0786972665675676, 28.4974314178084, 2 ),
      ( 350, 17699.2051820737, 10000000.0000658, -0.805847032109995, 34.0453801573002, 1 ),
      ( 400, 0.300695202944576, 999.991182990022, -4.75447339226656E-05, 26.9873293363583, 2 ),
      ( 400, 3.00823979159229, 9999.99999973447, -0.00047560309027284, 26.9976388654979, 2 ),
      ( 400, 30.2122432017139, 99999.9966110854, -0.00477132931421962, 27.1014538357584, 2 ),
      ( 400, 316.306823674829, 999999.999887913, -0.049401138889012, 28.217952357928, 2 ),
      ( 400, 14649.173133064, 10000000.0020267, -0.794745475620916, 35.3284365932497, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
