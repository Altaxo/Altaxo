#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Nitrogen_Nonane"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Nitrogen_Nonane : MixtureTestBase
  {

    public Test_Mixture_Nitrogen_Nonane()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("7727-37-9", 0.5), ("111-84-2", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 250, 5872.52597190266, 1000000.00212185, -0.918078033585881, 207.593544762618, 1 ),
      ( 250, 5915.70673148481, 10000000.0000001, -0.186760099980282, 208.286981047263, 1 ),
      ( 250, 6239.51971291048, 100000000.000002, 6.71035107281029, 214.308080034894, 1 ),
      ( 300, 5566.5745029863, 1000000.00148933, -0.927979514920216, 229.187024022465, 1 ),
      ( 350, 0.344026006327544, 999.999997063102, -0.00113681965089749, 231.760145199179, 2 ),
      ( 350, 5256.74521844822, 1000000.00012559, -0.934629719315298, 253.714604409715, 1 ),
      ( 350, 5333.62280600487, 10000000.000016, -0.355719511312521, 254.32476403199, 1 ),
      ( 350, 5814.73004016055, 100000000.000017, 4.90973112128246, 259.562114241278, 1 ),
      ( 400, 0.300883770580442, 999.999260408053, -0.000675421867995978, 260.250553803364, 2 ),
      ( 400, 3.02737722773957, 9999.99363198547, -0.00679523669901924, 260.555142807892, 2 ),
      ( 400, 4931.26042763806, 999999.999999641, -0.939025620123644, 279.006822850728, 1 ),
      ( 400, 5038.16173242847, 10000000.000155, -0.403193936755166, 279.54706792805, 1 ),
      ( 400, 5622.36203129011, 100000000.000004, 4.34793998106633, 284.493217534621, 1 ),
      ( 500, 0.24061442772752, 999.999962042279, -0.000290880992493843, 312.881723085692, 2 ),
      ( 500, 2.41247875446389, 9999.99999996886, -0.00291583037803349, 312.989839167349, 2 ),
      ( 500, 24.7958064106001, 100000.00300538, -0.0298987121094918, 314.105093662335, 2 ),
      ( 500, 4148.45259225375, 1000000.00000044, -0.942015864420499, 327.799695120127, 1 ),
      ( 500, 4401.91235190157, 10000000.0000015, -0.453545599432569, 327.722136118255, 1 ),
      ( 500, 5266.95234572653, 100000000.002008, 3.5670517175053, 331.927520568694, 1 ),
      ( 600, 0.200483297850889, 999.999996469511, -0.000147642638256659, 357.560686305264, 2 ),
      ( 600, 2.00750382327206, 9999.99999999991, -0.00147787693289962, 357.607431935521, 2 ),
      ( 600, 20.3491212702424, 100000.000031992, -0.0149270062070386, 358.082188854962, 2 ),
      ( 600, 241.037945781127, 999999.999995562, -0.168372857981178, 363.774081938412, 2 ),
      ( 600, 3647.43775572821, 10000000.0004038, -0.450425993809254, 370.298886808321, 1 ),
      ( 600, 4945.42484329322, 100000000.017428, 3.05331603144769, 373.0457433122, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.401041933092692, 999.995829593846, -0.000337747474662024, 111.990119500124, 2 ),
      ( 300, 9831.2763448403, 100000000.011778, 3.0778680977761, 128.901803871258, 1 ),
      ( 350, 0.343702776154751, 999.99999999974, -0.000199733753247896, 126.386434485957, 2 ),
      ( 350, 3.44322973345695, 9999.99999147621, -0.0020005816881477, 126.439047750289, 2 ),
      ( 350, 9402.84287823593, 100000000, 2.65457693549951, 140.761189038569, 1 ),
      ( 400, 0.300718147995431, 999.999995456423, -0.000127317805404487, 140.699317704315, 2 ),
      ( 400, 3.01063515142875, 9999.99999888107, -0.00127432884690897, 140.728318564063, 2 ),
      ( 400, 30.4597193008805, 99999.9999868407, -0.0128606951831785, 141.022772648102, 2 ),
      ( 400, 8997.62718869089, 100000000.004004, 2.34176838988183, 153.098512688234, 1 ),
      ( 500, 0.240558101582593, 999.999999701965, -5.90818018935202E-05, 167.215262867567, 2 ),
      ( 500, 2.40686119105243, 9999.99696030733, -0.000590935971012244, 167.226254094742, 2 ),
      ( 500, 24.1976693520006, 99999.9994606886, -0.00592125012064239, 167.336902001697, 2 ),
      ( 500, 256.026205719722, 999999.994323143, -0.0604716091842825, 168.51799969719, 2 ),
      ( 500, 8257.11541709627, 100000000, 1.91317096620056, 176.78122501021, 1 ),
      ( 600, 0.200459232889802, 999.999999972488, -2.98917439527797E-05, 189.844050692091, 2 ),
      ( 600, 2.0051316808642, 9999.99972568165, -0.000298869503722538, 189.849205406992, 2 ),
      ( 600, 20.105316268832, 99999.9999999031, -0.0029838967241654, 189.900919780091, 2 ),
      ( 600, 206.514660811841, 999999.999996927, -0.0293510396513986, 190.433480154343, 2 ),
      ( 600, 7607.94789701429, 100000000, 1.63478724522294, 197.513912186666, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 250, 0.481090601337031, 999.999999994871, -8.14929391762544E-06, 20.9525589489942, 2 ),
      ( 250, 22497.1762244425, 99999999.9999999, 1.13843140129435, 24.9401808749074, 1 ),
      ( 300, 0.400906371201247, 999.999999999995, -1.96584302857464E-06, 20.9940460355192, 2 ),
      ( 300, 4.00913440504364, 9999.99999995339, -1.96381063049952E-05, 20.9946832243565, 2 ),
      ( 300, 40.0983497519541, 99999.9996533421, -0.00019434763813257, 21.0010482512671, 2 ),
      ( 300, 20346.3990873288, 100000000.000044, 0.970400588344731, 24.1842792851355, 1 ),
      ( 350, 0.343632960960263, 1000, 1.09116024759147E-06, 21.0630536828631, 1 ),
      ( 350, 3.4362958899867, 10000.0000000066, 1.09257807790713E-05, 21.0634958662154, 1 ),
      ( 350, 34.3595315948578, 100000.000102555, 0.000110675174908024, 21.0679135448521, 1 ),
      ( 350, 343.204996753292, 1000000.00000008, 0.00124807817697401, 21.1116714709841, 1 ),
      ( 350, 3348.35732786929, 10000000.0000018, 0.0262744079315474, 21.5064545642287, 1 ),
      ( 350, 18549.0863712128, 100000000.000006, 0.852562096824033, 23.7039411727114, 1 ),
      ( 400, 0.300678352678575, 1000.01745067059, 2.68291092447693E-06, 21.1747470083043, 1 ),
      ( 400, 3.00671105919103, 10000.0000000596, 2.68385403107946E-05, 21.1750785409526, 1 ),
      ( 400, 30.0598202025484, 100000.000813149, 0.000269374425164993, 21.1783913704633, 1 ),
      ( 400, 299.842044029565, 1000000.0000006, 0.00279190820023379, 21.2112680106037, 1 ),
      ( 400, 2899.157850567, 10000000.0000004, 0.0371259206665678, 21.5148017246673, 1 ),
      ( 400, 17040.9462367622, 100000000.000028, 0.764451171403217, 23.4188362603282, 1 ),
      ( 500, 0.240542369554104, 1000.00000000002, 3.95690504691823E-06, 21.5576986714987, 1 ),
      ( 500, 2.40533821479167, 10000.0000001538, 3.95741228193888E-05, 21.5579149952458, 1 ),
      ( 500, 24.0448063441446, 100000.001591911, 0.000396247542469682, 21.5600772365486, 1 ),
      ( 500, 239.582015693654, 1000000.00000091, 0.00401250776002454, 21.5815994853198, 1 ),
      ( 500, 2302.64565012095, 10000000.0099827, 0.0446389803521999, 21.7866742626039, 1 ),
      ( 500, 14675.9031606659, 100000000.000067, 0.639036029066538, 23.2734208524399, 1 ),
      ( 600, 0.200451920566564, 1000.00000000002, 4.22131861546107E-06, 22.1307086385402, 1 ),
      ( 600, 2.00444321710098, 10000.0000001321, 4.22159711491733E-05, 22.130868003115, 1 ),
      ( 600, 20.0368140652469, 100000.001340158, 0.000422437470284893, 22.1324611915805, 1 ),
      ( 600, 199.604113065514, 1000000.00000049, 0.0042517690644338, 22.1483469706346, 1 ),
      ( 600, 1918.30974782363, 10000000.0091941, 0.0449448213333356, 22.3023985718843, 1 ),
      ( 600, 12916.8339152285, 100000000.000001, 0.551872424599917, 23.514273327918, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
