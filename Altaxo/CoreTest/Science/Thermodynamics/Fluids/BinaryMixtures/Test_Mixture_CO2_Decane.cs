#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_CO2_Decane"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_CO2_Decane : MixtureTestBase
  {

    public Test_Mixture_CO2_Decane()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("124-38-9", 0.5), ("124-18-5", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 5105.31455439042, 1000000.00349847, -0.92147253747734, 253.188943094797, 1 ),
      ( 300, 5154.42835750828, 10000000.0000008, -0.222207841419056, 253.828436704533, 1 ),
      ( 300, 5497.00149341742, 100000000.009826, 6.29320151091017, 259.587103054635, 1 ),
      ( 350, 0.344176606941541, 999.999992145328, -0.00157389004425145, 257.761539949336, 2 ),
      ( 350, 4832.03575225639, 1000000.00000373, -0.928884029750264, 281.744093218952, 1 ),
      ( 350, 4897.59423121179, 9999999.99999994, -0.298359777158305, 282.315071599504, 1 ),
      ( 350, 5312.83361138328, 100000000, 5.46801567558241, 287.61830795729, 1 ),
      ( 400, 0.300956336783092, 999.999998461689, -0.000916378215935164, 289.463077771946, 2 ),
      ( 400, 3.0348475043303, 9999.98366615631, -0.00923999906106807, 289.926744892766, 2 ),
      ( 400, 4539.16372474916, 100000.0000006, -0.993375860286469, 310.612092078959, 1 ),
      ( 400, 4549.19645693699, 1000000.00000038, -0.933904690685924, 310.655078388814, 1 ),
      ( 400, 4639.02411968169, 10000000.0000273, -0.351845260581551, 311.123753249882, 1 ),
      ( 400, 5140.74932523785, 100000000.000001, 4.84896340841782, 316.024550789646, 1 ),
      ( 500, 0.240636226136447, 999.999894659066, -0.000381441177537451, 347.824918523252, 2 ),
      ( 500, 2.41468439856909, 9999.99999961162, -0.0038265965248467, 347.989189924108, 2 ),
      ( 500, 25.0457125897951, 100000.011980902, -0.0395783890580635, 349.702301834203, 2 ),
      ( 500, 3896.10385055488, 1000000.00000005, -0.938260260304132, 365.480637783389, 1 ),
      ( 500, 4093.7929233997, 10000000.0012479, -0.41241669500811, 365.284739030542, 1 ),
      ( 500, 4825.01985923516, 100000000.000996, 3.98535642507407, 369.246114325156, 1 ),
      ( 600, 0.200491604664733, 999.99999948463, -0.000189068749353426, 397.06792736759, 2 ),
      ( 600, 2.00833892482892, 9999.99999999938, -0.00189307945065637, 397.138792148398, 2 ),
      ( 600, 20.4373007499063, 100000.000213513, -0.0191772366994601, 397.861706215398, 2 ),
      ( 600, 259.658245513048, 999999.998776036, -0.228009502782346, 407.280635075855, 2 ),
      ( 600, 3472.28983347949, 10000000.0042972, -0.422704590752899, 412.37734269153, 1 ),
      ( 600, 4541.04206422091, 100000000.000001, 3.41426648625749, 414.771732100945, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 8295.2487588593, 10000000.0000004, -0.516703484997461, 150.035668823384, 1 ),
      ( 300, 9097.82399049014, 100000000.012554, 3.40661945200697, 154.333406132843, 1 ),
      ( 350, 0.343755694513732, 999.999999997256, -0.000353644772730947, 144.502144075603, 2 ),
      ( 350, 7676.62842157961, 10000000.0016781, -0.552363214301303, 163.372949325425, 1 ),
      ( 350, 8712.9421385461, 100000000.00008, 2.94395052377635, 167.093407601348, 1 ),
      ( 400, 0.300745287880705, 999.999990509025, -0.000217548410935641, 161.352534993015, 2 ),
      ( 400, 3.01336538589788, 9999.99999210325, -0.00217921587307374, 161.42648132568, 2 ),
      ( 400, 8349.4350387734, 100000000.001779, 2.60120007915622, 180.650917599441, 1 ),
      ( 500, 0.24056733933792, 999.99999943526, -9.7479406326447E-05, 192.221399384769, 2 ),
      ( 500, 2.407787219904, 9999.99416697886, -0.000975305769831152, 192.248124742916, 2 ),
      ( 500, 24.2925777875949, 99999.9950441553, -0.00980500610080179, 192.518140264156, 2 ),
      ( 500, 7682.78062145002, 99999999.9999996, 2.13094829630962, 206.858905124052, 1 ),
      ( 600, 0.200463166913075, 999.999999996977, -4.95158262161676E-05, 218.218889371165, 2 ),
      ( 600, 2.00552544907162, 9999.9995666675, -0.000495152475680097, 218.230832340354, 2 ),
      ( 600, 20.1450616247593, 99999.9999992769, -0.00495096737644993, 218.350883526403, 2 ),
      ( 600, 210.885049047211, 1000000.00009353, -0.0494667985311349, 219.611566016763, 2 ),
      ( 600, 7093.08109311496, 100000000.000273, 1.82603903977297, 229.761433840769, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 250, 0.481129617957525, 999.999999536519, -8.92424153123881E-05, 26.695354247235, 2 ),
      ( 300, 0.400925214376583, 999.999999983737, -4.90042837882367E-05, 29.1090278768226, 2 ),
      ( 300, 4.01102183647922, 9999.99983510393, -0.0004901901038824, 29.1185601613513, 2 ),
      ( 300, 40.2886454907418, 99999.9999999126, -0.00491673907127526, 29.2143951048061, 2 ),
      ( 300, 18212.7462958563, 9999999.99874123, -0.779876378459452, 41.9501172579005, 1 ),
      ( 300, 25566.4794632676, 100000000.019624, 0.56809062416155, 41.8339708725046, 1 ),
      ( 350, 0.343643389349066, 999.999999997399, -2.92335867626377E-05, 31.3069353441338, 2 ),
      ( 350, 3.43733841183572, 9999.99997379452, -0.000292370872569912, 31.3118604320146, 2 ),
      ( 350, 34.4642187450921, 99999.9999999989, -0.00292722152334502, 31.3612481281532, 2 ),
      ( 350, 354.128243833518, 1000000.00002395, -0.0296358751279891, 31.8691353229367, 2 ),
      ( 350, 5227.37208943466, 9999999.9999136, -0.342626969072043, 38.6538763243679, 2 ),
      ( 350, 23272.1434604463, 100000000, 0.47658656369285, 41.0388443837331, 1 ),
      ( 400, 0.300684668705491, 999.999999999971, -1.82690152272679E-05, 33.2763583766178, 2 ),
      ( 400, 3.00734117512715, 9999.99999595438, -0.000182693006189735, 33.2792099078648, 2 ),
      ( 400, 30.1229586895069, 99999.9999999998, -0.00182721560546648, 33.3077670772059, 2 ),
      ( 400, 306.284374888093, 999999.996845125, -0.0183006376989579, 33.5974484719212, 2 ),
      ( 400, 3677.39593071826, 9999999.99610371, -0.182358437377123, 36.7633216905668, 2 ),
      ( 400, 21130.6149454012, 100000000.005699, 0.422955159053634, 40.902571008416, 1 ),
      ( 500, 0.240545133934031, 999.999999999976, -7.45614696923373E-06, 36.6295524233563, 2 ),
      ( 500, 2.40561274948825, 9999.99999977541, -7.45529581548221E-05, 36.6307536348713, 2 ),
      ( 500, 24.0722601302995, 99999.9977869372, -0.000744678330504153, 36.6427696128734, 2 ),
      ( 500, 242.327236766822, 999999.999998736, -0.00736151816427592, 36.7632738966205, 2 ),
      ( 500, 2570.7627844134, 9999999.99986423, -0.0643114104001963, 37.9595029687027, 2 ),
      ( 500, 17485.5184963738, 100000000, 0.375671762000523, 41.6146702962584, 1 ),
      ( 600, 0.200453338211837, 999.999999999998, -2.71223838754179E-06, 39.3743105793914, 2 ),
      ( 600, 2.00458219121284, 9999.99999999229, -2.71151739634751E-05, 39.3749331875372, 2 ),
      ( 600, 20.0507007046046, 99999.9999258828, -0.000270431367981484, 39.3811587817001, 2 ),
      ( 600, 200.98191359007, 999999.999999998, -0.00263272410047839, 39.4433528778976, 2 ),
      ( 600, 2044.13809535516, 9999999.99980792, -0.0193774866907008, 40.0472453675671, 2 ),
      ( 600, 14736.2113935918, 100000000.001521, 0.360273535098906, 42.8358495075329, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
