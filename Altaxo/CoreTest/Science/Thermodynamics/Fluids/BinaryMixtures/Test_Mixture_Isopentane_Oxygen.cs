#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Isopentane_Oxygen"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Isopentane_Oxygen : MixtureTestBase
  {

    public Test_Mixture_Isopentane_Oxygen()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("78-78-4", 0.5), ("7782-44-7", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 200, 0.601388685350645, 999.993536962045, -3.00152133732583E-05, 20.8684093245567, 2 ),
      ( 200, 6.01551211264855, 9999.99999999371, -0.000300185316231022, 20.8708424270245, 2 ),
      ( 200, 60.3183184329231, 99999.9999368203, -0.00300497418964928, 20.895244000108, 2 ),
      ( 250, 0.481103135947692, 999.996593281087, -1.37774734786911E-05, 20.9597412821428, 2 ),
      ( 250, 4.81162796482341, 9999.9999999992, -0.000137768221919844, 20.9609092153902, 2 ),
      ( 250, 48.175987933153, 99999.999991993, -0.00137697600043384, 20.9725924570522, 2 ),
      ( 250, 487.77459027971, 1000000, -0.0136909196858025, 21.0897634211628, 2 ),
      ( 250, 5459.59738796256, 9999999.992377, -0.118805887341922, 22.2190694478019, 2 ),
      ( 300, 0.400916262605282, 999.99844466395, -6.25147636030826E-06, 21.1608853685764, 2 ),
      ( 300, 4.00938816830783, 9999.99999999995, -6.25046687530279E-05, 21.1615901023721, 2 ),
      ( 300, 40.1164092227948, 99999.9999992518, -0.000624023809536142, 21.1686341161792, 2 ),
      ( 300, 403.38824694529, 999999.993563654, -0.00613426556011116, 21.2387207273181, 2 ),
      ( 300, 4207.41456963056, 9999999.99999998, -0.0471256168178137, 21.8834242313262, 2 ),
      ( 350, 0.343641187601973, 999.999489627856, -2.35389955135524E-06, 21.4866000401666, 2 ),
      ( 350, 3.43648448810528, 9999.99999999999, -2.35306820164252E-05, 21.4870834030431, 2 ),
      ( 350, 34.3720955740272, 99999.9999999623, -0.00023447279187095, 21.4919134708812, 2 ),
      ( 350, 344.418662544645, 999999.999735977, -0.00225974983452146, 21.5398506933402, 2 ),
      ( 350, 3480.66877461526, 9999999.99999998, -0.0127174265062383, 21.9767382863974, 1 ),
      ( 400, 0.300685375628277, 999.999953528866, -1.9046998406317E-07, 21.9150884791426, 2 ),
      ( 400, 3.00685888066652, 9999.99548160312, -1.89850698924339E-06, 21.9154447775566, 2 ),
      ( 400, 30.0690839446553, 100000, -1.83651568114267E-05, 21.9190048125707, 2 ),
      ( 400, 300.721691637596, 1000000, -0.000120957105765795, 21.954307599249, 1 ),
      ( 400, 2990.02136860278, 10000000, 0.0056293254942291, 22.2758342926346, 1 ),
      ( 500, 0.240547810178032, 1000.00042210962, 1.80793003778803E-06, 22.9307162963188, 1 ),
      ( 500, 2.40543904104007, 10000, 1.80826270248781E-05, 22.9309342740842, 1 ),
      ( 500, 24.0504683988077, 100000.000000016, 0.000181159804906486, 22.93311215183, 1 ),
      ( 500, 240.105231122018, 1000000.00018401, 0.0018451186813457, 22.9547009691525, 1 ),
      ( 500, 2353.88475485288, 10000000, 0.0219202672254116, 23.1518114124433, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 250, 0.481158912297488, 999.999999162672, -0.000137617898517514, 57.4445409202535, 2 ),
      ( 250, 4.81756364942599, 9999.99999778718, -0.00137760239703092, 57.4679310928569, 2 ),
      ( 300, 0.400941849364352, 999.99999989152, -7.79893190027622E-05, 66.1403661268982, 2 ),
      ( 300, 4.01223635583424, 9999.99889126998, -0.000780251556333388, 66.151172298121, 2 ),
      ( 300, 40.4078043699389, 99999.9964498356, -0.00783874158275544, 66.2602351698678, 2 ),
      ( 350, 0.343653960300277, 999.999999981564, -4.74900501224971E-05, 74.7688375632638, 2 ),
      ( 350, 3.43800937541501, 9999.99981364899, -0.000474976546429091, 74.7744572509448, 2 ),
      ( 350, 34.5280273945274, 99999.9999880935, -0.00475739248676774, 74.8309494747767, 2 ),
      ( 400, 0.300691977165918, 999.999999996334, -3.00707357909333E-05, 83.181461051138, 2 ),
      ( 400, 3.00773377606437, 9999.9999631474, -0.000300699715860586, 83.1847264428505, 2 ),
      ( 400, 30.1589579151404, 99999.9999999979, -0.00300621797146321, 83.2174814603227, 2 ),
      ( 400, 309.971837992435, 1000000.00001117, -0.0299669251109438, 83.5547168374528, 2 ),
      ( 500, 0.240549325719464, 999.99999999983, -1.2378375705859E-05, 98.85650137195, 2 ),
      ( 500, 2.40576118949898, 9999.99999829401, -0.000123748111361789, 98.85794405731, 2 ),
      ( 500, 24.0843528011494, 99999.9838020872, -0.00123391255867359, 98.8723865965445, 2 ),
      ( 500, 243.462616056352, 999999.999964177, -0.0119782987382412, 99.0181776955374, 2 ),
      ( 500, 2610.38451411827, 10000000, -0.0785022405375955, 100.397289176971, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 250, 0.481474555670788, 999.999998978008, -0.000801019922428143, 93.961753501616, 2 ),
      ( 250, 4.85003067300817, 9999.99987789977, -0.00807042780747848, 94.2979190184166, 2 ),
      ( 300, 0.401075587911614, 999.999844479617, -0.000419331811558184, 111.134000238515, 2 ),
      ( 300, 4.02601840325752, 9999.99851693564, -0.00420871383342227, 111.276510649068, 2 ),
      ( 300, 8684.19602851418, 10000000.0000001, -0.538348279085106, 123.715919001945, 1 ),
      ( 350, 0.343720422284705, 999.999976035424, -0.000248761636423794, 128.05840766041, 2 ),
      ( 350, 3.44493646999445, 9999.99999998992, -0.00249272861172327, 128.127731177406, 2 ),
      ( 350, 35.2615433211496, 100000.001630219, -0.0254682997048991, 128.842794947698, 2 ),
      ( 350, 7752.94211696484, 1000000.00431181, -0.955676836726166, 138.270514259546, 1 ),
      ( 350, 8022.6186654314, 10000000.0055163, -0.571667391483783, 138.432611449765, 1 ),
      ( 400, 0.300728723303769, 999.99999504382, -0.000160178261515756, 144.452248984782, 2 ),
      ( 400, 3.01163536687171, 9999.99999999978, -0.00160372531412867, 144.489484496841, 2 ),
      ( 400, 30.5643368149014, 100000.000153604, -0.0162372738114886, 144.868375439048, 2 ),
      ( 400, 371.988098204539, 999999.999158643, -0.191693082046027, 150.134348298204, 2 ),
      ( 400, 7275.85294624748, 10000000.0000001, -0.58674184962163, 153.381405579764, 1 ),
      ( 500, 0.240562970546466, 999.999999637289, -7.70196130450541E-05, 174.784673982779, 2 ),
      ( 500, 2.40729924624919, 9999.99627266317, -0.000770498626066132, 174.798012888967, 2 ),
      ( 500, 24.2419695544693, 99999.9999059611, -0.00773556387999096, 174.932494974858, 2 ),
      ( 500, 261.670460619001, 1000000.00000374, -0.08073520446119, 176.40026842926, 2 ),
      ( 500, 5263.38931235031, 10000000.0010737, -0.542985653878553, 182.98952531774, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
