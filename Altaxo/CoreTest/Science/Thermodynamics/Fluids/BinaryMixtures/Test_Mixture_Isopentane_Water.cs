#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2018 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Science.Thermodynamics.Fluids
{

  /// <summary>
  /// Tests and test data for <see cref="Mixture_Isopentane_Water"/>.
  /// </summary>
  /// <remarks>
  /// <para>Reference:</para>
  /// <para>The test data was created automatically using calls into the TREND.DLL of the following software:</para>
  /// <para>TREND 3.0.: Span, R.; Eckermann, T.; Herrig, S.; Hielscher, S.; Jäger, A.; Thol, M. (2016): TREND.Thermodynamic Reference and Engineering Data 3.0.Lehrstuhl für Thermodynamik, Ruhr-Universität Bochum.</para>
  /// </remarks>
  
  public class Test_Mixture_Isopentane_Water : MixtureTestBase
  {

    public Test_Mixture_Isopentane_Water()
    {
      _mixture = MixtureOfFluids.FromCASRegistryNumbersAndMoleFractions(new[] { ("78-78-4", 0.5), ("7732-18-5", 0.5) });

      // TestData for 1 Permille to 999 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_001_999 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.401106357821121, 999.99999976319, -0.000483941641639204, 25.4915142466767, 2 ),
      ( 300, 55146.2424262705, 999999.999982383, -0.992730016985958, 74.432819475953, 1 ),
      ( 300, 55367.2263249247, 10000000.0001706, -0.927590332337233, 73.9140799043387, 1 ),
      ( 300, 57370.9642145143, 100000000.000064, -0.301193118782116, 69.8963913621951, 1 ),
      ( 300, 68436.3169098292, 1000000000, 4.85817974804264, 61.6634433350762, 1 ),
      ( 350, 0.343708154640068, 999.999999920137, -0.000201004404118658, 25.6987131872778, 2 ),
      ( 350, 3.44335727160585, 9999.99912101913, -0.00202319787378574, 25.991589305311, 2 ),
      ( 350, 53877.9996982085, 1000000.00006049, -0.99362190375038, 70.1231342575862, 1 ),
      ( 350, 54097.3427890741, 10000000.0000287, -0.936477643804438, 69.8144102528732, 1 ),
      ( 350, 56061.934450307, 100000000.000007, -0.387036727938921, 67.2310599393329, 1 ),
      ( 400, 0.300715786763347, 999.999999993924, -0.000105090756442114, 26.0776781640674, 2 ),
      ( 400, 3.01001344279913, 9999.9999368759, -0.00105368288221415, 26.1801404338805, 2 ),
      ( 400, 30.3973379410135, 99999.9999986742, -0.0108206679625082, 27.2895201850278, 2 ),
      ( 400, 51869.2544331793, 1000000.00017016, -0.994203036314026, 65.5166701421516, 1 ),
      ( 400, 52121.1876930452, 10000000.0000051, -0.942310565506527, 65.3276644076886, 1 ),
      ( 400, 54304.3190038472, 100000000.003441, -0.446297845476184, 63.6805016678242, 1 ),
      ( 500, 0.240557181944626, 999.999999998921, -4.08821448293138E-05, 27.0624561226827, 2 ),
      ( 500, 2.40645790393484, 9999.99998903602, -0.000409078181412505, 27.0852377811716, 2 ),
      ( 500, 24.1541684845357, 99999.9999999998, -0.00411662852910647, 27.3185716879136, 2 ),
      ( 500, 251.605796507096, 999999.999999979, -0.0439514876427339, 30.2364582492576, 2 ),
      ( 500, 46342.2493731956, 10000000.0000056, -0.948093294843322, 58.1484332701163, 1 ),
      ( 500, 49735.3979684618, 100000000.000002, -0.516345787353177, 57.4466278466129, 1 ),
      ( 500, 63029.1860857834, 1000000000, 2.81644381578535, 55.2042137117069, 1 ),
      };

      // TestData for 500 Permille to 500 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_500_500 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.401113869057197, 999.999999984594, -0.00050869566315352, 68.3040700336129, 2 ),
      ( 300, 17379.7077642864, 1000000.00168086, -0.976932303449303, 100.446772960366, 1 ),
      ( 300, 17511.7971914317, 9999999.99999857, -0.771063004105881, 100.311929618232, 1 ),
      ( 300, 18517.7794719444, 100000000.000004, 1.1649994524396, 99.5933577181346, 1 ),
      ( 300, 22354.8104184359, 1000000000, 16.9339397949417, 102.836507634826, 1 ),
      ( 350, 0.343726719061159, 999.99999226306, -0.000261041427486654, 76.8802598264947, 2 ),
      ( 350, 3.44541021975428, 9999.9999458654, -0.00262386701296806, 77.0609407542393, 2 ),
      ( 350, 16407.4304924058, 1000000.00193995, -0.979056014104608, 103.571760496768, 1 ),
      ( 350, 16586.7376306404, 9999999.99999931, -0.792824243200036, 103.560976823539, 1 ),
      ( 350, 17830.5767578712, 100000000.00005, 0.927234305494303, 103.740466316051, 1 ),
      ( 400, 0.30072889389519, 999.999999174331, -0.00015470999768922, 85.2674300009863, 2 ),
      ( 400, 3.01149324159659, 9999.99107521312, -0.00155057831948766, 85.3442445410872, 2 ),
      ( 400, 30.5529182339519, 100000.000277551, -0.0158636703293994, 86.1823983176594, 2 ),
      ( 400, 15271.0333557657, 1000000.01977229, -0.980310279792055, 107.892056416578, 1 ),
      ( 400, 15536.6066960062, 10000000.0000011, -0.80646844319873, 107.869600538645, 1 ),
      ( 400, 17126.1216500542, 99999999.9999966, 0.755694454778742, 108.406834326811, 1 ),
      ( 500, 0.240562339014293, 999.999999930471, -6.83586276297762E-05, 100.925686311791, 2 ),
      ( 500, 2.407105493952, 9999.99928604713, -0.000684036827204582, 100.948269581047, 2 ),
      ( 500, 24.2213744149764, 99999.9999970728, -0.0068858587543131, 101.1793341325, 2 ),
      ( 500, 259.745283374308, 999999.999998873, -0.073916217541779, 104.053309634417, 2 ),
      ( 500, 12741.5932591792, 10000000.0004088, -0.81121207558653, 118.809447972135, 1 ),
      ( 500, 15682.3277384041, 100000000.000546, 0.533866008392601, 118.668839541084, 1 ),
      ( 500, 21025.1096786028, 1000000000, 10.440886548513, 124.541585080831, 1 ),
      };

      // TestData for 999 Permille to 1 Permille Molefraction contains:
      // 0. Temperature (Kelvin)
      // 1. Mole density (mol/m³)
      // 2. Pressure (Pa)
      // 3. delta*AlphaR_delta
      // 4. Isochoric heat capacity (J/mol K)
      // 5. Phasetype (1: liquid, 2: gas)
      _testData_999_001 = new (double temperature, double moleDensity, double pressure, double deltaPhiR_delta, double cv, int phase)[]
      {
      ( 300, 0.401076200323793, 999.999842507968, -0.000420861862323356, 111.138339175513, 2 ),
      ( 300, 4.02608094772349, 9999.99849345735, -0.00422418702058943, 111.282029524063, 2 ),
      ( 300, 8526.33350958913, 1000000.00000014, -0.952980093709708, 123.433492197868, 1 ),
      ( 300, 8690.03224583639, 9999999.99999978, -0.538658325678061, 123.770173498059, 1 ),
      ( 300, 9624.16803391992, 100000000.000001, 3.16563178456166, 127.141571812122, 1 ),
      ( 300, 12128.2511099823, 1000000000, 32.0556647438325, 142.999312767081, 1 ),
      ( 350, 0.343720699022784, 999.999975764595, -0.00024957033141428, 128.062645484838, 2 ),
      ( 350, 3.44496454052522, 9999.99999998963, -0.00250086034083952, 128.132450119053, 2 ),
      ( 350, 35.2646624262926, 100000.001662676, -0.0255544992197528, 128.852905156556, 2 ),
      ( 350, 7761.43935949246, 1000000.00525256, -0.955725361957717, 138.313879527439, 1 ),
      ( 350, 8029.5780234598, 10000000.0053349, -0.572038635525487, 138.477448306559, 1 ),
      ( 350, 9236.42919291553, 100000000.000819, 2.72043036716304, 141.576005287701, 1 ),
      ( 350, 11948.3279116267, 999999999.999999, 27.7600841786089, 156.067808209025, 1 ),
      ( 400, 0.300728867839886, 999.999994991505, -0.000160662574723413, 144.456431223302, 2 ),
      ( 400, 3.01165001200615, 9999.99999999975, -0.00160858410834414, 144.493904044823, 2 ),
      ( 400, 30.5658971982937, 100000.000156333, -0.0162874984270552, 144.87529446368, 2 ),
      ( 400, 372.361157855626, 999999.998585731, -0.192502908131109, 150.197707522501, 2 ),
      ( 400, 7284.40050929248, 10000000, -0.587226770986109, 153.418227410144, 1 ),
      ( 400, 8866.11728140757, 100000000.000218, 2.39134417493621, 156.10680307337, 1 ),
      ( 500, 0.240563022944176, 999.999999633638, -7.72411802441978E-05, 174.788816771054, 2 ),
      ( 500, 2.40730458286351, 9999.99623450777, -0.000772717524916653, 174.802234946194, 2 ),
      ( 500, 24.2425195794743, 99999.9999032921, -0.0077580805554487, 174.937522698862, 2 ),
      ( 500, 261.745468331908, 1000000.00000386, -0.0809986392305209, 176.414916651962, 2 ),
      ( 500, 5277.11853681996, 10000000.001022, -0.544174647754534, 183.012838698237, 1 ),
      ( 500, 8174.44147038568, 100000000, 1.94264069836984, 183.837307007498, 1 ),
      ( 500, 11480.4767120648, 1000000000, 19.9524785081064, 195.740812505102, 1 ),
      };
    }

    [Fact]
    public override void CASNumberAttribute_Test()
    {
      base.CASNumberAttribute_Test();
    }

    [Fact]
    public override void Constants_Test()
    {
      base.Constants_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_001_999_Test()
    {
      base.DeltaPhiRDelta_001_999_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_500_500_Test()
    {
      base.DeltaPhiRDelta_500_500_Test();
    }

    [Fact]
    public override void DeltaPhiRDelta_999_001_Test()
    {
      base.DeltaPhiRDelta_999_001_Test();
    }
  }
}
