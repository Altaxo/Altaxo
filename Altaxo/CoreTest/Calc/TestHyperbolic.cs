#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2021 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace Altaxo.Calc
{
  public class TestHyperbolic
  {
    private (double X, double Y)[] SinhTestVector = new (double X, double Y)[]
    {
   (2.3283064365386963e-10,2.3283064365386963e-10),
   (4.6566128730773926e-10,4.6566128730773926e-10),
   (9.3132257461547852e-10,9.3132257461547852e-10),
   (1.862645149230957e-9,1.862645149230957e-9),
   (3.7252902984619141e-9,3.7252902984619141e-9),
   (7.4505805969238281e-9,7.4505805969238282e-9),
   (1.4901161193847656e-8,1.4901161193847657e-8),
   (2.9802322387695312e-8,2.9802322387695317e-8),
   (5.9604644775390625e-8,5.960464477539066e-8),
   (1.1920928955078125e-7,1.1920928955078153e-7),
   (2.384185791015625e-7,2.3841857910156476e-7),
   (4.76837158203125e-7,4.7683715820314307e-7),
   (9.5367431640625e-7,9.5367431640639456e-7),
   (1.9073486328125e-6,1.9073486328136565e-6),
   (3.814697265625e-6,3.8146972656342519e-6),
   (7.62939453125e-6,7.6293945313240149e-6),
   (0.0000152587890625,0.000015258789063092119),
   (0.000030517578125,0.000030517578129736952),
   (0.00006103515625,0.000061035156287895613),
   (0.0001220703125,0.0001220703128031649),
   (0.000244140625,0.00024414062742531921),
   (0.00048828125,0.00048828126940255387),
   (0.0009765625,0.0009765626552204365),
   (0.001953125,0.0019531262417636697),
   (0.00390625,0.0039062599341150417),
   (0.0078125,0.0078125794731022328),
   (0.015625,0.015625635790638671),
   (0.03125,0.031255086511379295),
   (0.0625,0.062540698052191822),
   (0.125,0.12532577524111546),
   (0.25,0.25261231680816831),
   (0.5,0.52109530549374736),
   (1.0,1.1752011936438015),
   (2.0,3.6268604078470188),
   (4.0,27.289917197127752)
    };


    private (double X, double Y)[] LangevinTestVector = new (double X, double Y)[]
   {
   (2.32830643653869629e-10,7.76102145512898763e-11),
   (4.65661287307739258e-10,1.55220429102579753e-10),
   (9.31322574615478516e-10,3.10440858205159505e-10),
   (1.86264514923095703e-9,6.2088171641031901e-10),
   (3.72529029846191406e-9,1.24176343282063802e-9),
   (7.45058059692382812e-9,2.48352686564127603e-9),
   (1.49011611938476562e-8,4.96705373128255201e-9),
   (2.98023223876953125e-8,9.93410746256510358e-9),
   (5.9604644775390625e-8,1.98682149251302036e-8),
   (1.1920928955078125e-7,3.9736429850260379e-8),
   (2.384185791015625e-7,7.94728597005205322e-8),
   (4.76837158203125e-7,1.58945719401039257e-7),
   (9.5367431640625e-7,3.17891438802064059e-7),
   (1.9073486328125e-6,6.35782877604012469e-7),
   (3.814697265625e-6,1.27156575520709975e-6),
   (7.62939453125e-6,2.54313151040679802e-6),
   (0.0000152587890625,5.08626302075438414e-6),
   (0.000030517578125,0.0000101725260410350731),
   (0.00006103515625,0.000020345052078280585),
   (0.0001220703125,0.00004069010412624468),
   (0.000244140625,0.0000813802080099574412),
   (0.00048828125,0.000162760414079659574),
   (0.0009765625,0.000325520812637277999),
   (0.001953125,0.000651041501098269109),
   (0.00390625,0.00130208200878759651),
   (0.0078125,0.0026041560703469683),
   (0.015625,0.00520824856425399106),
   (0.03125,0.0104159885613314281),
   (0.0625,0.0208279100036813424),
   (0.125,0.0416233283755969285),
   (0.25,0.0829881650735965683),
   (0.5,0.163953413738652849),
   (1,0.313035285499331304),
   (2,0.537314720727548096),
   (4,0.75067115040168249)
   };


    private (double X, double Y)[] CschTimesXTestVector = new (double X, double Y)[]
 {
   (2.32830643653869629e-10,1),
   (4.65661287307739258e-10,1),
   (9.31322574615478516e-10,1),
   (1.86264514923095703e-9,1),
   (3.72529029846191406e-9,1),
   (7.45058059692382812e-9,0.99999999999999999),
   (1.49011611938476562e-8,0.99999999999999996),
   (2.98023223876953125e-8,0.99999999999999985),
   (5.9604644775390625e-8,0.99999999999999941),
   (1.1920928955078125e-7,0.99999999999999763),
   (2.384185791015625e-7,0.99999999999999053),
   (4.76837158203125e-7,0.9999999999999621),
   (9.5367431640625e-7,0.99999999999984842),
   (1.9073486328125e-6,0.99999999999939367),
   (3.814697265625e-6,0.99999999999757468),
   (7.62939453125e-6,0.99999999999029872),
   (0.0000152587890625,0.99999999996119489),
   (0.000030517578125,0.99999999984477957),
   (0.00006103515625,0.999999999379118284),
   (0.0001220703125,0.999999997516473139),
   (0.000244140625,0.999999990065892607),
   (0.00048828125,0.999999960263571255),
   (0.0009765625,0.999999841054298284),
   (0.001953125,0.99999936421740535),
   (0.00390625,0.999997456873016839),
   (0.0078125,0.999989827546394067),
   (0.015625,0.999959311054782703),
   (0.03125,0.99983725812509133),
   (0.0625,0.99934925490985313),
   (0.125,0.997400572703510552),
   (0.25,0.98965879082550009),
   (0.5,0.95951737566747186),
   (1,0.850918128239321545),
   (2,0.551441129543566416),
   (4,0.146574281303462424),
   (8,0.00536740265046178448),
   (16,3.60112559101633727e-6),
   (32,8.10506595142027246e-13),
   (64,2.05287793990225645e-26),
   (128,6.58485599396458196e-54),
   (256,3.38752566103525645e-109),
   (512,4.48255082194232469e-220),
   };


    /// <summary>
    /// Test Vector for a=1 and b=1-1/256;
    /// </summary>
    private (double X, double Y)[] SinhAxBxTimesCschXTestVector1 = new (double X, double Y)[]
   {
     (2.32830643653869629e-10,0.00195312500045385917),
   (4.65661287307739258e-10,0.00195312500090771835),
   (9.31322574615478516e-10,0.00195312500181543669),
   (1.86264514923095703e-9,0.00195312500363087338),
   (3.72529029846191406e-9,0.00195312500726174677),
   (7.45058059692382812e-9,0.00195312501452349355),
   (1.49011611938476562e-8,0.00195312502904698718),
   (2.98023223876953125e-8,0.00195312505809397465),
   (5.9604644775390625e-8,0.00195312511618795045),
   (1.1920928955078125e-7,0.0019531252323759055),
   (2.384185791015625e-7,0.0019531254647518294),
   (4.76837158203125e-7,0.00195312592950373238),
   (9.5367431640625e-7,0.00195312685900775908),
   (1.9073486328125e-6,0.00195312871801669546),
   (3.814697265625e-6,0.00195313243603810016),
   (7.62939453125e-6,0.00195313987209503725),
   (0.0000152587890625,0.00195315474426542221),
   (0.000030517578125,0.00195318448883223524),
   (0.00006103515625,0.00195324397887003369),
   (0.0001220703125,0.00195336296256231936),
   (0.000244140625,0.00195360094441363958),
   (0.00048828125,0.00195407696598322574),
   (0.0009765625,0.0019550292405897695),
   (0.001953125,0.0019569347156688578),
   (0.00390625,0.00196074936926004855),
   (0.0078125,0.00196839348987684178),
   (0.015625,0.00198374098167123187),
   (0.03125,0.00201467292936055574),
   (0.0625,0.00207748417252174222),
     (0.125,0.00220688873536210217),
   (0.25,0.00248071633055694455),
     (0.5,0.00308678283797716585),
   (1,0.00450883499037160033),
     (2,0.0079272544700082631),
   (4,0.015508765605857259),
     (8,0.0307667689859996415),
   (16,0.0605869371865249812),
     (32,0.117503097415404597),
   (64,0.221199216928595132),
     (128,0.393469340287366576),
   (256,0.632120558828557678),
     (512,0.864664716763387308)
   };

    /// <summary>
    /// Test Vector for a=1 and b=1-1/(256*256*256);
    /// </summary>
    private (double X, double Y)[] SinhAxBxTimesCschXTestVector2 = new (double X, double Y)[]
   {
      (2.32830643653869629e-10,2.98023223946342062e-8),
     (4.65661287307739258e-10,2.98023224015730999e-8),
     (9.31322574615478516e-10,2.98023224154508873e-8),
   (1.86264514923095703e-9,2.98023224432064621e-8),
     (3.72529029846191406e-9,2.98023224987176118e-8),
     (7.45058059692382812e-9,2.98023226097399114e-8),
   (1.49011611938476562e-8,2.98023228317845113e-8),
     (2.98023223876953125e-8,2.98023232758737146e-8),
     (5.9604644775390625e-8,2.98023241640521343e-8),
   (1.1920928955078125e-7,2.98023259404090266e-8),
     (2.384185791015625e-7,2.9802329493123023e-8),
     (4.76837158203125e-7,2.98023365985518629e-8),
   (9.5367431640625e-7,2.98023508094129309e-8),
     (1.9073486328125e-6,2.98023792311486193e-8),
     (3.814697265625e-6,2.98024360746742063e-8),
     (7.62939453125e-6,2.98025497619422206e-8),
   (0.0000152587890625,2.98027771373456109e-8),
     (0.000030517578125,2.98032318916218381e-8),
     (0.00006103515625,2.98041414140520791e-8),
     (0.0001220703125,2.98059605144237072e-8),
   (0.000244140625,2.98095989372115467e-8),
     (0.00048828125,2.98168766709655349e-8),
     (0.0009765625,2.98314356911863783e-8),
     (0.001953125,2.98605679424736026e-8),
   (0.00390625,2.99188892883353283e-8),
     (0.0078125,3.0035759351689971e-8),
     (0.015625,3.02704089406383434e-8),
     (0.03125,3.07433455789629238e-8),
     (0.0625,3.17037624834103861e-8),
   (0.125,3.36826715420668026e-8),
     (0.25,3.78712127149282676e-8),
     (0.5,4.7146579125405453e-8),
     (1,6.89338212181779564e-8),
     (2,1.21433412986644071e-7),
   (4,2.38498558032883999e-7),
     (8,4.76837098177251504e-7),
     (16,9.53673861659055751e-7),
     (32,1.90734681382425294e-6),
     (64,3.81468998967663767e-6),
   (128,7.62936542749355799e-6),
     (256,0.0000152586726477702898),
     (512,0.0000305171124684496077)
   };
    [Fact]
    public void TestSinh()
    {
      foreach (var pair in SinhTestVector)
      {
        var y = Hyperbolic.Sinh(pair.X);
        var relErr = Math.Abs(y - pair.Y) / pair.Y;

        Assert.True(relErr < 1E-15);
      }
    }

    [Fact]
    public void TestLangevin()
    {
      foreach (var pair in LangevinTestVector)
      {
        var y = Hyperbolic.Langevin(pair.X);
        var relErr = Math.Abs(y - pair.Y) / pair.Y;

        Assert.True(relErr < 2E-14);
      }
    }

    [Fact]
    public void TestCschTimesX()
    {
      foreach (var pair in CschTimesXTestVector)
      {
        var y = Hyperbolic.CschTimesX(pair.X);
        var relErr = Math.Abs(y - pair.Y) / pair.Y;

        Assert.True(relErr < 1E-15);
      }
    }

    [Fact]
    public void TestSinhAxBxTimesCschX1()
    {
      double a = 1;
      double b = 1 - 1 / 256d;
      foreach (var pair in SinhAxBxTimesCschXTestVector1)
      {
        var y = Hyperbolic.SinhAxBxTimesCschX(pair.X, a, b);
        var relErr = Math.Abs(y - pair.Y) / pair.Y;

        Assert.True(relErr < 5E-14);
      }
    }

    [Fact]
    public void TestSinhAxBxTimesCschX2()
    {
      double a = 1;
      double b = 1 - 1d / (256 * 256 * 256);
      foreach (var pair in SinhAxBxTimesCschXTestVector2)
      {
        var y = Hyperbolic.SinhAxBxTimesCschX(pair.X, a, b);
        var relErr = Math.Abs(y - pair.Y) / pair.Y;

        Assert.True(relErr < 5E-14);
      }
    }

    private (double X, double Y)[] ExpMinusOneTestVector = new (double X, double Y)[]
{
   (2.32830643653869629e-10,2.32830643680974683e-10),
   (4.65661287307739258e-10,4.65661287416159475e-10),
   (9.31322574615478516e-10,9.31322575049159385e-10),
   (1.86264514923095703e-9,1.86264515096568051e-9),
   (3.72529029846191406e-9,3.72529030540080798e-9),
   (7.45058059692382812e-9,7.45058062467940381e-9),
   (1.49011611938476562e-8,1.49011613048699593e-8),
   (2.98023223876953125e-8,2.98023228317845268e-8),
   (5.9604644775390625e-8,5.96046465517474997e-8),
   (1.1920928955078125e-7,1.1920929665620889e-7),
   (2.384185791015625e-7,2.38418607523274189e-7),
   (4.76837158203125e-7,4.76837271889980792e-7),
   (9.5367431640625e-7,9.53674771153745447e-7),
   (1.9073486328125e-6,1.90735045180306003e-6),
   (3.814697265625e-6,3.81470454159186605e-6),
   (7.62939453125e-6,7.62942363515447174e-6),
   (0.0000152587890625,0.0000152589054784139481),
   (0.000030517578125,0.0000305180437910242955),
   (0.00006103515625,0.0000610370189330454218),
   (0.0001220703125,0.000122077763383771077),
   (0.000244140625,0.000244170429747854937),
   (0.00048828125,0.000488400478694473126),
   (0.0009765625,0.000977039492416535243),
   (0.001953125,0.00195503359100281205),
   (0.00390625,0.00391388933834757344),
   (0.0078125,0.00784309720644797769),
   (0.015625,0.0157477085866857475),
   (0.03125,0.0317434074991026709),
   (0.0625,0.0644944589178594296),
   (0.125,0.133148453066826317),
   (0.25,0.284025416687741484),
   (0.5,0.648721270700128147),
   (1,1.71828182845904524),
   (2,6.38905609893065023),
   (4,53.5981500331442391),
   (8,2979.95798704172827),
   (16,8.88610952050787264e6),
   (32,7.89629601826796952e13),
   (64,6.23514908081161688e27),
   (128,3.88770840599459509e55),
   (256,1.51142766500410354e111),
   (512,2.28441358653975664e222)
};

    [Fact]
    public void TestExpMinusOne()
    {
      foreach (var pair in ExpMinusOneTestVector)
      {
        var y = Hyperbolic.ExpMinusOne(pair.X);
        var relErr = Math.Abs(y - pair.Y) / pair.Y;
        Assert.True(relErr < 4E-16);
        System.Diagnostics.Debug.WriteLine($"X={pair.X}, relErr={relErr}");
      }
    }

  }
}
