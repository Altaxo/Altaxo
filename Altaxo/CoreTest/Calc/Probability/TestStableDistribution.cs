#region Copyright

/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2011 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////

#endregion Copyright

using System;
using Altaxo.Calc;
using Altaxo.Calc.Probability;
using Xunit;

namespace AltaxoTest.Calc.Probability
{

  public class TestStableDistribution
  {
    #region PDF test data

    /* Mathematica code to create the table following (use the stable packet from the mathematica library web site)

     << StableDistribution`SMath`

    flarguments = Flatten[ Table[
      {
        {1/2, 7/8, 1, 9/8, 3/2, 2}[[i]],
        {-1, -1/2, 0, 1/2, 1}[[j]],
        {-10, -4, -1/2, 0, 1/2, 4, 10}[[k]]
        }, {i, 1, 6}, {j, 1, 5}, {k, 1, 7}], 2]
    For[i = 1, i ? Length[flarguments], i += 1,
  alpha = flarguments[[i]][[1]];
  beta = flarguments[[i]][[2]];
  xx = flarguments[[i]][[3]];
  yy = N[SPDF[xx, {
   alpha, beta}, 0, GaussPoints -> 30, MaxRecursion -> 10, WorkingPrecision ->
     64], 18];
  If[NumericQ[yy],
    Print[alpha, " ", beta, " ", xx, " ", yy];
    strm = OpenAppend["C:\\TEMP\\output.txt", CharacterEncoding -> "
          ASCII", FormatType -> OutputForm];
    Write[strm,
        "new double[]{", FortranForm[alpha], ",", FortranForm[beta], ",",
  FortranForm[xx], ",", FortranForm[yy], "},"];
     Close[strm]
    ];
  ]
    */

    private double[][] _pdfTestS0 = new double[][]{
new double[]{0.1875,-1,-9.625,0.00622146382441951485},
new double[]{0.1875,-1,-3.625,0.0152180462319058695},
new double[]{0.1875,-1,-0.125,0.0700998044335274717},
new double[]{0.1875,-1,0.375,0.13661080210846316},
new double[]{0.1875,-1,0.875,2.84408398280610462},
new double[]{0.1875,-1,4.375,0.0e-65},
new double[]{0.1875,-1,10.375,0.0e-66},
new double[]{0.1875,-0.25,-9.625,0.00393485865200703124},
new double[]{0.1875,-0.25,-3.625,0.0101396409277053322},
new double[]{0.1875,-0.25,-0.125,0.0684090400523026724},
new double[]{0.1875,-0.25,0.375,0.307506290886941925},
new double[]{0.1875,-0.25,0.875,0.0663985511500809196},
new double[]{0.1875,-0.25,4.375,0.0063408963508602727},
new double[]{0.1875,-0.25,10.375,0.00237139397957079979},
new double[]{0.1875,0,-9.625,0.00315596951092408086},
new double[]{0.1875,0,-3.625,0.00828222682219201321},
new double[]{0.1875,0,-0.125,0.0675142345139675884},
new double[]{0.1875,0,0.375,40.0735478037904823},
new double[]{0.1875,0,0.875,0.0675142345139675884},
new double[]{0.1875,0,4.375,0.00828222682219201321},
new double[]{0.1875,0,10.375,0.00315596951092408086},
new double[]{0.1875,0.375,-9.625,0.00197748349188353955},
new double[]{0.1875,0.375,-3.625,0.00533838871623872711},
new double[]{0.1875,0.375,-0.125,0.0657445528364335849},
new double[]{0.1875,0.375,0.375,0.234168796091086845},
new double[]{0.1875,0.375,0.875,0.068786176488729201},
new double[]{0.1875,0.375,4.375,0.0110372098859067211},
new double[]{0.1875,0.375,10.375,0.00432166709898394133},
new double[]{0.1875,1,-9.625,0.0e-66},
new double[]{0.1875,1,-3.625,0.0e-65},
new double[]{0.1875,1,-0.125,2.84408398280610462},
new double[]{0.1875,1,0.375,0.13661080210846316},
new double[]{0.1875,1,0.875,0.0700998044335274717},
new double[]{0.1875,1,4.375,0.0152180462319058695},
new double[]{0.1875,1,10.375,0.00622146382441951485},
new double[]{0.875,-1,-9.625,0.0125933110403528228},
new double[]{0.875,-1,-3.625,0.0447564820256758074},
new double[]{0.875,-1,-0.125,0.131778872463823546},
new double[]{0.875,-1,0.375,0.151475189016122756},
new double[]{0.875,-1,0.875,0.167587044466029834},
new double[]{0.875,-1,4.375,1.33433213061718666e-10},
new double[]{0.875,-1,10.375,0.0e-63},
new double[]{0.875,-0.25,-9.625,0.00736546900593159201},
new double[]{0.875,-0.25,-3.625,0.0318510921624443463},
new double[]{0.875,-0.25,-0.125,0.15754805942987949},
new double[]{0.875,-0.25,0.375,0.190115813017536035},
new double[]{0.875,-0.25,0.875,0.192841098725903295},
new double[]{0.875,-0.25,4.375,0.0212483931193202097},
new double[]{0.875,-0.25,10.375,0.00417876479416909579},
new double[]{0.875,0,-9.625,0.00573699655753043124},
new double[]{0.875,0,-3.625,0.0267895324283259951},
new double[]{0.875,0,-0.125,0.17587441294916811},
new double[]{0.875,0,0.375,0.200174133900079971},
new double[]{0.875,0,0.875,0.17587441294916811},
new double[]{0.875,0,4.375,0.0267895324283259951},
new double[]{0.875,0,10.375,0.00573699655753043124},
new double[]{0.875,0.375,-9.625,0.00342836968299689956},
new double[]{0.875,0.375,-3.625,0.0182641868264797072},
new double[]{0.875,0.375,-0.125,0.193924571073788532},
new double[]{0.875,0.375,0.375,0.181966157844499999},
new double[]{0.875,0.375,0.875,0.1508504838621266},
new double[]{0.875,0.375,4.375,0.0342255130207456652},
new double[]{0.875,0.375,10.375,0.0082036124463018762},
new double[]{0.875,1,-9.625,0.0e-63},
new double[]{0.875,1,-3.625,1.33433213061718666e-10},
new double[]{0.875,1,-0.125,0.167587044466029834},
new double[]{0.875,1,0.375,0.151475189016122756},
new double[]{0.875,1,0.875,0.131778872463823546},
new double[]{0.875,1,4.375,0.0447564820256758074},
new double[]{0.875,1,10.375,0.0125933110403528228},
new double[]{1,-1,-9.625,0.011741922705081882},
new double[]{1,-1,-3.625,0.0469585910593155447},
new double[]{1,-1,-0.125,0.137533852036260024},
new double[]{1,-1,0.375,0.154258897867853916},
new double[]{1,-1,0.875,0.165406738215999605},
new double[]{1,-1,4.375,0.00009084053264479039},
new double[]{1,-1,10.375,3.52070583466665675e-1047},
new double[]{1,-0.25,-3.625,0.0338015368712248507},
new double[]{1,-0.25,-0.125,0.160061870292084247},
new double[]{1,-0.25,0.375,0.182120994312594392},
new double[]{1,-0.25,0.875,0.181356325984179711},
new double[]{1,-0.25,4.375,0.0229782294584270748},
new double[]{1,-0.25,10.375,0.00381369267423090176},
new double[]{1,0,-9.625,0.00525927501712940171},
new double[]{1,0,-3.625,0.0286462046856772971},
new double[]{1,0,-0.125,0.172333377870205141},
new double[]{1,0,0.375,0.187241109519876866},
new double[]{1,0,0.875,0.172333377870205141},
new double[]{1,0,4.375,0.0286462046856772971},
new double[]{1,0,10.375,0.00525927501712940171},
new double[]{1,0.375,-9.625,0.003121693674901135},
new double[]{1,0.375,-3.625,0.0199059235786127462},
new double[]{1,0.375,-0.125,0.182120272437474448},
new double[]{1,0.375,0.375,0.177247742173529524},
new double[]{1,0.375,0.875,0.154757808598861203},
new double[]{1,0.375,4.375,0.0362175556725329412},
new double[]{1,0.375,10.375,0.00756950181805817021},
new double[]{1,1,-9.625,3.52070583466665675e-1047},
new double[]{1,1,-3.625,0.00009084053264479039},
new double[]{1,1,-0.125,0.165406738215999605},
new double[]{1,1,0.375,0.154258897867853916},
new double[]{1,1,0.875,0.137533852036260024},
new double[]{1,1,4.375,0.0469585910593155447},
new double[]{1,1,10.375,0.011741922705081882},
new double[]{1.125,-1,-9.625,0.0105767607840554421},
new double[]{1.125,-1,-0.125,0.142601049518207692},
new double[]{1.125,-1,0.375,0.156815900688225402},
new double[]{1.125,-1,0.875,0.164240884902117564},
new double[]{1.125,-1,4.375,0.00180171997042340397},
new double[]{1.125,-1,10.375,1.02218112966526752e-86},
new double[]{1.125,-0.25,-9.625,0.00604456914685108638},
new double[]{1.125,-0.25,-3.625,0.0353805142453686123},
new double[]{1.125,-0.25,-0.125,0.161169660133940332},
new double[]{1.125,-0.25,0.375,0.176616117333385507},
new double[]{1.125,-0.25,0.875,0.174259618633364056},
new double[]{1.125,-0.25,4.375,0.0246764598002363763},
new double[]{1.125,-0.25,10.375,0.00337471549082435027},
new double[]{1.125,0,-9.625,0.00467091641700015825},
new double[]{1.125,0,-3.625,0.0302859434982656208},
new double[]{1.125,0,-0.125,0.169081078290351686},
new double[]{1.125,0,0.375,0.179378453076234295},
new double[]{1.125,0,0.875,0.169081078290351686},
new double[]{1.125,0,4.375,0.0302859434982656208},
new double[]{1.125,0,10.375,0.00467091641700015825},
new double[]{1.125,0.375,-9.625,0.00275724784471224063},
new double[]{1.125,0.375,-3.625,0.0216255814142271335},
new double[]{1.125,0.375,-0.125,0.174850781577173578},
new double[]{1.125,0.375,0.375,0.173704734173453081},
new double[]{1.125,0.375,0.875,0.157266879851625865},
new double[]{1.125,0.375,4.375,0.0377692779522954011},
new double[]{1.125,0.375,10.375,0.00675880274921602606},
new double[]{1.125,1,-9.625,1.02218112966526752e-86},
new double[]{1.125,1,-3.625,0.00180171997042340397},
new double[]{1.125,1,-0.125,0.164240884902117564},
new double[]{1.125,1,0.375,0.156815900688225402},
new double[]{1.125,1,0.875,0.142601049518207692},
new double[]{1.125,1,10.375,0.0105767607840554421},
new double[]{1.7,-1,-9.625,0.00348053929790821283},
new double[]{1.7,-1,-3.625,0.0471519323058228354},
new double[]{1.7,-1,-0.125,0.158781953021797545},
new double[]{1.7,-1,0.375,0.164899078070295475},
new double[]{1.7,-1,0.875,0.163093589754479185},
new double[]{1.7,-1,4.375,0.0272049423133924456},
new double[]{1.7,-1,10.375,9.80776990891218471e-8},
new double[]{1.7,-0.25,-9.625,0.00198267800720105771},
new double[]{1.7,-0.25,-3.625,0.0400167834930428869},
new double[]{1.7,-0.25,-0.125,0.161993649134661606},
new double[]{1.7,-0.25,0.375,0.166919351573597112},
new double[]{1.7,-0.25,0.875,0.163237464719541277},
new double[]{1.7,-0.25,4.375,0.0349672106047779471},
new double[]{1.7,-0.25,10.375,0.00110943954228859088},
new double[]{1.7,0,-9.625,0.00153311518037320635},
new double[]{1.7,0,-3.625,0.037517133312410714},
new double[]{1.7,0,-0.125,0.162734600907957702},
new double[]{1.7,0,0.375,0.167064850610984012},
new double[]{1.7,0,0.875,0.162734600907957702},
new double[]{1.7,0,4.375,0.037517133312410714},
new double[]{1.7,0,10.375,0.00153311518037320635},
new double[]{1.7,0.375,-9.625,0.000907506200541241793},
new double[]{1.7,0.375,-3.625,0.0336776463353999807},
new double[]{1.7,0.375,-0.125,0.163389478517981765},
new double[]{1.7,0.375,0.375,0.166739569737325412},
new double[]{1.7,0.375,0.875,0.161546756956670184},
new double[]{1.7,0.375,4.375,0.0412449970039395293},
new double[]{1.7,0.375,10.375,0.00221697291356772266},
new double[]{1.7,1,-9.625,9.80776990891218471e-8},
new double[]{1.7,1,-3.625,0.0272049423133924456},
new double[]{1.7,1,-0.125,0.163093589754479185},
new double[]{1.7,1,0.375,0.164899078070295475},
new double[]{1.7,1,0.875,0.158781953021797545},
new double[]{1.7,1,4.375,0.0471519323058228354},
new double[]{1.7,1,10.375,0.00348053929790821283},
new double[]{2,-1,-9.625,0.0000290451394404738393},
new double[]{2,-1,-3.625,0.0415763651114948735},
new double[]{2,-1,-0.125,0.162388011933184181},
new double[]{2,-1,0.375,0.165938112808163614},
new double[]{2,-1,0.875,0.162388011933184181},
new double[]{2,-1,4.375,0.0415763651114948735},
new double[]{2,-1,10.375,0.0000290451394404738393},
new double[]{2,-0.25,-9.625,0.0000290451394404738393},
new double[]{2,-0.25,-3.625,0.0415763651114948735},
new double[]{2,-0.25,-0.125,0.162388011933184181},
new double[]{2,-0.25,0.375,0.165938112808163614},
new double[]{2,-0.25,0.875,0.162388011933184181},
new double[]{2,-0.25,4.375,0.0415763651114948735},
new double[]{2,-0.25,10.375,0.0000290451394404738393},
new double[]{2,0,-9.625,0.0000290451394404738393},
new double[]{2,0,-3.625,0.0415763651114948735},
new double[]{2,0,-0.125,0.162388011933184181},
new double[]{2,0,0.375,0.165938112808163614},
new double[]{2,0,0.875,0.162388011933184181},
new double[]{2,0,4.375,0.0415763651114948735},
new double[]{2,0,10.375,0.0000290451394404738393},
new double[]{2,0.375,-9.625,0.0000290451394404738393},
new double[]{2,0.375,-3.625,0.0415763651114948735},
new double[]{2,0.375,-0.125,0.162388011933184181},
new double[]{2,0.375,0.375,0.165938112808163614},
new double[]{2,0.375,0.875,0.162388011933184181},
new double[]{2,0.375,4.375,0.0415763651114948735},
new double[]{2,0.375,10.375,0.0000290451394404738393},
new double[]{2,1,-9.625,0.0000290451394404738393},
new double[]{2,1,-3.625,0.0415763651114948735},
new double[]{2,1,-0.125,0.162388011933184181},
new double[]{2,1,0.375,0.165938112808163614},
new double[]{2,1,0.875,0.162388011933184181},
new double[]{2,1,4.375,0.0415763651114948735},
new double[]{2,1,10.375,0.0000290451394404738393},
};

    #endregion PDF test data

    [Fact]
    public void PdfTestS0()
    {
      for (int i = 0; i < _pdfTestS0.Length; i++)
      {
        double alpha = _pdfTestS0[i][0];
        double beta = _pdfTestS0[i][1];
        double x = _pdfTestS0[i][2];
        double expectedy = _pdfTestS0[i][3];
        double y = StableDistributionS0.PDF(x, alpha, beta, 1.7, 3.0 / 8.0);
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        AssertEx.Equal(expectedy, y, maxdelta, msg);
      }
    }

    [Fact]
    public void PdfTestS0Spec()
    {
      int i = 140;
      {
        double alpha = _pdfTestS0[i][0];
        double beta = _pdfTestS0[i][1];
        double x = _pdfTestS0[i][2];
        double expectedy = _pdfTestS0[i][3];
        double y = StableDistributionS0.PDF(x, alpha, beta, 1.7, 3.0 / 8.0);
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        AssertEx.Equal(expectedy, y, maxdelta, msg);
      }
    }

    private double[][] _cdfTestS0 = new double[][]{
new double[]{0.1875,-1,-10,0.48098909889099806},
new double[]{0.1875,-1,-4,0.534153158297503599},
new double[]{0.1875,-1,-0.5,0.620322398276004584},
new double[]{0.1875,-1,0,0.650567645888423391},
new double[]{0.1875,-1,0.5,0.703935745293424253},
new double[]{0.1875,-1,4,1.0},
new double[]{0.1875,-1,10,1.0},
new double[]{0.1875,-0.25,-10,0.297477250073416433},
new double[]{0.1875,-0.25,-4,0.331722860377467021},
new double[]{0.1875,-0.25,-0.5,0.394060473166239727},
new double[]{0.1875,-0.25,0,0.421664692376892019},
new double[]{0.1875,-0.25,0.5,0.513287349206703291},
new double[]{0.1875,-0.25,4,0.796594088177409904},
new double[]{0.1875,-0.25,10,0.82092154221927385},
new double[]{0.1875,0,-10,0.237044806535546913},
new double[]{0.1875,0,-4,0.264685493049933472},
new double[]{0.1875,0,-0.5,0.317398311385020418},
new double[]{0.1875,0,0,0.343613536990970972},
new double[]{0.1875,0,0.5,0.599288046261269792},
new double[]{0.1875,0,4,0.728186761093414256},
new double[]{0.1875,0,10,0.760248274919282669},
new double[]{0.1875,0.375,-10,0.147217825627926043},
new double[]{0.1875,0.375,-4,0.164705521054696311},
new double[]{0.1875,0.375,-0.5,0.20086489503924576},
new double[]{0.1875,0.375,0,0.224097369391475782},
new double[]{0.1875,0.375,0.5,0.499546146827983804},
new double[]{0.1875,0.375,4,0.6251656800160213},
new double[]{0.1875,0.375,10,0.668449513797033438},
new double[]{0.1875,1,-10,0.0e-64},
new double[]{0.1875,1,-4,0.0e-64},
new double[]{0.1875,1,-0.5,0.0e-64},
new double[]{0.1875,1,0,0.187563325988864524},
new double[]{0.1875,1,0.5,0.315697853863563463},
new double[]{0.1875,1,4,0.452761157279101479},
new double[]{0.1875,1,10,0.513674985482408778},
new double[]{0.875,-1,-10,0.148851416274161131},
new double[]{0.875,-1,-4,0.280050886605763459},
new double[]{0.875,-1,-0.5,0.524109714472086116},
new double[]{0.875,-1,0,0.586525004537904337},
new double[]{0.875,-1,0.5,0.658775663512447598},
new double[]{0.875,-1,4,0.999999655663428245},
new double[]{0.875,-1,10,1.0},
new double[]{0.875,-0.25,-10,0.0858291084295807463},
new double[]{0.875,-0.25,-4,0.16832750406001744},
new double[]{0.875,-0.25,-0.5,0.382583547667250841},
new double[]{0.875,-0.25,0,0.454909172760065701},
new double[]{0.875,-0.25,0.5,0.54460957657186009},
new double[]{0.875,-0.25,4,0.883591199483039861},
new double[]{0.875,-0.25,10,0.947805018731448751},
new double[]{0.875,0,-10,0.0667357783468478461},
new double[]{0.875,0,-4,0.132721718090647316},
new double[]{0.875,0,-0.5,0.336969309121143516},
new double[]{0.875,0,0,0.416989202492455348},
new double[]{0.875,0,0.5,0.51428435621744766},
new double[]{0.875,0,4,0.844157332986832977},
new double[]{0.875,0,10,0.928339595110488014},
new double[]{0.875,0.375,-10,0.0399057663284463122},
new double[]{0.875,0.375,-4,0.0810516860434449957},
new double[]{0.875,0.375,-0.5,0.277328271606739018},
new double[]{0.875,0.375,0,0.370304335516746377},
new double[]{0.875,0.375,0.5,0.464663410040826179},
new double[]{0.875,0.375,4,0.784061364594864654},
new double[]{0.875,0.375,10,0.897221960763144621},
new double[]{0.875,1,-10,0.0e-64},
new double[]{0.875,1,-4,1.05663721477468729e-22},
new double[]{0.875,1,-0.5,0.198820449032690016},
new double[]{0.875,1,0,0.28399364535704047},
new double[]{0.875,1,0.5,0.362862085138985303},
new double[]{0.875,1,4,0.681467650971478238},
new double[]{0.875,1,10,0.840341548507531977},
new double[]{1,-1,-10,0.116021117048220681},
new double[]{1,-1,-4,0.246123292904748384},
new double[]{1,-1,-0.5,0.506058760366000409},
new double[]{1,-1,0,0.571602772890721669},
new double[]{1,-1,0.5,0.645854198879203065},
new double[]{1,-1,4,0.99973995027402833},
new double[]{1,-1,10,1.0},
new double[]{1,0,-10,0.0514364414394423542},
new double[]{1,0,-4,0.116668590003776055},
new double[]{1,0,-0.5,0.340865650561206932},
new double[]{1,0,0,0.421391799520304508},
new double[]{1,0,0.5,0.513366502870251664},
new double[]{1,0,4,0.858586398879053989},
new double[]{1,0,10,0.944047849778605912},
new double[]{1,1,-10,0.0},
new double[]{1,1,-4,8.434980299060996e-8},
new double[]{1,1,-0.5,0.21363372647733048},
new double[]{1,1,0,0.29674865815958595},
new double[]{1,1,0.5,0.3761801756688061},
new double[]{1,1,4,0.713493743228811},
new double[]{1,1,10,0.8739003036162303},
new double[]{1.125,-1,-10,0.0888369429543626754},
new double[]{1.125,-1,-0.5,0.488074401824408074},
new double[]{1.125,-1,0,0.55638522593679389},
new double[]{1.125,-1,0.5,0.632419501005327591},
new double[]{1.125,-1,4,0.997785450469871388},
new double[]{1.125,-1,10,1.0},
new double[]{1.125,-0.25,-10,0.0504812323421451966},
new double[]{1.125,-0.25,-4,0.129405575831516959},
new double[]{1.125,-0.25,-0.5,0.378216472238244594},
new double[]{1.125,-0.25,0,0.454557643234111808},
new double[]{1.125,-0.25,0.5,0.540617972866576492},
new double[]{1.125,-0.25,4,0.902823476731515687},
new double[]{1.125,-0.25,10,0.968787725853331655},
new double[]{1.125,0,-10,0.0390614361565044313},
new double[]{1.125,0,-4,0.102253416419523171},
new double[]{1.125,0,-0.5,0.343890259320079018},
new double[]{1.125,0,0,0.424235078288166654},
new double[]{1.125,0,0.5,0.51280748701941967},
new double[]{1.125,0,4,0.871559722458425445},
new double[]{1.125,0,10,0.956926798211712325},
new double[]{1.125,0.375,-10,0.023188752363651501},
new double[]{1.125,0.375,-4,0.0627801134859413266},
new double[]{1.125,0.375,-0.5,0.297331769229659439},
new double[]{1.125,0.375,0,0.382143334262728354},
new double[]{1.125,0.375,0.5,0.469892447459173056},
new double[]{1.125,0.375,10,0.937750301304716562},
new double[]{1.125,1,-10,1.8055408705314884e-108},
new double[]{1.125,1,-4,0.000043015495350886859},
new double[]{1.125,1,-0.5,0.228029164192310552},
new double[]{1.125,1,0,0.309908833462163867},
new double[]{1.125,1,0.5,0.389979512482395514},
new double[]{1.125,1,10,0.902082167812666944},
new double[]{1.7,-1,-10,0.0155541621578432068},
new double[]{1.7,-1,-4,0.0916407745818670734},
new double[]{1.7,-1,-0.5,0.402453522488852605},
new double[]{1.7,-1,0,0.47980910193858937},
new double[]{1.7,-1,0.5,0.561433412796627675},
new double[]{1.7,-1,4,0.963629395127876325},
new double[]{1.7,-1,10,0.999999880646004965},
new double[]{1.7,-0.25,-10,0.00897941587686932435},
new double[]{1.7,-0.25,-4,0.0614181596087736895},
new double[]{1.7,-0.25,-0.5,0.362365209784007587},
new double[]{1.7,-0.25,0,0.441371344216581217},
new double[]{1.7,-0.25,0.5,0.524256494159942269},
new double[]{1.7,-0.25,4,0.927941654660641549},
new double[]{1.7,-0.25,10,0.993943116135292854},
new double[]{1.7,0,-10,0.00699108719839077644},
new double[]{1.7,0,-4,0.0515234225050636086},
new double[]{1.7,0,-0.5,0.349419696983704106},
new double[]{1.7,0,0,0.428859030706544649},
new double[]{1.7,0,0.5,0.51193106859651026},
new double[]{1.7,0,4,0.915967653013365687},
new double[]{1.7,0,10,0.991688374778011338},
new double[]{1.7,0.375,-10,0.00419241599856558763},
new double[]{1.7,0.375,-4,0.0368163293800611268},
new double[]{1.7,0.375,-0.5,0.330404489900153244},
new double[]{1.7,0.375,0,0.410304481136619391},
new double[]{1.7,0.375,0.5,0.493393542203609837},
new double[]{1.7,0.375,4,0.897941175581206158},
new double[]{1.7,0.375,10,0.988079732100664086},
new double[]{1.7,1,-10,6.39376161500154392e-9},
new double[]{1.7,1,-4,0.0125536402130792101},
new double[]{1.7,1,-0.5,0.299655178428084144},
new double[]{1.7,1,0,0.379686002592366402},
new double[]{1.7,1,0.5,0.462119702418639981},
new double[]{1.7,1,4,0.867689728030930883},
new double[]{1.7,1,10,0.981449613788935938},
new double[]{2,-1,-10,7.19862078650686666e-6},
new double[]{2,-1,-4,0.032734439285138146},
new double[]{2,-1,-0.5,0.349661392761968671},
new double[]{2,-1,0,0.429258526269589985},
new double[]{2,-1,0.5,0.51185097882939671},
new double[]{2,-1,4,0.931296729870530805},
new double[]{2,-1,10,0.999965714364872786},
new double[]{2,-0.25,-10,7.19862078650686666e-6},
new double[]{2,-0.25,-4,0.032734439285138146},
new double[]{2,-0.25,-0.5,0.349661392761968671},
new double[]{2,-0.25,0,0.429258526269589985},
new double[]{2,-0.25,0.5,0.51185097882939671},
new double[]{2,-0.25,4,0.931296729870530805},
new double[]{2,-0.25,10,0.999965714364872786},
new double[]{2,0,-10,7.19862078650686666e-6},
new double[]{2,0,-4,0.032734439285138146},
new double[]{2,0,-0.5,0.349661392761968671},
new double[]{2,0,0,0.429258526269589985},
new double[]{2,0,0.5,0.51185097882939671},
new double[]{2,0,4,0.931296729870530805},
new double[]{2,0,10,0.999965714364872786},
new double[]{2,0.375,-10,7.19862078650686666e-6},
new double[]{2,0.375,-4,0.032734439285138146},
new double[]{2,0.375,-0.5,0.349661392761968671},
new double[]{2,0.375,0,0.429258526269589985},
new double[]{2,0.375,0.5,0.51185097882939671},
new double[]{2,0.375,4,0.931296729870530805},
new double[]{2,0.375,10,0.999965714364872786},
new double[]{2,1,-10,7.19862078650686666e-6},
new double[]{2,1,-4,0.032734439285138146},
new double[]{2,1,-0.5,0.349661392761968671},
new double[]{2,1,0,0.429258526269589985},
new double[]{2,1,0.5,0.51185097882939671},
new double[]{2,1,4,0.931296729870530805},
new double[]{2,1,10,0.999965714364872786},
};

    [Fact]
    public void CdfTestS0()
    {
      for (int i = 0; i < _cdfTestS0.Length; i++)
      {
        double alpha = _cdfTestS0[i][0];
        double beta = _cdfTestS0[i][1];
        double x = _cdfTestS0[i][2];
        double expectedy = _cdfTestS0[i][3];
        double y = StableDistributionS0.CDF(x, alpha, beta, 1.7, 3.0 / 7.0);
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        AssertEx.Equal(expectedy, y, maxdelta, msg);
      }
    }

    [Fact]
    public void CdfTestS0Spec()
    {
      int i = 70;
      {
        double alpha = _cdfTestS0[i][0];
        double beta = _cdfTestS0[i][1];
        double x = _cdfTestS0[i][2];
        double expectedy = _cdfTestS0[i][3];
        double y = StableDistributionS0.CDF(x, alpha, beta, 1.7, 3.0 / 7.0);
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        AssertEx.Equal(expectedy, y, maxdelta, msg);
      }
    }

    #region Test S1

    /* The following Mathematica code was used to generate the table (Note here that sigma=1.7 and mu=3/7)
     * The output text must be further processed by replacing " with nothing and 0.e with 0.0e

     << "StableDistribution`SMath`"

     flarguments = Flatten[Table[{
        {3/16, 7/8, 1, 9/8, 17/10, 2}[[i]],
        {-1, -4^(-1), 0, 3/8, 1}[[j]],
        {-10, -4, -2^(-1), 0, 1/2, 4, 10}[[k]]},
      {i, 1, 6}, {j, 1, 5}, {k, 1, 7}], 2]
     For[i = 1, i <= Length[flarguments], i += 1, alpha = flarguments[[i]][[1]];
   beta = flarguments[[i]][[2]]; xx = flarguments[[i]][[3]];
   yy = N[SPDF[xx, {alpha, beta, 17/10, 3/7}, 1, GaussPoints -> 30, MaxRecursion -> 10, WorkingPrecision -> 64], 18];
   If[NumericQ[yy], Print[alpha, " ", beta, " ", xx, " ", yy];
     strm = OpenAppend["C:\\TEMP\\outputS1.txt", CharacterEncoding->"ASCII", FormatType ->CForm];
     Write[strm, "new double[]{",
     alpha, ",", beta, ",", xx, ",", yy, "},"]; Close[strm]]; ]
   */

    private double[][] _pdfTestS1 = new double[][]{
new double[]{0.1875,-1,-10,0.0062770180013548},
new double[]{0.1875,-1,-4,0.0155315416430183},
new double[]{0.1875,-1,-0.5,0.07665072},
new double[]{0.1875,-1,0.5,0.0e-9},
new double[]{0.1875,-1,4,0.0e-16},
new double[]{0.1875,-1,10,0.0e-16},
new double[]{0.1875,-0.25,-10,0.0038144443774004},
new double[]{0.1875,-0.25,-4,0.009424300650895},
new double[]{0.1875,-0.25,-0.5,0.046524289},
new double[]{0.1875,-0.25,0.5,0.303242238},
new double[]{0.1875,-0.25,4,0.0068937017412486},
new double[]{0.1875,-0.25,10,0.0024502977157998},
new double[]{0.1875,0,-10,0.0030180829221758},
new double[]{0.1875,0,-4,0.0074483868801408},
new double[]{0.1875,0,-0.5,0.036706661},
new double[]{0.1875,0,0.5,0.411882603},
new double[]{0.1875,0,4,0.0093178545126279},
new double[]{0.1875,-1,-10,0.00627701800135476598},
new double[]{0.1875,-1,-4,0.0155315416430182922},
new double[]{0.1875,-1,-0.5,0.0766507202895227784},
new double[]{0.1875,-1,0,0.163347276150841532},
new double[]{0.1875,-1,0.5,0.0e-63},
new double[]{0.1875,-1,4,0.0e-65},
new double[]{0.1875,-1,10,0.0e-66},
new double[]{0.1875,-0.25,-10,0.00381444437740038338},
new double[]{0.1875,-0.25,-4,0.0094243006508950103},
new double[]{0.1875,-0.25,-0.5,0.0465242891643534304},
new double[]{0.1875,-0.25,0,0.0994142691020737488},
new double[]{0.1875,-0.25,0.5,0.30324223808190638},
new double[]{0.1875,-0.25,4,0.00689370174124854798},
new double[]{0.1875,-0.25,10,0.00245029771579979697},
new double[]{0.1875,0,-10,0.00301808292217582277},
new double[]{0.1875,0,-4,0.00744838688014080708},
new double[]{0.1875,0,-0.5,0.0367066606914877921},
new double[]{0.1875,0,0,0.078397440755632289},
new double[]{0.1875,0,0.5,0.411882602691635537},
new double[]{0.1875,0,4,0.00931785451262787891},
new double[]{0.1875,0,10,0.00330647826582729957},
new double[]{0.1875,0.375,-10,0.00185249646154681824},
new double[]{0.1875,0.375,-4,0.0045615215291062226},
new double[]{0.1875,0.375,-0.5,0.0223850371640671452},
new double[]{0.1875,0.375,0,0.0477157864175327861},
new double[]{0.1875,0.375,0.5,0.576680019739515356},
new double[]{0.1875,0.375,4,0.0130469768240071486},
new double[]{0.1875,0.375,10,0.00462156207508126092},
new double[]{0.1875,1,-10,0.0e-66},
new double[]{0.1875,1,-4,0.0e-65},
new double[]{0.1875,1,-0.5,0.0e-65},
new double[]{0.1875,1,0,0.0e-64},
new double[]{0.1875,1,0.5,0.841175510154875941},
new double[]{0.1875,1,4,0.0194396549151400933},
new double[]{0.1875,1,10,0.00687884237110329151},
new double[]{0.875,-1,-10,0.0846016067676838151},
new double[]{0.875,-1,-4,1.20238663588553112e-12},
new double[]{0.875,-1,-0.5,6.51729227048908141e-700323},
new double[]{0.875,-1,0,5.6823974344173017e-156980181},
new double[]{0.875,-1,0.5,0.0e-62},
new double[]{0.875,-1,4,0.0e-64},
new double[]{0.875,-1,10,0.0e-64},
new double[]{0.875,-0.25,-10,0.0101565152578798568},
new double[]{0.875,-0.25,-4,0.0637482918033682898},
new double[]{0.875,-0.25,-0.5,0.127265650796516667},
new double[]{0.875,-0.25,0,0.0838251203833049271},
new double[]{0.875,-0.25,0.5,0.0572456218962755353},
new double[]{0.875,-0.25,4,0.011385943799519284},
new double[]{0.875,-0.25,10,0.00314401030005104195},
new double[]{0.875,0,-10,0.00532576438776965663},
new double[]{0.875,0,-4,0.0228252795141123461},
new double[]{0.875,0,-0.5,0.137741140023149456},
new double[]{0.875,0,0,0.181611241663272182},
new double[]{0.875,0,0.5,0.199595514084174659},
new double[]{0.875,0,4,0.0318678251584718415},
new double[]{0.875,0,10,0.00619868574036678325},
new double[]{0.875,0.375,-10,0.00195273986211850649},
new double[]{0.875,0.375,-4,0.00560006119572872875},
new double[]{0.875,0.375,-0.5,0.017192061678680327},
new double[]{0.875,0.375,0,0.021809129714919219},
new double[]{0.875,0.375,0.5,0.0286855325222567997},
new double[]{0.875,0.375,4,0.159654071188720201},
new double[]{0.875,0.375,10,0.0173024022690566394},
new double[]{0.875,1,-10,0.0e-64},
new double[]{0.875,1,-4,0.0e-64},
new double[]{0.875,1,-0.5,0.0e-63},
new double[]{0.875,1,0,0.0e-63},
new double[]{0.875,1,0.5,0},
new double[]{0.875,1,4,5.36564983092196331e-56},
new double[]{0.875,1,10,0.111777913037468706},
new double[]{1,-1,-10,0.0120552004436318654},
new double[]{1,-1,-4,0.049016381747578651},
new double[]{1,-1,-0.5,0.142687224367128198},
new double[]{1,-1,0,0.15833461078777093},
new double[]{1,-1,0.5,0.166711271814586233},
new double[]{1,-1,4,0.0000249340278025387455},
new double[]{1,-1,10,3.86941073315465093e-1198},
new double[]{1,-0.25,-4,0.0303893662273338555},
new double[]{1,-0.25,-0.5,0.143283945350819442},
new double[]{1,-0.25,0,0.171330882008686793},
new double[]{1,-0.25,0.5,0.185391461319831204},
new double[]{1,-0.25,4,0.0264578912420336237},
new double[]{1,-0.25,10,0.00403780127187195812},
new double[]{1,0,-10,0.00484684770420661735},
new double[]{1,0,-4,0.0240476809743334116},
new double[]{1,0,-0.5,0.1442141494567049},
new double[]{1,0,0,0.176052144738793991},
new double[]{1,0,0.5,0.186911134351542104},
new double[]{1,0,4,0.0345876175879648882},
new double[]{1,0,10,0.00572607356678920551},
new double[]{1,0.375,-10,0.00275750401049915479},
new double[]{1,0.375,-4,0.0146506351430351638},
new double[]{1,0.375,-0.5,0.147980273385360836},
new double[]{1,0.375,0,0.178437814055591272},
new double[]{1,0.375,0.5,0.181097525163139653},
new double[]{1,0.375,4,0.0461902037618226076},
new double[]{1,0.375,10,0.00858043138767135289},
new double[]{1,1,-10,9.25200655863175766e-2646},
new double[]{1,1,-4,8.04879458783656752e-11},
new double[]{1,1,-0.5,0.144309718196504826},
new double[]{1,1,0,0.164402760047357055},
new double[]{1,1,0.5,0.165442602392110853},
new double[]{1,1,4,0.0636383788143668392},
new double[]{1,1,10,0.0141597189307400697},
new double[]{1.125,-1,-10,0.00275805127246462398},
new double[]{1.125,-1,-4,0.00621457746355105584},
new double[]{1.125,-1,-0.5,0.011763229084054842},
new double[]{1.125,-1,0,0.0130697606552725499},
new double[]{1.125,-1,10,0.159427320043951073},
new double[]{1.125,-0.25,-10,0.00372755304258231479},
new double[]{1.125,-0.25,-4,0.0142929252359373756},
new double[]{1.125,-0.25,-0.5,0.0531267371403108003},
new double[]{1.125,-0.25,0,0.0670092065738594514},
new double[]{1.125,-0.25,4,0.123765166729720294},
new double[]{1.125,-0.25,10,0.00642270104670531278},
new double[]{1.125,0,-10,0.00427078668053826101},
new double[]{1.125,0,-4,0.025001744235344046},
new double[]{1.125,0,-0.5,0.14773450969998548},
new double[]{1.125,0,0,0.171712490226065321},
new double[]{1.125,0,0.5,0.179157641665684126},
new double[]{1.125,0,4,0.0371674516650404853},
new double[]{1.125,0,10,0.00512797692036771519},
new double[]{1.125,0.375,-10,0.00563642119196431157},
new double[]{1.125,0.375,-4,0.14268478987618342},
new double[]{1.125,0.375,-0.5,0.0782270219957517699},
new double[]{1.125,0.375,0,0.0627918896921382113},
new double[]{1.125,0.375,4,0.0148331285716525878},
new double[]{1.125,0.375,10,0.00403393592987142387},
new double[]{1.125,1,-10,0.11535526619901388},
new double[]{1.125,1,4,0.00716343552294562378},
new double[]{1.125,1,10,0.00304894224458085392},
new double[]{1.7,-1,-10,0.00235003908061798381},
new double[]{1.7,-1,-4,0.0248082240127128557},
new double[]{1.7,-1,-0.5,0.118709745930330614},
new double[]{1.7,-1,0,0.136809677869491556},
new double[]{1.7,-1,0.5,0.15205760706429258},
new double[]{1.7,-1,4,0.0778416960809115437},
new double[]{1.7,-1,10,4.83909439961559569e-6},
new double[]{1.7,-0.25,-10,0.00161319003032074674},
new double[]{1.7,-0.25,-4,0.0270389607763099799},
new double[]{1.7,-0.25,-0.5,0.14471714244448391},
new double[]{1.7,-0.25,0,0.159065474424639864},
new double[]{1.7,-0.25,0.5,0.166357138319158912},
new double[]{1.7,-0.25,4,0.0541432282756247292},
new double[]{1.7,-0.25,10,0.00139429377458366754},
new double[]{1.7,0,-10,0.00133348365343831789},
new double[]{1.7,0,-4,0.0282861397850080446},
new double[]{1.7,0,-0.5,0.152654617173119158},
new double[]{1.7,0,0,0.163870984280170003},
new double[]{1.7,0,0.5,0.166975190673575102},
new double[]{1.7,0,4,0.0492014268171709222},
new double[]{1.7,0,10,0.0017779483195426824},
new double[]{1.7,0.375,-10,0.000876539114789763024},
new double[]{1.7,0.375,-4,0.0311475793864698595},
new double[]{1.7,0.375,-0.5,0.161622185801591866},
new double[]{1.7,0.375,0,0.166760071014402456},
new double[]{1.7,0.375,0.5,0.163289266148339929},
new double[]{1.7,0.375,4,0.0437663164176938722},
new double[]{1.7,0.375,10,0.0022951772466629433},
new double[]{1.7,1,-10,3.96847124898336665e-7},
new double[]{1.7,1,-4,0.0410642473516228793},
new double[]{1.7,1,-0.5,0.165127567476394708},
new double[]{1.7,1,0,0.159933057550168853},
new double[]{1.7,1,0.5,0.148126030799541171},
new double[]{1.7,1,4,0.0380228069913886552},
new double[]{1.7,1,10,0.00302940749277748275},
new double[]{2,-1,-10,0.0000136193201517526079},
new double[]{2,-1,-4,0.0304185897697654194},
new double[]{2,-1,-0.5,0.15401134144402122},
new double[]{2,-1,0,0.163322405649358235},
new double[]{2,-1,0.5,0.16586489168167542},
new double[]{2,-1,4,0.0550494776762009875},
new double[]{2,-1,10,0.0000600054567345840717},
new double[]{2,-0.25,-10,0.0000136193201517526079},
new double[]{2,-0.25,-4,0.0304185897697654194},
new double[]{2,-0.25,-0.5,0.15401134144402122},
new double[]{2,-0.25,0,0.163322405649358235},
new double[]{2,-0.25,0.5,0.16586489168167542},
new double[]{2,-0.25,4,0.0550494776762009875},
new double[]{2,-0.25,10,0.0000600054567345840717},
new double[]{2,0,-10,0.0000136193201517526079},
new double[]{2,0,-4,0.0304185897697654194},
new double[]{2,0,-0.5,0.15401134144402122},
new double[]{2,0,0,0.163322405649358235},
new double[]{2,0,0.5,0.16586489168167542},
new double[]{2,0,4,0.0550494776762009875},
new double[]{2,0,10,0.0000600054567345840717},
new double[]{2,0.375,-10,0.0000136193201517526079},
new double[]{2,0.375,-4,0.0304185897697654194},
new double[]{2,0.375,-0.5,0.15401134144402122},
new double[]{2,0.375,0,0.163322405649358235},
new double[]{2,0.375,0.5,0.16586489168167542},
new double[]{2,0.375,4,0.0550494776762009875},
new double[]{2,0.375,10,0.0000600054567345840717},
new double[]{2,1,-10,0.0000136193201517526079},
new double[]{2,1,-4,0.0304185897697654194},
new double[]{2,1,-0.5,0.15401134144402122},
new double[]{2,1,0,0.163322405649358235},
new double[]{2,1,0.5,0.16586489168167542},
new double[]{2,1,4,0.0550494776762009875},
new double[]{2,1,10,0.0000600054567345840717}
     };

    [Fact]
    public void PdfTestS1()
    {
      for (int i = 0; i < _pdfTestS1.Length; i++)
      {
        double alpha = _pdfTestS1[i][0];
        double beta = _pdfTestS1[i][1];
        double x = _pdfTestS1[i][2];
        double expectedy = _pdfTestS1[i][3];
        double y = double.NaN;
        try
        {
          y = StableDistributionS1.PDF(x, alpha, beta, 1.7, 3.0 / 7.0);
        }
        catch (Exception ex)
        {
          Assert.True(false, string.Format("Exception at i={0}, alpha={1}, beta={2}, x={3}: {4}", i, alpha, beta, x, ex.Message));
        }
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        AssertEx.Equal(expectedy, y, maxdelta, msg);
      }
    }

    [Fact]
    public void PdfTestSpecS1()
    {
      int i = 12;
      {
        double alpha = _pdfTestS1[i][0];
        double beta = _pdfTestS1[i][1];
        double x = _pdfTestS1[i][2];
        double expectedy = _pdfTestS1[i][3];
        double y = StableDistributionS1.PDF(x, alpha, beta, 1.7, 3.0 / 7.0);
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        AssertEx.Equal(expectedy, y, maxdelta, msg);
      }
    }

    private double[][] _cdfTestS1 = new double[][]{
new double[]{0.1875,-1,-10,0.484143353990892722},
new double[]{0.1875,-1,-4,0.541709809574655192},
new double[]{0.1875,-1,-0.5,0.65176025277584569},
new double[]{0.1875,-1,0,0.706454471331646805},
new double[]{0.1875,-1,0.5,1.0},
new double[]{0.1875,-1,4,1.0},
new double[]{0.1875,-1,10,1.0},
new double[]{0.1875,-0.25,-10,0.297965802739484841},
new double[]{0.1875,-0.25,-4,0.332919733213570065},
new double[]{0.1875,-0.25,-0.5,0.399677712802845842},
new double[]{0.1875,-0.25,0,0.43291358362164639},
new double[]{0.1875,-0.25,0.5,0.702410062531254942},
new double[]{0.1875,-0.25,4,0.797499878352066335},
new double[]{0.1875,-0.25,10,0.821239719436348564},
new double[]{0.1875,0,-10,0.237044806535546913},
new double[]{0.1875,0,-4,0.264685493049933472},
new double[]{0.1875,0,-0.5,0.317398311385020418},
new double[]{0.1875,0,0,0.343613536990970972},
new double[]{0.1875,0,0.5,0.599288046261269792},
new double[]{0.1875,0,4,0.728186761093414256},
new double[]{0.1875,0,10,0.760248274919282669},
new double[]{0.1875,0.375,-10,0.146856009092557539},
new double[]{0.1875,0.375,-4,0.163802735564703955},
new double[]{0.1875,0.375,-0.5,0.196016361092548598},
new double[]{0.1875,0.375,0,0.211987449872970006},
new double[]{0.1875,0.375,0.5,0.441944244800983293},
new double[]{0.1875,0.375,4,0.622711155170472967},
new double[]{0.1875,0.375,10,0.66756526464807638},
new double[]{0.1875,1,-10,0.0e-64},
new double[]{0.1875,1,-4,0.0e-64},
new double[]{0.1875,1,-0.5,0.0e-64},
new double[]{0.1875,1,0,0.0e-64},
new double[]{0.1875,1,0.5,0.175472196194736968},
new double[]{0.1875,1,4,0.443423391241664537},
new double[]{0.1875,1,10,0.510225958763016378},
new double[]{0.875,-1,-10,0.4295431031963644},
new double[]{0.875,-1,-4,0.99999999999997396},
new double[]{0.875,-1,-0.5,1.0},
new double[]{0.875,-1,0,1.0},
new double[]{0.875,-1,0.5,1.0},
new double[]{0.875,-1,4,1.0},
new double[]{0.875,-1,10,1.0},
new double[]{0.875,-0.25,-10,0.103645152550670266},
new double[]{0.875,-0.25,-4,0.258282420634030904},
new double[]{0.875,-0.25,-0.5,0.744445191650998506},
new double[]{0.875,-0.25,0,0.796438165548588067},
new double[]{0.875,-0.25,0.5,0.831131612096281742},
new double[]{0.875,-0.25,4,0.920168072631920842},
new double[]{0.875,-0.25,10,0.955857197085469799},
new double[]{0.875,0,-10,0.0667357783468478461},
new double[]{0.875,0,-4,0.132721718090647316},
new double[]{0.875,0,-0.5,0.336969309121143516},
new double[]{0.875,0,0,0.416989202492455348},
new double[]{0.875,0,0.5,0.51428435621744766},
new double[]{0.875,0,4,0.844157332986832977},
new double[]{0.875,0,10,0.928339595110488014},
new double[]{0.875,0.375,-10,0.031931129011508214},
new double[]{0.875,0.375,-4,0.0516781920569622006},
new double[]{0.875,0.375,-0.5,0.0858123764871179021},
new double[]{0.875,0.375,0,0.095491523377920353},
new double[]{0.875,0.375,0.5,0.107993610360931512},
new double[]{0.875,0.375,4,0.514552404338079068},
new double[]{0.875,0.375,10,0.857558181441577747},
new double[]{0.875,1,-10,0.0e-64},
new double[]{0.875,1,-4,0.0e-64},
new double[]{0.875,1,-0.5,0.0e-64},
new double[]{0.875,1,0,0.0e-64},
new double[]{0.875,1,0.5,0},
new double[]{0.875,1,4,2.10559718707282864e-58},
new double[]{0.875,1,10,0.486832137438818852},
new double[]{1,-1,-10,0.122599860423379345},
new double[]{1,-1,-4,0.272040019602594259},
new double[]{1,-1,-0.5,0.582104091630695948},
new double[]{1,-1,0,0.657540585197017406},
new double[]{1,-1,0.5,0.739239750849545655},
new double[]{1,-1,4,0.999997603339711034},
new double[]{1,-1,10,1.0},
new double[]{1,0,-10,0.0514364414394423542},
new double[]{1,0,-4,0.116668590003776055},
new double[]{1,0,-0.5,0.340865650561206932},
new double[]{1,0,0,0.421391799520304508},
new double[]{1,0,0.5,0.513366502870251664},
new double[]{1,0,4,0.858586398879053989},
new double[]{1,0,10,0.944047849778605912},
new double[]{1,1,-10,0.0},
new double[]{1,1,-4,3.5825459124509298e-12},
new double[]{1,1,-0.5,0.12329871414532084},
new double[]{1,1,0,0.20137512788325443},
new double[]{1,1,0.5,0.28449830816823085},
new double[]{1,1,4,0.6800084640477608},
new double[]{1,1,10,0.8661991683829827},
new double[]{1.125,-1,-10,0.0440548818790989693},
new double[]{1.125,-1,-4,0.0690034983931907379},
new double[]{1.125,-1,10,0.787441472553653154},
new double[]{1.125,-0.25,-10,0.0407698029802605882},
new double[]{1.125,-0.25,-4,0.0850492596224572583},
new double[]{1.125,-0.25,-0.5,0.183994869601782084},
new double[]{1.125,-0.25,0,0.213874974244892208},
new double[]{1.125,-0.25,4,0.759068159392355657},
new double[]{1.125,-0.25,10,0.958350303539893429},
new double[]{1.125,0,-10,0.0390614361565044313},
new double[]{1.125,0,-4,0.102253416419523171},
new double[]{1.125,0,-0.5,0.343890259320079018},
new double[]{1.125,0,0,0.424235078288166654},
new double[]{1.125,0,0.5,0.51280748701941967},
new double[]{1.125,0,4,0.871559722458425445},
new double[]{1.125,0,10,0.956926798211712325},
new double[]{1.125,0.375,-10,0.0352694996686503234},
new double[]{1.125,0.375,-4,0.252548651538978005},
new double[]{1.125,0.375,-0.5,0.746782265393389729},
new double[]{1.125,0.375,0,0.781885857782207205},
new double[]{1.125,0.375,4,0.90834948344294576},
new double[]{1.125,0.375,10,0.955300243194246062},
new double[]{1.125,1,-10,0.0916454317562131849},
new double[]{1.125,1,4,0.925276570864135016},
new double[]{1.125,1,10,0.95345938832080135},
new double[]{1.7,-1,-10,0.0132378665894260826},
new double[]{1.7,-1,-4,0.06476925817930829},
new double[]{1.7,-1,-0.5,0.286222645178864028},
new double[]{1.7,-1,0,0.3501747233106686},
new double[]{1.7,-1,0.5,0.422558123681641849},
new double[]{1.7,-1,4,0.913080545773200698},
new double[]{1.7,-1,10,0.999998318386364521},
new double[]{1.7,-0.25,-10,0.00861810291160160344},
new double[]{1.7,-0.25,-4,0.0551560719286347612},
new double[]{1.7,-0.25,-0.5,0.330257112353655766},
new double[]{1.7,-0.25,0,0.406452768570295496},
new double[]{1.7,-0.25,0.5,0.488141031277030148},
new double[]{1.7,-0.25,4,0.917003260664131672},
new double[]{1.7,-0.25,10,0.99365292092226658},
new double[]{1.7,0,-10,0.00699108719839077644},
new double[]{1.7,0,-4,0.0515234225050636086},
new double[]{1.7,0,-0.5,0.349419696983704106},
new double[]{1.7,0,0,0.428859030706544649},
new double[]{1.7,0,0.5,0.51193106859651026},
new double[]{1.7,0,4,0.915967653013365687},
new double[]{1.7,0,10,0.991688374778011338},
new double[]{1.7,0.375,-10,0.00446254678835819783},
new double[]{1.7,0.375,-4,0.0457721239099883027},
new double[]{1.7,0.375,-0.5,0.381733906460910983},
new double[]{1.7,0.375,0,0.46418741949055739},
new double[]{1.7,0.375,0.5,0.547050812989315523},
new double[]{1.7,0.375,4,0.91354185767644474},
new double[]{1.7,0.375,10,0.988868139420244922},
new double[]{1.7,1,-10,1.2289569305867555e-7},
new double[]{1.7,1,-4,0.0367407864514562429},
new double[]{1.7,1,-0.5,0.440061163470415145},
new double[]{1.7,1,0,0.521639076120320864},
new double[]{1.7,1,0.5,0.598888258499848502},
new double[]{1.7,1,4,0.908704120861079158},
new double[]{1.7,1,10,0.984473293698553908},
new double[]{2,-1,-10,7.19862078650686666e-6},
new double[]{2,-1,-4,0.032734439285138146},
new double[]{2,-1,-0.5,0.349661392761968671},
new double[]{2,-1,0,0.429258526269589985},
new double[]{2,-1,0.5,0.51185097882939671},
new double[]{2,-1,4,0.931296729870530805},
new double[]{2,-1,10,0.999965714364872786},
new double[]{2,-0.25,-10,7.19862078650686666e-6},
new double[]{2,-0.25,-4,0.032734439285138146},
new double[]{2,-0.25,-0.5,0.349661392761968671},
new double[]{2,-0.25,0,0.429258526269589985},
new double[]{2,-0.25,0.5,0.51185097882939671},
new double[]{2,-0.25,4,0.931296729870530805},
new double[]{2,-0.25,10,0.999965714364872786},
new double[]{2,0,-10,7.19862078650686666e-6},
new double[]{2,0,-4,0.032734439285138146},
new double[]{2,0,-0.5,0.349661392761968671},
new double[]{2,0,0,0.429258526269589985},
new double[]{2,0,0.5,0.51185097882939671},
new double[]{2,0,4,0.931296729870530805},
new double[]{2,0,10,0.999965714364872786},
new double[]{2,0.375,-10,7.19862078650686666e-6},
new double[]{2,0.375,-4,0.032734439285138146},
new double[]{2,0.375,-0.5,0.349661392761968671},
new double[]{2,0.375,0,0.429258526269589985},
new double[]{2,0.375,0.5,0.51185097882939671},
new double[]{2,0.375,4,0.931296729870530805},
new double[]{2,0.375,10,0.999965714364872786},
new double[]{2,1,-10,7.19862078650686666e-6},
new double[]{2,1,-4,0.032734439285138146},
new double[]{2,1,-0.5,0.349661392761968671},
new double[]{2,1,0,0.429258526269589985},
new double[]{2,1,0.5,0.51185097882939671},
new double[]{2,1,4,0.931296729870530805},
new double[]{2,1,10,0.999965714364872786},
};

    [Fact]
    public void CdfTestS1()
    {
      for (int i = 0; i < _cdfTestS1.Length; i++)
      {
        double alpha = _cdfTestS1[i][0];
        double beta = _cdfTestS1[i][1];
        double x = _cdfTestS1[i][2];
        double expectedy = _cdfTestS1[i][3];
        double y = double.NaN;
        try
        {
          y = StableDistributionS1.CDF(x, alpha, beta, 1.7, 3.0 / 7.0);
        }
        catch (Exception ex)
        {
          Assert.True(false, string.Format("Exception at i={0}, alpha={1}, beta={2}, x={3}: {4}", i, alpha, beta, x, ex.Message));
        }
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        AssertEx.Equal(expectedy, y, maxdelta, msg);
      }
    }

    #endregion Test S1

    #region Test S0 to Feller conversion

    #region Test data

    private static readonly double[][] _dataS0ToFeller =
      {
    new double[]{1.421085471520200371742249e-14,-1.0,0,1.421085471520200371742249e-14,0,1.00000000000001753193928,2.232235838725524415666714e-14},
new double[]{1.421085471520200371742249e-14,-1.0,7.888609052210118054117286e-31,1.421085471520200371742249e-14,7.888609052210118054117286e-31,1.00000000000001753193928,2.232235838725524415666714e-14},
new double[]{1.421085471520200371742249e-14,-0.999999999883584678173065,1.16415321826934814453125e-10,1.421085471354764249231643e-14,1.16415321826934814453125e-10,1.000000000000017531939276,2.232235838465657962107864e-14},
new double[]{1.421085471520200371742249e-14,-0.9990234375,0.0009765625,1.419697692739418926066719e-14,0.0009765625,1.000000000000017497713931,2.23005592091426902072954e-14},
new double[]{1.421085471520200371742249e-14,-0.5009765625,0.4990234375,7.119305145408816315466538e-15,0.4990234375,1.000000000000004400122574,1.118297837174017602770532e-14},
new double[]{1.421085471520200371742249e-14,-0.4990234375,0.5009765625,7.091549569793187401955947e-15,0.5009765625,1.000000000000004365880505,1.113938001551506812896183e-14},
new double[]{1.421085471520200371742249e-14,-9.31322574615478515625e-10,0.9999999990686774253845215,1.323488980084844279794254e-23,0.9999999990686774253845215,1.0,2.078931628470797478842283e-23},
new double[]{1.421085471520200371742249e-14,0,1.0,0,1.0,1.0,0},
new double[]{1.421085471520200371742249e-14,9.31322574615478515625e-10,0.9999999990686774253845215,-1.323488980084844279794254e-23,0.9999999990686774253845215,1.0,-2.078931628470797478842283e-23},
new double[]{1.421085471520200371742249e-14,0.4990234375,0.5009765625,-7.091549569793187401955947e-15,0.5009765625,1.000000000000004365880505,-1.113938001551506812896183e-14},
new double[]{1.421085471520200371742249e-14,0.5009765625,0.4990234375,-7.119305145408816315466538e-15,0.4990234375,1.000000000000004400122574,-1.118297837174017602770532e-14},
new double[]{1.421085471520200371742249e-14,0.9990234375,0.0009765625,-1.419697692739418926066719e-14,0.0009765625,1.000000000000017497713931,-2.23005592091426902072954e-14},
new double[]{1.421085471520200371742249e-14,0.999999999883584678173065,1.16415321826934814453125e-10,-1.421085471354764249231643e-14,1.16415321826934814453125e-10,1.000000000000017531939276,-2.232235838465657962107864e-14},
new double[]{1.421085471520200371742249e-14,1.0,7.888609052210118054117286e-31,-1.421085471520200371742249e-14,7.888609052210118054117286e-31,1.00000000000001753193928,-2.232235838725524415666714e-14},
new double[]{1.421085471520200371742249e-14,1.0,0,-1.421085471520200371742249e-14,0,1.00000000000001753193928,-2.232235838725524415666714e-14},
new double[]{0.0009765625,-1.0,0,0.0009765625,0,1.001205512212389417443032,0.001533981991088666528492721},
new double[]{0.0009765625,-1.0,7.888609052210118054117286e-31,0.0009765625,7.888596677107442465675874e-31,1.001205512212389417443032,0.001533981991088666528492721},
new double[]{0.0009765625,-0.999999999883584678173065,1.16415321826934814453125e-10,0.0009765624998863133406224089,1.164151392026532923768237e-10,1.001205512212108568475386,0.001533981990910087521323411},
new double[]{0.0009765625,-0.9990234375,0.0009765625,0.0009756088271774610906049252,0.0009765609702798432205565767,1.001203157433613608988643,0.00153248396180049400258599},
new double[]{0.0009765625,-0.5009765625,0.4990234375,0.000489235211745778997667403,0.4990231431723223063885794,1.000302420225710971146587,0.0007684890248325057901530916},
new double[]{0.0009765625,-0.4990234375,0.5009765625,0.0004873278627389537918389312,0.5009762685553113171569345,1.000300066417490794450945,0.0007654929662561607383396292},
new double[]{0.0009765625,-9.31322574615478515625e-10,0.9999999990686774253845215,9.09495415150035245056378e-13,0.9999999990686766948863639,1.000000000000000000001045,1.42863205735447493241422e-12},
new double[]{0.0009765625,0,1.0,0,1.0,1.0,0},
new double[]{0.0009765625,9.31322574615478515625e-10,0.9999999990686774253845215,-9.09495415150035245056378e-13,0.9999999990686766948863639,1.000000000000000000001045,-1.42863205735447493241422e-12},
new double[]{0.0009765625,0.4990234375,0.5009765625,-0.0004873278627389537918389312,0.5009762685553113171569345,1.000300066417490794450945,-0.0007654929662561607383396292},
new double[]{0.0009765625,0.5009765625,0.4990234375,-0.000489235211745778997667403,0.4990231431723223063885794,1.000302420225710971146587,-0.0007684890248325057901530916},
new double[]{0.0009765625,0.9990234375,0.0009765625,-0.0009756088271774610906049252,0.0009765609702798432205565767,1.001203157433613608988643,-0.00153248396180049400258599},
new double[]{0.0009765625,0.999999999883584678173065,1.16415321826934814453125e-10,-0.0009765624998863133406224089,1.164151392026532923768237e-10,1.001205512212108568475386,-0.001533981990910087521323411},
new double[]{0.0009765625,1.0,7.888609052210118054117286e-31,-0.0009765625,7.888596677107442465675874e-31,1.001205512212389417443032,-0.001533981991088666528492721},
new double[]{0.0009765625,1.0,0,-0.0009765625,0,1.001205512212389417443032,-0.001533981991088666528492721},
new double[]{0.125,-1.0,0,0.125,0,1.167907601843724847691026,0.1989123673796580069115976},
new double[]{0.125,-1.0,7.888609052210118054117286e-31,0.125,7.687412905645950709634956e-31,1.167907601843724847691026,0.1989123673796580069115976},
new double[]{0.125,-0.999999999883584678173065,1.16415321826934814453125e-10,0.1249999999858192261539989,1.134461907680088693337928e-10,1.16790760180232678037051,0.1989123673565015596477372},
new double[]{0.125,-0.9990234375,0.0009765625,0.1248810386268746048501893,0.0009516909850031611984852038,1.167560537934192606738989,0.198718117020888809639223},
new double[]{0.125,-0.5009765625,0.4990234375,0.06323069001949552220421024,0.4941544798440358223663181,1.040316416887408361724855,0.09965043404859820072817342},
new double[]{0.125,-0.4990234375,0.5009765625,0.06298578526739967905367389,0.4961137178608025675706089,1.039998042703580133016094,0.0992619333310598061834242},
new double[]{0.125,-9.31322574615478515625e-10,0.9999999990686774253845215,1.179348174876855620670468e-10,0.9999999990565214600985155,1.000000000000000000137273,1.852515781108830188509055e-10},
new double[]{0.125,0,1.0,0,1.0,1.0,0},
new double[]{0.125,9.31322574615478515625e-10,0.9999999990686774253845215,-1.179348174876855620670468e-10,0.9999999990565214600985155,1.000000000000000000137273,-1.852515781108830188509055e-10},
new double[]{0.125,0.4990234375,0.5009765625,-0.06298578526739967905367389,0.4961137178608025675706089,1.039998042703580133016094,-0.0992619333310598061834242},
new double[]{0.125,0.5009765625,0.4990234375,-0.06323069001949552220421024,0.4941544798440358223663181,1.040316416887408361724855,-0.09965043404859820072817342},
new double[]{0.125,0.9990234375,0.0009765625,-0.1248810386268746048501893,0.0009516909850031611984852038,1.167560537934192606738989,-0.198718117020888809639223},
new double[]{0.125,0.999999999883584678173065,1.16415321826934814453125e-10,-0.1249999999858192261539989,1.134461907680088693337928e-10,1.16790760180232678037051,-0.1989123673565015596477372},
new double[]{0.125,1.0,7.888609052210118054117286e-31,-0.125,7.687412905645950709634956e-31,1.167907601843724847691026,-0.1989123673796580069115976},
new double[]{0.125,1.0,0,-0.125,0,1.167907601843724847691026,-0.1989123673796580069115976},
new double[]{0.875,-1.0,0,0.875,0,6.473798397343406296281724,5.027339492125848104514975},
new double[]{0.875,-1.0,7.888609052210118054117286e-31,0.875,1.098201843663707244233565e-31,6.473798397343406296281724,5.027339492125848104514975},
new double[]{0.875,-0.999999999883584678173065,1.16415321826934814453125e-10,0.8749999999858192261524737,1.620659868288720437985489e-11,6.473798396514874576928266,5.027339491540588759605885},
new double[]{0.875,-0.9990234375,0.0009765625,0.8748809311959006262923247,0.0001360786332564270944860354,6.466848765284605174598834,5.02242998090306895597541},
new double[]{0.875,-0.5009765625,0.4990234375,0.7593831654091330049745631,0.1321335252467051371719279,3.124589968761433802796851,2.518579257285703200797053},
new double[]{0.875,-0.4990234375,0.5009765625,0.758529032694736458094618,0.133109676920301190749008,3.112570070292761005241727,2.508760234840144903717922},
new double[]{0.875,-9.31322574615478515625e-10,0.9999999990686774253845215,2.98070136745619531239224e-9,0.9999999965934841514786339,1.000000000000000012526757,4.682074759272717036786466e-9},
new double[]{0.875,0,1.0,0,1.0,1.0,0},
new double[]{0.875,9.31322574615478515625e-10,0.9999999990686774253845215,-2.98070136745619531239224e-9,0.9999999965934841514786339,1.000000000000000012526757,-4.682074759272717036786466e-9},
new double[]{0.875,0.4990234375,0.5009765625,-0.758529032694736458094618,0.133109676920301190749008,3.112570070292761005241727,-2.508760234840144903717922},
new double[]{0.875,0.5009765625,0.4990234375,-0.7593831654091330049745631,0.1321335252467051371719279,3.124589968761433802796851,-2.518579257285703200797053},
new double[]{0.875,0.9990234375,0.0009765625,-0.8748809311959006262923247,0.0001360786332564270944860354,6.466848765284605174598834,-5.02242998090306895597541},
new double[]{0.875,0.999999999883584678173065,1.16415321826934814453125e-10,-0.8749999999858192261524737,1.620659868288720437985489e-11,6.473798396514874576928266,-5.027339491540588759605885},
new double[]{0.875,1.0,7.888609052210118054117286e-31,-0.875,1.098201843663707244233565e-31,6.473798397343406296281724,-5.027339492125848104514975},
new double[]{0.875,1.0,0,-0.875,0,6.473798397343406296281724,-5.027339492125848104514975},
new double[]{0.9990234375,-1.0,0,0.9990234375,0,656.0412678808089694324694,651.8981355773937866181086},
new double[]{0.9990234375,-1.0,7.888609052210118054117286e-31,0.9990234375,7.711238198540999477689026e-34,656.0412678808089694324694,651.8981355773937866181086},
new double[]{0.9990234375,-0.999999999883584678173065,1.16415321826934814453125e-10,0.9990234374998863133406092,1.137977900451668958881058e-13,656.0412678043612378260236,651.8981355015028553664875},
new double[]{0.9990234375,-0.9990234375,0.0009765625,0.9990224828949503524122506,9.555381924136166719745401e-7,655.3999781347995037493598,651.2615163043689879983644},
new double[]{0.9990234375,-0.5009765625,0.4990234375,0.9980506868243005669089475,0.000973701556125336740212855,328.4404666836085127909157,326.5856870617216919287986},
new double[]{0.9990234375,-0.4990234375,0.5009765625,0.9980430574664923411693048,0.0009813383717613320064828129,327.1587598328629640622672,325.3124485156720946893101},
new double[]{0.9990234375,-9.31322574615478515625e-10,0.9999999990686774253845215,3.865093390253187356978073e-7,0.9999996131128414839429273,1.000000000000184482028511,6.07127450012968654388663e-7},
new double[]{0.9990234375,0,1.0,0,1.0,1.0,0},
new double[]{0.9990234375,9.31322574615478515625e-10,0.9999999990686774253845215,-3.865093390253187356978073e-7,0.9999996131128414839429273,1.000000000000184482028511,-6.07127450012968654388663e-7},
new double[]{0.9990234375,0.4990234375,0.5009765625,-0.9980430574664923411693048,0.0009813383717613320064828129,327.1587598328629640622672,-325.3124485156720946893101},
new double[]{0.9990234375,0.5009765625,0.4990234375,-0.9980506868243005669089475,0.000973701556125336740212855,328.4404666836085127909157,-326.5856870617216919287986},
new double[]{0.9990234375,0.9990234375,0.0009765625,-0.9990224828949503524122506,9.555381924136166719745401e-7,655.3999781347995037493598,-651.2615163043689879983644},
new double[]{0.9990234375,0.999999999883584678173065,1.16415321826934814453125e-10,-0.9990234374998863133406092,1.137977900451668958881058e-13,656.0412678043612378260236,-651.8981355015028553664875},
new double[]{0.9990234375,1.0,7.888609052210118054117286e-31,-0.9990234375,7.711238198540999477689026e-34,656.0412678808089694324694,-651.8981355773937866181086},
new double[]{0.9990234375,1.0,0,-0.9990234375,0,656.0412678808089694324694,-651.8981355773937866181086},
new double[]{0.999999999999985789145285,-1.0,0,0.999999999999985789145285,0,4.479813390019703165670747e13,4.479813390017702066797247e13},
new double[]{0.999999999999985789145285,-1.0,7.888609052210118054117286e-31,0.999999999999985789145285,1.121038771459869587658095e-44,4.479813390019703165670747e13,4.479813390017702066797247e13},
new double[]{0.999999999999985789145285,-0.999999999883584678173065,1.16415321826934814453125e-10,0.999999999999985789145283,1.654361225298671854090981e-24,4.479813389498184248146984e13,4.479813389496183149273724e13},
new double[]{0.999999999999985789145285,-0.9990234375,0.0009765625,0.999999999999985775253931,1.389135358279785500079592e-17,4.475438572256011987158489e13,4.47543857225401290462264e13},
new double[]{0.999999999999985789145285,-0.5009765625,0.4990234375,0.999999999999971633693512,1.415545177284274287569409e-14,2.244281512773520654785766e13,2.24428151277254019557323e13},
new double[]{0.999999999999985789145285,-0.4990234375,0.5009765625,0.999999999999971522670786,1.426647449882334932791134e-14,2.235531877246138383886376e13,2.235531877245161871224017e13},
new double[]{0.999999999999985789145285,-9.31322574615478515625e-10,0.9999999990686774253845215,0.999984741210940421989879,0.00001525878904536737224623112,41721.51341387234351407375,41721.51340188181089979827},
new double[]{0.999999999999985789145285,0,1.0,0,1.0,1.0,0},
new double[]{0.999999999999985789145285,9.31322574615478515625e-10,0.9999999990686774253845215,-0.999984741210940421989879,0.00001525878904536737224623112,41721.51341387234351407375,-41721.51340188181089979827},
new double[]{0.999999999999985789145285,0.4990234375,0.5009765625,-0.999999999999971522670786,1.426647449882334932791134e-14,2.235531877246138383886376e13,-2.235531877245161871224017e13},
new double[]{0.999999999999985789145285,0.5009765625,0.4990234375,-0.999999999999971633693512,1.415545177284274287569409e-14,2.244281512773520654785766e13,-2.24428151277254019557323e13},
new double[]{0.999999999999985789145285,0.9990234375,0.0009765625,-0.999999999999985775253931,1.389135358279785500079592e-17,4.475438572256011987158489e13,-4.47543857225401290462264e13},
new double[]{0.999999999999985789145285,0.999999999883584678173065,1.16415321826934814453125e-10,-0.999999999999985789145283,1.654361225298671854090981e-24,4.479813389498184248146984e13,-4.479813389496183149273724e13},
new double[]{0.999999999999985789145285,1.0,7.888609052210118054117286e-31,-0.999999999999985789145285,1.121038771459869587658095e-44,4.479813390019703165670747e13,-4.479813390017702066797247e13},
new double[]{0.999999999999985789145285,1.0,0,-0.999999999999985789145285,0,4.479813390019703165670747e13,-4.479813390017702066797247e13},
new double[]{1.000000000000014210854715,-1.0,0,-0.999999999999985789145285,0,4.479813390015700967923748e13,-4.479813390017702066797247e13},
new double[]{1.000000000000014210854715,-1.0,7.888609052210118054117286e-31,-0.999999999999985789145285,1.121038771459853656738984e-44,4.479813390015700967923748e13,-4.479813390017702066797247e13},
new double[]{1.000000000000014210854715,-0.999999999883584678173065,1.16415321826934814453125e-10,-0.999999999999985789145283,1.654361225298648344203962e-24,4.479813389494182050400466e13,-4.479813389496183149273724e13},
new double[]{1.000000000000014210854715,-0.9990234375,0.0009765625,-0.999999999999985775253931,1.389135358279765759278835e-17,4.475438572252013822086793e13,-4.47543857225401290462264e13},
new double[]{1.000000000000014210854715,-0.5009765625,0.4990234375,-0.999999999999971633693512,1.415545177284254171462552e-14,2.244281512771559736360695e13,-2.24428151277254019557323e13},
new double[]{1.000000000000014210854715,-0.4990234375,0.5009765625,-0.999999999999971522670786,1.426647449882314658911494e-14,2.235531877244185358561658e13,-2.235531877245161871224017e13},
new double[]{1.000000000000014210854715,-9.31322574615478515625e-10,0.9999999990686774253845215,-0.999984741210940421989879,0.00001525878904536715540579687,41721.51341385972809279354,-41721.51340188181089979827},
new double[]{1.000000000000014210854715,0,1.0,0,0.999999999999985789145285,1.0,0},
new double[]{1.000000000000014210854715,9.31322574615478515625e-10,0.9999999990686774253845215,0.999984741210940421989879,0.00001525878904536715540579687,41721.51341385972809279354,41721.51340188181089979827},
new double[]{1.000000000000014210854715,0.4990234375,0.5009765625,0.999999999999971522670786,1.426647449882314658911494e-14,2.235531877244185358561658e13,2.235531877245161871224017e13},
new double[]{1.000000000000014210854715,0.5009765625,0.4990234375,0.999999999999971633693512,1.415545177284254171462552e-14,2.244281512771559736360695e13,2.24428151277254019557323e13},
new double[]{1.000000000000014210854715,0.9990234375,0.0009765625,0.999999999999985775253931,1.389135358279765759278835e-17,4.475438572252013822086793e13,4.47543857225401290462264e13},
new double[]{1.000000000000014210854715,0.999999999883584678173065,1.16415321826934814453125e-10,0.999999999999985789145283,1.654361225298648344203962e-24,4.479813389494182050400466e13,4.479813389496183149273724e13},
new double[]{1.000000000000014210854715,1.0,7.888609052210118054117286e-31,0.999999999999985789145285,1.121038771459853656738984e-44,4.479813390015700967923748e13,4.479813390017702066797247e13},
new double[]{1.000000000000014210854715,1.0,0,0.999999999999985789145285,0,4.479813390015700967923748e13,4.479813390017702066797247e13},
new double[]{1.0009765625,-1.0,0,-0.9990234375,0,647.7906991800191676449892,-651.8981355773937866181086},
new double[]{1.0009765625,-1.0,7.888609052210118054117286e-31,-0.9990234375,7.703707692487736782886596e-34,647.7906991800191676449892,-651.8981355773937866181086},
new double[]{1.0009765625,-0.999999999883584678173065,1.16415321826934814453125e-10,-0.9990234374998863133406092,1.136866593908259125913401e-13,647.7906991046801556307789,-651.8981355015028553664875},
new double[]{1.0009765625,-0.9990234375,0.0009765625,-0.9990224828949503524122506,9.54605049647587749443315e-7,647.158709440692072714048,-651.2615163043689879983644},
new double[]{1.0009765625,-0.5009765625,0.4990234375,-0.9980506868243005669089475,0.0009727506756994330910524909,324.7480120501059979884766,-326.5856870617216919287986},
new double[]{1.0009765625,-0.4990234375,0.5009765625,-0.9980430574664923411693048,0.0009803800335076588306952321,323.4831825966909490536702,-325.3124485156720946893101},
new double[]{1.0009765625,-9.31322574615478515625e-10,0.9999999990686774253845215,-3.865093390253187356978073e-7,0.9990230509906609746812643,1.000000000000184122063577,-6.07127450012968654388663e-7},
new double[]{1.0009765625,0,1.0,0,0.9990234375,1.0,0},
new double[]{1.0009765625,9.31322574615478515625e-10,0.9999999990686774253845215,3.865093390253187356978073e-7,0.9990230509906609746812643,1.000000000000184122063577,6.07127450012968654388663e-7},
new double[]{1.0009765625,0.4990234375,0.5009765625,0.9980430574664923411693048,0.0009803800335076588306952321,323.4831825966909490536702,325.3124485156720946893101},
new double[]{1.0009765625,0.5009765625,0.4990234375,0.9980506868243005669089475,0.0009727506756994330910524909,324.7480120501059979884766,326.5856870617216919287986},
new double[]{1.0009765625,0.9990234375,0.0009765625,0.9990224828949503524122506,9.54605049647587749443315e-7,647.158709440692072714048,651.2615163043689879983644},
new double[]{1.0009765625,0.999999999883584678173065,1.16415321826934814453125e-10,0.9990234374998863133406092,1.136866593908259125913401e-13,647.7906991046801556307789,651.8981355015028553664875},
new double[]{1.0009765625,1.0,7.888609052210118054117286e-31,0.9990234375,7.703707692487736782886596e-34,647.7906991800191676449892,651.8981355773937866181086},
new double[]{1.0009765625,1.0,0,0.9990234375,0,647.7906991800191676449892,651.8981355773937866181086},
new double[]{1.25,-1.0,0,-0.75,0,2.156394778388108482533962,-2.414213562373095048801689},
new double[]{1.25,-1.0,7.888609052210118054117286e-31,-0.75,1.775560860372353376714565e-31,2.156394778388108482533962,-2.414213562373095048801689},
new double[]{1.25,-0.999999999883584678173065,1.16415321826934814453125e-10,-0.7499999999737973465745289,2.620265342547114485205664e-11,2.156394778216689428771426,-2.414213562092043599979074},
new double[]{1.25,-0.9990234375,0.0009765625,-0.7497800128507249415104925,0.0002199871492750584895075018,2.154956794168735461856732,-2.411855931941090073168093},
new double[]{1.25,-0.5009765625,0.4990234375,-0.5601737810520340754074506,0.1898262189479659245925494,1.434075286374479926452832,-1.20946441161855250003444},
new double[]{1.25,-0.4990234375,0.5009765625,-0.5589520875437814456372665,0.1910479124562185543627335,1.431420150405464919467672,-1.204749150754542548767249},
new double[]{1.25,-9.31322574615478515625e-10,0.9999999990686774253845215,-1.431383274984254883640274e-9,0.7499999985686167250157451,1.000000000000000002022142,-2.24841159058091700896778e-9},
new double[]{1.25,0,1.0,0,0.75,1.0,0},
new double[]{1.25,9.31322574615478515625e-10,0.9999999990686774253845215,1.431383274984254883640274e-9,0.7499999985686167250157451,1.000000000000000002022142,2.24841159058091700896778e-9},
new double[]{1.25,0.4990234375,0.5009765625,0.5589520875437814456372665,0.1910479124562185543627335,1.431420150405464919467672,1.204749150754542548767249},
new double[]{1.25,0.5009765625,0.4990234375,0.5601737810520340754074506,0.1898262189479659245925494,1.434075286374479926452832,1.20946441161855250003444},
new double[]{1.25,0.9990234375,0.0009765625,0.7497800128507249415104925,0.0002199871492750584895075018,2.154956794168735461856732,2.411855931941090073168093},
new double[]{1.25,0.999999999883584678173065,1.16415321826934814453125e-10,0.7499999999737973465745289,2.620265342547114485205664e-11,2.156394778216689428771426,2.414213562092043599979074},
new double[]{1.25,1.0,7.888609052210118054117286e-31,0.75,1.775560860372353376714565e-31,2.156394778388108482533962,2.414213562373095048801689},
new double[]{1.25,1.0,0,0.75,0,2.156394778388108482533962,2.414213562373095048801689},
new double[]{1.9990234375,-1.0,0,-0.0009765625,0,1.000000588562052044261124,-0.001533981991088666528492721},
new double[]{1.9990234375,-1.0,7.888609052210118054117286e-31,-0.0009765625,7.703707692487736782886596e-34,1.000000588562052044261124,-0.001533981991088666528492721},
new double[]{1.9990234375,-0.999999999883584678173065,1.16415321826934814453125e-10,-0.0009765624998863133406224089,1.136866593775911058367419e-13,1.000000588562051907225963,-0.001533981990910087521323411},
new double[]{1.9990234375,-0.9990234375,0.0009765625,-0.0009756088271774610906049252,9.536728225389093950747819e-7,1.000000587413079094598226,-0.00153248396180049400258599},
new double[]{1.9990234375,-0.5009765625,0.4990234375,-0.000489235211745778997667403,0.000487327288254221002332597,1.000000147715939552891955,-0.0007684890248325057901530916},
new double[]{1.9990234375,-0.4990234375,0.5009765625,-0.0004873278627389537918389312,0.0004892346372610462081610688,1.000000146566403787895913,-0.0007654929662561607383396292},
new double[]{1.9990234375,-9.31322574615478515625e-10,0.9999999990686774253845215,-9.09495415150035245056378e-13,0.0009765624990905045848499648,1.000000000000000000000001,-1.42863205735447493241422e-12},
new double[]{1.9990234375,0,1.0,0,0.0009765625,1.0,0},
new double[]{1.9990234375,9.31322574615478515625e-10,0.9999999990686774253845215,9.09495415150035245056378e-13,0.0009765624990905045848499648,1.000000000000000000000001,1.42863205735447493241422e-12},
new double[]{1.9990234375,0.4990234375,0.5009765625,0.0004873278627389537918389312,0.0004892346372610462081610688,1.000000146566403787895913,0.0007654929662561607383396292},
new double[]{1.9990234375,0.5009765625,0.4990234375,0.000489235211745778997667403,0.000487327288254221002332597,1.000000147715939552891955,0.0007684890248325057901530916},
new double[]{1.9990234375,0.9990234375,0.0009765625,0.0009756088271774610906049252,9.536728225389093950747819e-7,1.000000587413079094598226,0.00153248396180049400258599},
new double[]{1.9990234375,0.999999999883584678173065,1.16415321826934814453125e-10,0.0009765624998863133406224089,1.136866593775911058367419e-13,1.000000588562051907225963,0.001533981990910087521323411},
new double[]{1.9990234375,1.0,7.888609052210118054117286e-31,0.0009765625,7.703707692487736782886596e-34,1.000000588562052044261124,0.001533981991088666528492721},
new double[]{1.9990234375,1.0,0,0.0009765625,0,1.000000588562052044261124,0.001533981991088666528492721},
new double[]{1.999999999999985789145285,-1.0,0,-1.421085471520200371742249e-14,0,1.0,-2.232235838725524415666714e-14},
new double[]{1.999999999999985789145285,-1.0,7.888609052210118054117286e-31,-1.421085471520200371742249e-14,1.121038771459853656738984e-44,1.0,-2.232235838725524415666714e-14},
new double[]{1.999999999999985789145285,-0.999999999883584678173065,1.16415321826934814453125e-10,-1.421085471354764249231643e-14,1.654361225106055349742817e-24,1.0,-2.232235838465657962107864e-14},
new double[]{1.999999999999985789145285,-0.9990234375,0.0009765625,-1.419697692739418926066719e-14,1.38777878078144567552954e-17,1.0,-2.23005592091426902072954e-14},
new double[]{1.999999999999985789145285,-0.5009765625,0.4990234375,-7.119305145408816315466538e-15,7.091549569793187401955947e-15,1.0,-1.118297837174017602770532e-14},
new double[]{1.999999999999985789145285,-0.4990234375,0.5009765625,-7.091549569793187401955947e-15,7.119305145408816315466538e-15,1.0,-1.113938001551506812896183e-14},
new double[]{1.999999999999985789145285,-9.31322574615478515625e-10,0.9999999990686774253845215,-1.323488980084844279794254e-23,1.421085470196711391657404e-14,1.0,-2.078931628470797478842283e-23},
new double[]{1.999999999999985789145285,0,1.0,0,1.421085471520200371742249e-14,1.0,0},
new double[]{1.999999999999985789145285,9.31322574615478515625e-10,0.9999999990686774253845215,1.323488980084844279794254e-23,1.421085470196711391657404e-14,1.0,2.078931628470797478842283e-23},
new double[]{1.999999999999985789145285,0.4990234375,0.5009765625,7.091549569793187401955947e-15,7.119305145408816315466538e-15,1.0,1.113938001551506812896183e-14},
new double[]{1.999999999999985789145285,0.5009765625,0.4990234375,7.119305145408816315466538e-15,7.091549569793187401955947e-15,1.0,1.118297837174017602770532e-14},
new double[]{1.999999999999985789145285,0.9990234375,0.0009765625,1.419697692739418926066719e-14,1.38777878078144567552954e-17,1.0,2.23005592091426902072954e-14},
new double[]{1.999999999999985789145285,0.999999999883584678173065,1.16415321826934814453125e-10,1.421085471354764249231643e-14,1.654361225106055349742817e-24,1.0,2.232235838465657962107864e-14},
new double[]{1.999999999999985789145285,1.0,7.888609052210118054117286e-31,1.421085471520200371742249e-14,1.121038771459853656738984e-44,1.0,2.232235838725524415666714e-14},
new double[]{1.999999999999985789145285,1.0,0,1.421085471520200371742249e-14,0,1.0,2.232235838725524415666714e-14},
new double[]{2.0,-1.0,0,0,0,1.0,0},
new double[]{2.0,-1.0,7.888609052210118054117286e-31,0,0,1.0,0},
new double[]{2.0,-0.999999999883584678173065,1.16415321826934814453125e-10,0,0,1.0,0},
new double[]{2.0,-0.9990234375,0.0009765625,0,0,1.0,0},
new double[]{2.0,-0.5009765625,0.4990234375,0,0,1.0,0},
new double[]{2.0,-0.4990234375,0.5009765625,0,0,1.0,0},
new double[]{2.0,-9.31322574615478515625e-10,0.9999999990686774253845215,0,0,1.0,0},
new double[]{2.0,0,1.0,0,0,1.0,0},
new double[]{2.0,9.31322574615478515625e-10,0.9999999990686774253845215,0,0,1.0,0},
new double[]{2.0,0.4990234375,0.5009765625,0,0,1.0,0},
new double[]{2.0,0.5009765625,0.4990234375,0,0,1.0,0},
new double[]{2.0,0.9990234375,0.0009765625,0,0,1.0,0},
new double[]{2.0,0.999999999883584678173065,1.16415321826934814453125e-10,0,0,1.0,0},
new double[]{2.0,1.0,7.888609052210118054117286e-31,0,0,1.0,0},
new double[]{2.0,1.0,0,0,0,1.0,0}
      };

    #endregion Test data

    #region Forward test

    private static double Tolerance(double expected, double actual)
    {
      if (expected == 0)
        return Math.Abs(actual);
      else
        return Math.Abs((actual - expected) / expected) / DoubleConstants.DBL_EPSILON;
    }

    [Fact]
    public void TestS0ToFellerConversion()
    {
      //double tol = DoubleConstants.DBL_EPSILON;

      double maxtolgamma = 0, maxtolaga = 0, maxtolsigmaf = 0, maxtolmuf = 0;
      int maxtolgammai = -1, maxtolagai = -1, maxtolsigmafi = -1, maxtolmufi = -1;
      double t;

      for (int i = 0; i < _dataS0ToFeller.Length; i++)
      {
        double alpha = _dataS0ToFeller[i][0];
        double beta = _dataS0ToFeller[i][1];
        double abe = _dataS0ToFeller[i][2];
        double expgamma = _dataS0ToFeller[i][3];
        double expaga = _dataS0ToFeller[i][4];
        double expsigmaf = _dataS0ToFeller[i][5];
        double expmuf = _dataS0ToFeller[i][6];
        StableDistributionBase.ParameterConversionS0ToFeller(alpha, beta, abe, 1, 0, out var gamma, out var aga, out var sigmaf, out var muf);

        t = Tolerance(expgamma, gamma);
        if (t > maxtolgamma)
        {
          maxtolgamma = t;
          maxtolgammai = i;
        }

        t = Tolerance(expaga, aga);
        if (t > maxtolaga)
        {
          maxtolaga = t;
          maxtolagai = i;
        }

        t = Tolerance(expsigmaf, sigmaf);
        if (t > maxtolsigmaf)
        {
          maxtolsigmaf = t;
          maxtolsigmafi = i;
        }

        t = Tolerance(expmuf, muf);
        if (t > maxtolmuf)
        {
          maxtolmuf = t;
          maxtolmufi = i;
        }
      }

      /*
			string msg = string.Format("Gamma, i={0}, alpha={1}, beta={2}, abe={3}, expected={4}, actual={5}", maxtolgammai, alpha, beta, abe, expgamma, gamma);
			Assert.Equal(expgamma, gamma, expgamma * tol * 10, msg);

			msg = string.Format("Aga, i={0}, alpha={1}, beta={2}, abe={3}, expected={4}, actual={5}", i, alpha, beta, abe, expaga, aga);
			Assert.Equal(expaga, aga, expaga * tol * 4000, msg);

			msg = string.Format("Sigmaf, i={0}, alpha={1}, beta={2}, abe={3}, expected={4}, actual={5}", i, alpha, beta, abe, expsigmaf, sigmaf);
			Assert.Equal(expsigmaf, sigmaf, expsigmaf * tol * 4, msg);

			msg = string.Format("Muf, i={0}, alpha={1}, beta={2}, abe={3}, expected={4}, actual={5}", i, alpha, beta, abe, expmuf, muf);
			Assert.Equal(expmuf, muf, expmuf * tol * 4, msg);
			*/

      string msg;

      msg = string.Format("Gamma, i={0}", maxtolgammai);
      AssertEx.Less(1, maxtolgamma / DoubleConstants.DBL_EPSILON, msg);
      msg = string.Format("Aga, i={0}", maxtolagai);
      AssertEx.Less(1, maxtolaga / DoubleConstants.DBL_EPSILON, msg);
      msg = string.Format("Sigmaf, i={0}", maxtolsigmafi);
      AssertEx.Less(1, maxtolsigmaf / DoubleConstants.DBL_EPSILON, msg);
      msg = string.Format("Muf, i={0}", maxtolmufi);
      AssertEx.Less(1, maxtolmuf / DoubleConstants.DBL_EPSILON, msg);
    }

    [Fact]
    public void TestS0Aeq1()
    {
      double alpha = 1;
      double abe = 0;
      double beta = 1 + abe;
      double x = 10;
      double precision = Math.Sqrt(DoubleConstants.DBL_EPSILON);
      object temp = null;

      var dec = new StableDistributionS0.Aeq1D(x, beta, abe);
      double ycore = dec.PDFCore(1.0 / 3.0);

      double y1 = StableDistributionS0.PDF(x, alpha, beta, abe, ref temp, precision);
      double y2 = StableDistributionS0.PDFMethodAlphaOne(x, beta, abe, ref temp, precision);

      AssertEx.Equal(y1, y2, y1 * precision);
    }

    [Fact]
    public void TestFellerToS0Conversion()
    {
      //double tol = DoubleConstants.DBL_EPSILON;

      double maxtolbeta = 0, maxtolabe = 0, maxtolsigma0 = 0, maxtolmu0 = 0;
      int maxtolbetai = -1, maxtolabei = -1, maxtolsigma0i = -1, maxtolmu0i = -1;
      double t;

      for (int i = 0; i < _dataS0ToFeller.Length; i++)
      {
        double alpha = _dataS0ToFeller[i][0];
        double expbeta = _dataS0ToFeller[i][1];
        double expabe = _dataS0ToFeller[i][2];
        double gamma = _dataS0ToFeller[i][3];
        double aga = _dataS0ToFeller[i][4];
        double sigmaf = _dataS0ToFeller[i][5];
        double muf = _dataS0ToFeller[i][6];

        if (alpha == 2)
          continue;

        double expsigma0 = 1, expmu0 = 0;
        StableDistributionBase.ParameterConversionFellerToS0(alpha, gamma, aga, sigmaf, muf, out var beta, out var abe, out var sigma0, out var mu0);

        t = Tolerance(expbeta, beta);
        if (t > maxtolbeta)
        {
          maxtolbeta = t;
          maxtolbetai = i;
        }

        t = Tolerance(expabe, abe);
        if (t > maxtolabe)
        {
          maxtolabe = t;
          maxtolabei = i;
        }

        t = Tolerance(expsigma0, sigma0);
        if (t > maxtolsigma0)
        {
          maxtolsigma0 = t;
          maxtolsigma0i = i;
        }

        t = Tolerance(expmu0, mu0 / muf);
        if (t > maxtolmu0)
        {
          maxtolmu0 = t;
          maxtolmu0i = i;
        }
      }

      string msg;

      msg = string.Format("beta, i={0}", maxtolbetai);
      AssertEx.Less(1, maxtolbeta / DoubleConstants.DBL_EPSILON, msg);
      msg = string.Format("abe, i={0}", maxtolabei);
      AssertEx.Less(1, maxtolabe / DoubleConstants.DBL_EPSILON, msg);
      msg = string.Format("Sigma0, i={0}", maxtolsigma0i);
      AssertEx.Less(1, maxtolsigma0 / DoubleConstants.DBL_EPSILON, msg);
      msg = string.Format("Mu0, i={0}", maxtolmu0i);
      AssertEx.Less(1, maxtolmu0 / DoubleConstants.DBL_EPSILON, msg);
    }

    #endregion Forward test

    #endregion Test S0 to Feller conversion

    #region Text OneMinusExp

    private static readonly double[][] _ONETestData =
      {
new double[]{-50.0,0.999999999999999999999807},
new double[]{-20.0,0.9999999979388463775614422},
new double[]{-10.0,0.9999546000702375151484644},
new double[]{-2.0,0.8646647167633873081060005},
new double[]{-1.0625,0.6544092474230254841093413},
new double[]{-0.9375,0.6083943733232010067731923},
new double[]{-0.5009765625,0.3940613662625090234372491},
new double[]{-0.4990234375,0.3928767358794658787743839},
new double[]{-0.0625,0.06058693718652421388028918},
new double[]{-0.015625,0.01550356299459159401301117},
new double[]{-0.0009765625,0.0009760858180243377652882104},
new double[]{-9.5367431640625e-7,9.536738616590436737910799e-7},
new double[]{-9.31322574615478515625e-10,9.313225741817976467654305e-10},
new double[]{-9.094947017729282379150391e-13,9.094947017725146476087627e-13},
new double[]{-8.881784197001252323389053e-16,8.881784197001248379084527e-16},
new double[]{0,0},
new double[]{8.881784197001252323389053e-16,-8.881784197001256267693579e-16},
new double[]{9.094947017729282379150391e-13,-9.094947017733418282213157e-13},
new double[]{9.31322574615478515625e-10,-9.31322575049159384753834e-10},
new double[]{0.0009765625,-0.0009770394924165352428452926},
new double[]{0.015625,-0.01574770858668574745853507},
new double[]{0.0625,-0.06449445891785942956339059},
new double[]{0.4990234375,-0.6471119772499226866424172},
new double[]{0.5009765625,-0.650332136493589345052458},
new double[]{0.9375,-1.553589458062926873446965},
new double[]{1.0625,-1.893595944171760941474281},
new double[]{2.0,-6.389056098930650227230427},
new double[]{10.0,-22025.4657948067165169579},
new double[]{20.0,-4.851651944097902779691068e8},
new double[]{50.0,-5.184705528587072464086453e21}
      };

    [Fact]
    public void TestOneMinusExp()
    {
      //double tol = DoubleConstants.DBL_EPSILON;

      double maxtol = 0;
      int maxtoli = -1;
      double t;

      for (int i = 0; i < _ONETestData.Length; i++)
      {
        double x = _ONETestData[i][0];
        double expFunc = _ONETestData[i][1];

        double func = StableDistributionBase.OneMinusExp(x);

        t = Tolerance(expFunc, func);
        if (t > maxtol)
        {
          maxtol = t;
          maxtoli = i;
        }
      }

      string msg;

      msg = string.Format("i={0}", maxtoli);
      AssertEx.Less(maxtol, 1, msg);
    }

    #endregion Text OneMinusExp
  }
}
