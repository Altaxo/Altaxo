#region Copyright
/////////////////////////////////////////////////////////////////////////////
//    Altaxo:  a data processing and data plotting program
//    Copyright (C) 2002-2007 Dr. Dirk Lellinger
//
//    This program is free software; you can redistribute it and/or modify
//    it under the terms of the GNU General Public License as published by
//    the Free Software Foundation; either version 2 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU General Public License for more details.
//
//    You should have received a copy of the GNU General Public License
//    along with this program; if not, write to the Free Software
//    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
//
/////////////////////////////////////////////////////////////////////////////
#endregion

using System;
using Altaxo.Calc;
using Altaxo.Calc.Probability;
using NUnit.Framework;


namespace AltaxoTest.Calc.Probability
{
  [TestFixture]
  public class TestStableDistribution
  {
    #region PDF test data
    /* Mathematica code to create the table following (use the stable packet from the mathematica library web site)
    
     << StableDistribution`SMath`
    
    flarguments = Flatten[ Table[
      {
        {1/2, 7/8, 1, 9/8, 3/2, 2}[[i]],
        {-1, -1/2, 0, 1/2, 1}[[j]],
        {-10, -4, -1/2, 0, 1/2, 4, 10}[[k]]
        }, {i, 1, 6}, {j, 1, 5}, {k, 1, 7}], 2]
    
    For[i = 1, i ? Length[flarguments], i += 1,
  alpha = flarguments[[i]][[1]];
  beta = flarguments[[i]][[2]];
  xx = flarguments[[i]][[3]];
  yy = N[SPDF[xx, {
   alpha, beta}, 0, GaussPoints -> 30, MaxRecursion -> 10, WorkingPrecision ->
     64], 18];
  If[NumericQ[yy],
    Print[alpha, " ", beta, " ", xx, " ", yy];
    strm = OpenAppend["C:\\TEMP\\output.txt", CharacterEncoding -> "
          ASCII", FormatType -> OutputForm];
    Write[strm, 
        "new double[]{", FortranForm[alpha], ",", FortranForm[beta], ",", 
  FortranForm[xx], ",", FortranForm[yy], "},"];
     Close[strm]
    ];
  ]
    */

    double[][] _pdfTestS0 = new double[][]{
new double[]{0.5,-1,-10,0.010449135953590293},
new double[]{0.5,-1,-4,0.032286845174307237},
new double[]{0.5,-1,-0.5,0.155599554757086521},
new double[]{0.5,-1,0,0.24197072451914335},
new double[]{0.5,-1,0.5,0.415107497420594703},
new double[]{0.5,-1,4,0.0e-64},
new double[]{0.5,-1,10,0.0e-65},
new double[]{0.5,-0.5,-10,0.0075881394617841676},
new double[]{0.5,-0.5,-4,0.0245663001715312596},
new double[]{0.5,-0.5,-0.5,0.159240297087939965},
new double[]{0.5,-0.5,0,0.311533168758699187},
new double[]{0.5,-0.5,0.5,0.305577490736439045},
new double[]{0.5,-0.5,4,0.00825895136238823702},
new double[]{0.5,-0.5,10,0.00233372277449640175},
new double[]{0.5,0,-10,0.00487225538372111616},
new double[]{0.5,0,-4,0.0165057384221262866},
new double[]{0.5,0,-0.5,0.170762401725206224},
new double[]{0.5,0,0,0.636619772367581343},
new double[]{0.5,0,0.5,0.170762401725206224},
new double[]{0.5,0,4,0.0165057384221262866},
new double[]{0.5,0,10,0.00487225538372111616},
new double[]{0.5,0.5,-10,0.00233372277449640175},
new double[]{0.5,0.5,-4,0.00825895136238823702},
new double[]{0.5,0.5,-0.5,0.305577490736439045},
new double[]{0.5,0.5,0,0.311533168758699187},
new double[]{0.5,0.5,0.5,0.159240297087939965},
new double[]{0.5,0.5,4,0.0245663001715312596},
new double[]{0.5,0.5,10,0.0075881394617841676},
new double[]{0.5,1,-10,0.0e-65},
new double[]{0.5,1,-4,0.0e-64},
new double[]{0.5,1,-0.5,0.415107497420594703},
new double[]{0.5,1,0,0.24197072451914335},
new double[]{0.5,1,0.5,0.155599554757086521},
new double[]{0.5,1,4,0.032286845174307237},
new double[]{0.5,1,10,0.010449135953590293},
new double[]{0.875,-1,-10,0.00859319050259130464},
new double[]{0.875,-1,-4,0.0387326900318963064},
new double[]{0.875,-1,-0.5,0.200970622845054967},
new double[]{0.875,-1,0,0.257507821327408685},
new double[]{0.875,-1,0.5,0.293063509101005356},
new double[]{0.875,-1,4,1.704436247487977e-8409},
new double[]{0.875,-1,10,0.0e-64},
new double[]{0.875,-0.5,-10,0.00604336008614330531},
new double[]{0.875,-0.5,-4,0.028960271499303109},
new double[]{0.875,-0.5,-0.5,0.21336200882206995},
new double[]{0.875,-0.5,0,0.296170740739014809},
new double[]{0.875,-0.5,0.5,0.309836819666517268},
new double[]{0.875,-0.5,4,0.00933860640361163996},
new double[]{0.875,-0.5,10,0.00174459320858150607},
new double[]{0.875,0,-10,0.00375882644917199933},
new double[]{0.875,0,-4,0.0190875070493639558},
new double[]{0.875,0,-0.5,0.245963617139043073},
new double[]{0.875,0,0,0.34029602763013595},
new double[]{0.875,0,0.5,0.245963617139043073},
new double[]{0.875,0,4,0.0190875070493639558},
new double[]{0.875,0,10,0.00375882644917199933},
new double[]{0.875,0.5,-10,0.00174459320858150607},
new double[]{0.875,0.5,-4,0.00933860640361163996},
new double[]{0.875,0.5,-0.5,0.309836819666517268},
new double[]{0.875,0.5,0,0.296170740739014809},
new double[]{0.875,0.5,0.5,0.21336200882206995},
new double[]{0.875,0.5,4,0.028960271499303109},
new double[]{0.875,0.5,10,0.00604336008614330531},
new double[]{0.875,1,-10,0.0e-64},
new double[]{0.875,1,-4,1.704436247487977e-8409},
new double[]{0.875,1,-0.5,0.293063509101005356},
new double[]{0.875,1,0,0.257507821327408685},
new double[]{0.875,1,0.5,0.200970622845054967},
new double[]{0.875,1,4,0.0387326900318963064},
new double[]{0.875,1,10,0.00859319050259130464},
new double[]{1,-1,-4,0.038364382040947077},
new double[]{1,-1,-0.5,0.212318467675064265},
new double[]{1,-1,0,0.262240126375351657},
new double[]{1,-1,0.5,0.282979296472337068},
new double[]{1,-1,4,2.40268429420551753e-54},
new double[]{1,-1,10,6.14207193080535992e-674917},
new double[]{1,-0.5,-4,0.0285478736642324839},
new double[]{1,-0.5,-0.5,0.225442218599286543},
new double[]{1,-0.5,0,0.292520470566076713},
new double[]{1,-0.5,0.5,0.292609581480539141},
new double[]{1,-0.5,4,0.00910970616999196668},
new double[]{1,-0.5,10,0.00145461336969288015},
new double[]{1,0,-10,0.00315158303152267992},
new double[]{1,0,-4,0.0187241109519876866},
new double[]{1,0,-0.5,0.254647908947032537},
new double[]{1,0,0,0.318309886183790672},
new double[]{1,0,0.5,0.254647908947032537},
new double[]{1,0,4,0.0187241109519876866},
new double[]{1,0,10,0.00315158303152267992},
new double[]{1,0.5,-10,0.00145461336969288015},
new double[]{1,0.5,-4,0.00910970616999196668},
new double[]{1,0.5,-0.5,0.292609581480539141},
new double[]{1,0.5,0,0.292520470566076713},
new double[]{1,0.5,0.5,0.225442218599286543},
new double[]{1,0.5,4,0.0285478736642324839},
new double[]{1,1,-10,6.14207193080535992e-674917},
new double[]{1,1,-4,2.40268429420551753e-54},
new double[]{1,1,-0.5,0.282979296472337068},
new double[]{1,1,0,0.262240126375351657},
new double[]{1,1,0.5,0.212318467675064265},
new double[]{1,1,4,0.038364382040947077},
new double[]{1.125,-1,-10,0.00594795968980815246},
new double[]{1.125,-1,-0.5,0.222394217418834845},
new double[]{1.125,-1,0,0.266587031169983183},
new double[]{1.125,-1,0.5,0.276735064777311314},
new double[]{1.125,-1,4,4.37746558963013643e-16},
new double[]{1.125,-1,10,8.09021799038346448e-1542},
new double[]{1.125,-0.5,-10,0.00413713556384187849},
new double[]{1.125,-0.5,-4,0.0274348398312656861},
new double[]{1.125,-0.5,-0.5,0.235222239213963157},
new double[]{1.125,-0.5,0,0.289563250722015948},
new double[]{1.125,-0.5,0.5,0.281914028906399689},
new double[]{1.125,-0.5,4,0.0086915303222026684},
new double[]{1.125,-0.5,10,0.00117258370220477812},
new double[]{1.125,0,-10,0.00254800947188242432},
new double[]{1.125,0,-4,0.0179324210975094243},
new double[]{1.125,0,-0.5,0.258708942735625721},
new double[]{1.125,0,0,0.304943370229598302},
new double[]{1.125,0,0.5,0.258708942735625721},
new double[]{1.125,0,4,0.0179324210975094243},
new double[]{1.125,0,10,0.00254800947188242432},
new double[]{1.125,0.5,-10,0.00117258370220477812},
new double[]{1.125,0.5,-4,0.0086915303222026684},
new double[]{1.125,0.5,-0.5,0.281914028906399689},
new double[]{1.125,0.5,0,0.289563250722015948},
new double[]{1.125,0.5,0.5,0.235222239213963157},
new double[]{1.125,0.5,4,0.0274348398312656861},
new double[]{1.125,0.5,10,0.00413713556384187849},
new double[]{1.125,1,-10,8.09021799038346448e-1542},
new double[]{1.125,1,-4,4.37746558963013643e-16},
new double[]{1.125,1,-0.5,0.276735064777311314},
new double[]{1.125,1,0,0.266587031169983183},
new double[]{1.125,1,0.5,0.222394217418834845},
new double[]{1.125,1,10,0.00594795968980815246},
new double[]{1.5,-1,-10,0.00241981613066309674},
new double[]{1.5,-1,-4,0.0279973178629260511},
new double[]{1.5,-1,-0.5,0.246515640532722451},
new double[]{1.5,-1,0,0.276859868856746781},
new double[]{1.5,-1,0.5,0.268368758744508534},
new double[]{1.5,-1,4,0.0000567935873875498302},
new double[]{1.5,-1,10,1.34096664947790338e-43},
new double[]{1.5,-0.5,-10,0.00169010120711345954},
new double[]{1.5,-0.5,-4,0.0207819141087301014},
new double[]{1.5,-0.5,-0.5,0.254112686602229452},
new double[]{1.5,-0.5,0,0.28428380098857753},
new double[]{1.5,-0.5,0.5,0.268046496554461533},
new double[]{1.5,-0.5,4,0.00673588721821525944},
new double[]{1.5,-0.5,10,0.000486574121093548287},
new double[]{1.5,0,-10,0.00104777602492944046},
new double[]{1.5,0,-4,0.0136729417918039395},
new double[]{1.5,0,-0.5,0.262296840354090036},
new double[]{1.5,0,0,0.287352751452164445},
new double[]{1.5,0,0.5,0.262296840354090036},
new double[]{1.5,0,4,0.0136729417918039395},
new double[]{1.5,0,10,0.00104777602492944046},
new double[]{1.5,0.5,-10,0.000486574121093548287},
new double[]{1.5,0.5,-4,0.00673588721821525944},
new double[]{1.5,0.5,-0.5,0.268046496554461533},
new double[]{1.5,0.5,0,0.28428380098857753},
new double[]{1.5,0.5,0.5,0.254112686602229452},
new double[]{1.5,0.5,4,0.0207819141087301014},
new double[]{1.5,0.5,10,0.00169010120711345954},
new double[]{1.5,1,-10,1.34096664947790338e-43},
new double[]{1.5,1,-4,0.0000567935873875498302},
new double[]{1.5,1,-0.5,0.268368758744508534},
new double[]{1.5,1,0,0.276859868856746781},
new double[]{1.5,1,0.5,0.246515640532722451},
new double[]{1.5,1,4,0.0279973178629260511},
new double[]{1.5,1,10,0.00241981613066309674},
new double[]{2,-1,-10,3.91771663275433383e-12},
new double[]{2,-1,-4,0.00516674633852301346},
new double[]{2,-1,-0.5,0.265003532344028561},
new double[]{2,-1,0,0.282094791773878143},
new double[]{2,-1,0.5,0.265003532344028561},
new double[]{2,-1,4,0.00516674633852301346},
new double[]{2,-1,10,3.91771663275433383e-12},
new double[]{2,-0.5,-10,3.91771663275433383e-12},
new double[]{2,-0.5,-4,0.00516674633852301346},
new double[]{2,-0.5,-0.5,0.265003532344028561},
new double[]{2,-0.5,0,0.282094791773878143},
new double[]{2,-0.5,0.5,0.265003532344028561},
new double[]{2,-0.5,4,0.00516674633852301346},
new double[]{2,-0.5,10,3.91771663275433383e-12},
new double[]{2,0,-10,3.91771663275433383e-12},
new double[]{2,0,-4,0.00516674633852301346},
new double[]{2,0,-0.5,0.265003532344028561},
new double[]{2,0,0,0.282094791773878143},
new double[]{2,0,0.5,0.265003532344028561},
new double[]{2,0,4,0.00516674633852301346},
new double[]{2,0,10,3.91771663275433383e-12},
new double[]{2,0.5,-10,3.91771663275433383e-12},
new double[]{2,0.5,-4,0.00516674633852301346},
new double[]{2,0.5,-0.5,0.265003532344028561},
new double[]{2,0.5,0,0.282094791773878143},
new double[]{2,0.5,0.5,0.265003532344028561},
new double[]{2,0.5,4,0.00516674633852301346},
new double[]{2,0.5,10,3.91771663275433383e-12},
new double[]{2,1,-10,3.91771663275433383e-12},
new double[]{2,1,-4,0.00516674633852301346},
new double[]{2,1,-0.5,0.265003532344028561},
new double[]{2,1,0,0.282094791773878143},
new double[]{2,1,0.5,0.265003532344028561},
new double[]{2,1,4,0.00516674633852301346},
new double[]{2,1,10,3.91771663275433383e-12}
};
    #endregion

    [Test]
    public void PdfTest()
    {
      for (int i = 0; i < _pdfTestS0.Length; i++)
      {
        double alpha = _pdfTestS0[i][0];
        double beta = _pdfTestS0[i][1];
        double x = _pdfTestS0[i][2];
        double expectedy = _pdfTestS0[i][3];
        double y = StableDistributionS0.PDF(x, alpha, beta);
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i,alpha, beta, x, expectedy, y);
        Assert.AreEqual(expectedy, y, maxdelta, msg);
      }
    }

    [Test]
    public void PdfTestSpec()
    {
      int i = 140; 
      {
        double alpha = _pdfTestS0[i][0];
        double beta = _pdfTestS0[i][1];
        double x = _pdfTestS0[i][2];
        double expectedy = _pdfTestS0[i][3];
        double y = StableDistributionS0.PDF(x, alpha, beta);
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        Assert.AreEqual(expectedy, y, maxdelta, msg);
      }
    }

    #region Test S1

    /* The following Mathematica code was used to generate the table (Note here that sigma=1.7 and mu=3/7)
     * The output text must be further processed by replacing " with nothing and 0.e with 0.0e
     
     << "StableDistribution`SMath`"
     
     flarguments = Flatten[Table[{
        {3/16, 7/8, 1, 9/8, 17/10, 2}[[i]],
        {-1, -4^(-1), 0, 3/8, 1}[[j]],
        {-10, -4, -2^(-1), 0, 1/2, 4, 10}[[k]]},
      {i, 1, 6}, {j, 1, 5}, {k, 1, 7}], 2]
     
     For[i = 1, i <= Length[flarguments], i += 1, alpha = flarguments[[i]][[1]]; 
   beta = flarguments[[i]][[2]]; xx = flarguments[[i]][[3]]; 
   yy = N[SPDF[xx, {alpha, beta, 17/10, 3/7}, 1, GaussPoints -> 30, MaxRecursion -> 10, WorkingPrecision -> 64], 18]; 
   If[NumericQ[yy], Print[alpha, " ", beta, " ", xx, " ", yy]; 
     strm = OpenAppend["C:\\TEMP\\outputS1.txt", CharacterEncoding->"ASCII", FormatType ->CForm];
     Write[strm, "new double[]{", 
     alpha, ",", beta, ",", xx, ",", yy, "},"]; Close[strm]]; ]
     
   */

    double[][] _pdfTestS1 = new double[][]{
new double[]{0.1875,-1,-10,0.0062770180013548},
new double[]{0.1875,-1,-4,0.0155315416430183},
new double[]{0.1875,-1,-0.5,0.07665072},
new double[]{0.1875,-1,0.5,0.0e-9},
new double[]{0.1875,-1,4,0.0e-16},
new double[]{0.1875,-1,10,0.0e-16},
new double[]{0.1875,-0.25,-10,0.0038144443774004},
new double[]{0.1875,-0.25,-4,0.009424300650895},
new double[]{0.1875,-0.25,-0.5,0.046524289},
new double[]{0.1875,-0.25,0.5,0.303242238},
new double[]{0.1875,-0.25,4,0.0068937017412486},
new double[]{0.1875,-0.25,10,0.0024502977157998},
new double[]{0.1875,0,-10,0.0030180829221758},
new double[]{0.1875,0,-4,0.0074483868801408},
new double[]{0.1875,0,-0.5,0.036706661},
new double[]{0.1875,0,0.5,0.411882603},
new double[]{0.1875,0,4,0.0093178545126279},
new double[]{0.1875,-1,-10,0.00627701800135476598},
new double[]{0.1875,-1,-4,0.0155315416430182922},
new double[]{0.1875,-1,-0.5,0.0766507202895227784},
new double[]{0.1875,-1,0,0.163347276150841532},
new double[]{0.1875,-1,0.5,0.0e-63},
new double[]{0.1875,-1,4,0.0e-65},
new double[]{0.1875,-1,10,0.0e-66},
new double[]{0.1875,-0.25,-10,0.00381444437740038338},
new double[]{0.1875,-0.25,-4,0.0094243006508950103},
new double[]{0.1875,-0.25,-0.5,0.0465242891643534304},
new double[]{0.1875,-0.25,0,0.0994142691020737488},
new double[]{0.1875,-0.25,0.5,0.30324223808190638},
new double[]{0.1875,-0.25,4,0.00689370174124854798},
new double[]{0.1875,-0.25,10,0.00245029771579979697},
new double[]{0.1875,0,-10,0.00301808292217582277},
new double[]{0.1875,0,-4,0.00744838688014080708},
new double[]{0.1875,0,-0.5,0.0367066606914877921},
new double[]{0.1875,0,0,0.078397440755632289},
new double[]{0.1875,0,0.5,0.411882602691635537},
new double[]{0.1875,0,4,0.00931785451262787891},
new double[]{0.1875,0,10,0.00330647826582729957},
new double[]{0.1875,0.375,-10,0.00185249646154681824},
new double[]{0.1875,0.375,-4,0.0045615215291062226},
new double[]{0.1875,0.375,-0.5,0.0223850371640671452},
new double[]{0.1875,0.375,0,0.0477157864175327861},
new double[]{0.1875,0.375,0.5,0.576680019739515356},
new double[]{0.1875,0.375,4,0.0130469768240071486},
new double[]{0.1875,0.375,10,0.00462156207508126092},
new double[]{0.1875,1,-10,0.0e-66},
new double[]{0.1875,1,-4,0.0e-65},
new double[]{0.1875,1,-0.5,0.0e-65},
new double[]{0.1875,1,0,0.0e-64},
new double[]{0.1875,1,0.5,0.841175510154875941},
new double[]{0.1875,1,4,0.0194396549151400933},
new double[]{0.1875,1,10,0.00687884237110329151},
new double[]{0.875,-1,-10,0.0846016067676838151},
new double[]{0.875,-1,-4,1.20238663588553112e-12},
new double[]{0.875,-1,-0.5,6.51729227048908141e-700323},
new double[]{0.875,-1,0,5.6823974344173017e-156980181},
new double[]{0.875,-1,0.5,0.0e-62},
new double[]{0.875,-1,4,0.0e-64},
new double[]{0.875,-1,10,0.0e-64},
new double[]{0.875,-0.25,-10,0.0101565152578798568},
new double[]{0.875,-0.25,-4,0.0637482918033682898},
new double[]{0.875,-0.25,-0.5,0.127265650796516667},
new double[]{0.875,-0.25,0,0.0838251203833049271},
new double[]{0.875,-0.25,0.5,0.0572456218962755353},
new double[]{0.875,-0.25,4,0.011385943799519284},
new double[]{0.875,-0.25,10,0.00314401030005104195},
new double[]{0.875,0,-10,0.00532576438776965663},
new double[]{0.875,0,-4,0.0228252795141123461},
new double[]{0.875,0,-0.5,0.137741140023149456},
new double[]{0.875,0,0,0.181611241663272182},
new double[]{0.875,0,0.5,0.199595514084174659},
new double[]{0.875,0,4,0.0318678251584718415},
new double[]{0.875,0,10,0.00619868574036678325},
new double[]{0.875,0.375,-10,0.00195273986211850649},
new double[]{0.875,0.375,-4,0.00560006119572872875},
new double[]{0.875,0.375,-0.5,0.017192061678680327},
new double[]{0.875,0.375,0,0.021809129714919219},
new double[]{0.875,0.375,0.5,0.0286855325222567997},
new double[]{0.875,0.375,4,0.159654071188720201},
new double[]{0.875,0.375,10,0.0173024022690566394},
new double[]{0.875,1,-10,0.0e-64},
new double[]{0.875,1,-4,0.0e-64},
new double[]{0.875,1,-0.5,0.0e-63},
new double[]{0.875,1,0,0.0e-63},
new double[]{0.875,1,0.5,0},
new double[]{0.875,1,4,5.36564983092196331e-56},
new double[]{0.875,1,10,0.111777913037468706},
new double[]{1,-1,-10,0.0120552004436318654},
new double[]{1,-1,-4,0.049016381747578651},
new double[]{1,-1,-0.5,0.142687224367128198},
new double[]{1,-1,0,0.15833461078777093},
new double[]{1,-1,0.5,0.166711271814586233},
new double[]{1,-1,4,0.0000249340278025387455},
new double[]{1,-1,10,3.86941073315465093e-1198},
new double[]{1,-0.25,-4,0.0303893662273338555},
new double[]{1,-0.25,-0.5,0.143283945350819442},
new double[]{1,-0.25,0,0.171330882008686793},
new double[]{1,-0.25,0.5,0.185391461319831204},
new double[]{1,-0.25,4,0.0264578912420336237},
new double[]{1,-0.25,10,0.00403780127187195812},
new double[]{1,0,-10,0.00484684770420661735},
new double[]{1,0,-4,0.0240476809743334116},
new double[]{1,0,-0.5,0.1442141494567049},
new double[]{1,0,0,0.176052144738793991},
new double[]{1,0,0.5,0.186911134351542104},
new double[]{1,0,4,0.0345876175879648882},
new double[]{1,0,10,0.00572607356678920551},
new double[]{1,0.375,-10,0.00275750401049915479},
new double[]{1,0.375,-4,0.0146506351430351638},
new double[]{1,0.375,-0.5,0.147980273385360836},
new double[]{1,0.375,0,0.178437814055591272},
new double[]{1,0.375,0.5,0.181097525163139653},
new double[]{1,0.375,4,0.0461902037618226076},
new double[]{1,0.375,10,0.00858043138767135289},
new double[]{1,1,-10,9.25200655863175766e-2646},
new double[]{1,1,-4,8.04879458783656752e-11},
new double[]{1,1,-0.5,0.144309718196504826},
new double[]{1,1,0,0.164402760047357055},
new double[]{1,1,0.5,0.165442602392110853},
new double[]{1,1,4,0.0636383788143668392},
new double[]{1,1,10,0.0141597189307400697},
new double[]{1.125,-1,-10,0.00275805127246462398},
new double[]{1.125,-1,-4,0.00621457746355105584},
new double[]{1.125,-1,-0.5,0.011763229084054842},
new double[]{1.125,-1,0,0.0130697606552725499},
new double[]{1.125,-1,10,0.159427320043951073},
new double[]{1.125,-0.25,-10,0.00372755304258231479},
new double[]{1.125,-0.25,-4,0.0142929252359373756},
new double[]{1.125,-0.25,-0.5,0.0531267371403108003},
new double[]{1.125,-0.25,0,0.0670092065738594514},
new double[]{1.125,-0.25,4,0.123765166729720294},
new double[]{1.125,-0.25,10,0.00642270104670531278},
new double[]{1.125,0,-10,0.00427078668053826101},
new double[]{1.125,0,-4,0.025001744235344046},
new double[]{1.125,0,-0.5,0.14773450969998548},
new double[]{1.125,0,0,0.171712490226065321},
new double[]{1.125,0,0.5,0.179157641665684126},
new double[]{1.125,0,4,0.0371674516650404853},
new double[]{1.125,0,10,0.00512797692036771519},
new double[]{1.125,0.375,-10,0.00563642119196431157},
new double[]{1.125,0.375,-4,0.14268478987618342},
new double[]{1.125,0.375,-0.5,0.0782270219957517699},
new double[]{1.125,0.375,0,0.0627918896921382113},
new double[]{1.125,0.375,4,0.0148331285716525878},
new double[]{1.125,0.375,10,0.00403393592987142387},
new double[]{1.125,1,-10,0.11535526619901388},
new double[]{1.125,1,4,0.00716343552294562378},
new double[]{1.125,1,10,0.00304894224458085392},
new double[]{1.7,-1,-10,0.00235003908061798381},
new double[]{1.7,-1,-4,0.0248082240127128557},
new double[]{1.7,-1,-0.5,0.118709745930330614},
new double[]{1.7,-1,0,0.136809677869491556},
new double[]{1.7,-1,0.5,0.15205760706429258},
new double[]{1.7,-1,4,0.0778416960809115437},
new double[]{1.7,-1,10,4.83909439961559569e-6},
new double[]{1.7,-0.25,-10,0.00161319003032074674},
new double[]{1.7,-0.25,-4,0.0270389607763099799},
new double[]{1.7,-0.25,-0.5,0.14471714244448391},
new double[]{1.7,-0.25,0,0.159065474424639864},
new double[]{1.7,-0.25,0.5,0.166357138319158912},
new double[]{1.7,-0.25,4,0.0541432282756247292},
new double[]{1.7,-0.25,10,0.00139429377458366754},
new double[]{1.7,0,-10,0.00133348365343831789},
new double[]{1.7,0,-4,0.0282861397850080446},
new double[]{1.7,0,-0.5,0.152654617173119158},
new double[]{1.7,0,0,0.163870984280170003},
new double[]{1.7,0,0.5,0.166975190673575102},
new double[]{1.7,0,4,0.0492014268171709222},
new double[]{1.7,0,10,0.0017779483195426824},
new double[]{1.7,0.375,-10,0.000876539114789763024},
new double[]{1.7,0.375,-4,0.0311475793864698595},
new double[]{1.7,0.375,-0.5,0.161622185801591866},
new double[]{1.7,0.375,0,0.166760071014402456},
new double[]{1.7,0.375,0.5,0.163289266148339929},
new double[]{1.7,0.375,4,0.0437663164176938722},
new double[]{1.7,0.375,10,0.0022951772466629433},
new double[]{1.7,1,-10,3.96847124898336665e-7},
new double[]{1.7,1,-4,0.0410642473516228793},
new double[]{1.7,1,-0.5,0.165127567476394708},
new double[]{1.7,1,0,0.159933057550168853},
new double[]{1.7,1,0.5,0.148126030799541171},
new double[]{1.7,1,4,0.0380228069913886552},
new double[]{1.7,1,10,0.00302940749277748275},
new double[]{2,-1,-10,0.0000136193201517526079},
new double[]{2,-1,-4,0.0304185897697654194},
new double[]{2,-1,-0.5,0.15401134144402122},
new double[]{2,-1,0,0.163322405649358235},
new double[]{2,-1,0.5,0.16586489168167542},
new double[]{2,-1,4,0.0550494776762009875},
new double[]{2,-1,10,0.0000600054567345840717},
new double[]{2,-0.25,-10,0.0000136193201517526079},
new double[]{2,-0.25,-4,0.0304185897697654194},
new double[]{2,-0.25,-0.5,0.15401134144402122},
new double[]{2,-0.25,0,0.163322405649358235},
new double[]{2,-0.25,0.5,0.16586489168167542},
new double[]{2,-0.25,4,0.0550494776762009875},
new double[]{2,-0.25,10,0.0000600054567345840717},
new double[]{2,0,-10,0.0000136193201517526079},
new double[]{2,0,-4,0.0304185897697654194},
new double[]{2,0,-0.5,0.15401134144402122},
new double[]{2,0,0,0.163322405649358235},
new double[]{2,0,0.5,0.16586489168167542},
new double[]{2,0,4,0.0550494776762009875},
new double[]{2,0,10,0.0000600054567345840717},
new double[]{2,0.375,-10,0.0000136193201517526079},
new double[]{2,0.375,-4,0.0304185897697654194},
new double[]{2,0.375,-0.5,0.15401134144402122},
new double[]{2,0.375,0,0.163322405649358235},
new double[]{2,0.375,0.5,0.16586489168167542},
new double[]{2,0.375,4,0.0550494776762009875},
new double[]{2,0.375,10,0.0000600054567345840717},
new double[]{2,1,-10,0.0000136193201517526079},
new double[]{2,1,-4,0.0304185897697654194},
new double[]{2,1,-0.5,0.15401134144402122},
new double[]{2,1,0,0.163322405649358235},
new double[]{2,1,0.5,0.16586489168167542},
new double[]{2,1,4,0.0550494776762009875},
new double[]{2,1,10,0.0000600054567345840717}
     };


    [Test]
    public void PdfTestS1()
    {
      for (int i = 0; i < _pdfTestS0.Length; i++)
      {
        double alpha = _pdfTestS1[i][0];
        double beta = _pdfTestS1[i][1];
        double x = _pdfTestS1[i][2];
        double expectedy = _pdfTestS1[i][3];
        double y = StableDistributionS1.PDF(x, alpha, beta, 1.7, 3.0/7.0);
        double maxdelta = Math.Abs(expectedy / 1E7);
        maxdelta = Math.Max(maxdelta, 1e-25);
        string msg = string.Format("i={0}, alpha={1}, beta={2}, x={3}, expected={4}, actual={5}", i, alpha, beta, x, expectedy, y);
        Assert.AreEqual(expectedy, y, maxdelta, msg);
      }
    }

    #endregion

  }
}
