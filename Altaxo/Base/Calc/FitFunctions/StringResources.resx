<?xml version="1.0" encoding="utf-8"?>
<root>
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=9.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Chemistry.MassBasedFloryDistribution" xml:space="preserve">
    <value>##### MassBasedFloryDistribution

The molecular weight $M$ of a polymer which is synthesized in a reactor is often distributed according to a Flory distribution. The only parameter of this distribution (besides the area $A$) is the ratio $\tau$ of the probabilities of the termination step with respect to the chain prolongation step.

This function evaluates a sum of mass based Flory distribution terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(M) = A_0 \ln(10) \left ( \frac{\tau_0 M}{M_m} \right )^2 \exp\left ( -\frac{\tau_0 M}{M_m} \right ) + ... + A_{n-1} \ln(10) \left ( \frac{\tau_{n-1} M}{M_m} \right )^2 \exp\left ( -\frac{\tau_{n-1} M}{M_m} \right ) + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $A_0 ... A_{n-1}$ are the areas of the Flory terms (ATTENTION: only if integrated over the $log_{10}M$ x-axis!)

- $\tau_{0} ... \tau_{n-1}$ are the probability ratios of the termination reaction with respect to the chain prolongation reaction. The smaller this probability ratio, the longer the chains will become, i.e. the peak position is increased to higher molecular weight.

- $b_0 ... b_m$ are the coefficients of the baseline polynomial of order  $m$

- $n$ is the number of Flory distribution terms ($n \geq 1$)

- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

- $M_m$ is the molecular weight of one monomer unit

The molecular weight of one monomer unit $M_m$, the number of Flory distribution terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $M=1$, $n=1$ and $m=-1$, corresponding to 1 term and no baseline. 

There is an additional property named `IndependentVariableIsDecadicLogarithm`. If this property is set to true, it is assumed that the x-axis is not the molecular weight, but the decadic logarithm of the molecular weight $\log_{10}(M)$, which is often used in chemistry.

The domain of the function is  $0 \leq M &lt; \infty$ (`IndependentVariableIsDecadicLogarithm == false`) or $-\infty &lt; \log_{10}(M) &lt; \infty$ (`IndependentVariableIsDecadicLogarithm == true`). 

^^^
![](res:Altaxo.Calc.FitFunctions.Chemistry.MassBasedFloryDistribution.Fig1.png){width=15cm}  
^^^ Fig. 1: MassBasedFloryDistribution ($n=1$, $m=-1$) with $A_0=5$ and $\tau_{0}=10^{-5}$. $M_m$ was set to 14 (polyethylene).
---

References:  
[1] [Flory-Schulz distribution in Wikipedia](https://en.wikipedia.org/wiki/Flory%E2%80%93Schulz_distribution)  
[2] João B. P. Soares, 'Polyolefin microstructural deconvolution methods: The good, the bad, and the ugly', [ https://doi.org/10.1002/cjce.24833]( https://doi.org/10.1002/cjce.24833)



</value>
  </data>
  <data name="Diffusion.MassChangeAfterExponentialEquilibrationForCylinder" xml:space="preserve">
    <value>##### Mass change of a cylinder after an exponential equilibration concentration change

This function evaluates the mass change of a cylinder with the radius $r$ after an exponential equilibration concentration change  of the outer concentration in dependence of the time $t$, i.e. the concentration varies with a characteristic time constant $\tau$ according to:

$$
c(t) = \Delta c \left [ 1 - \exp(- (t-t_0)/\tau) \right ], \; t&gt;t_0
$$

The length of the cylinder is considered infinite, i.e. diffusion from the end faces of the cylinder is neglected. The mass $M(t)$ is then:

$$
M(t) = M_0 + \Delta M \times \left (1 - \frac{2 J_1(rz^{-1/2}) \exp(-rv/rz) }{J_0(rz^{-1/2}) rz^{-1/2}} - 4 \sum_{n=1}^\infty \frac{\exp(-rv  \, \mathrm{J_0Z}(n)^2)}{\mathrm{J_0Z}(n)^2 (1- \mathrm{J_0Z}(n)^2 \, rz)} \right )
$$

in which:

- $rv$ is the dimensionless reduced variable: $rv=\frac{D (t-t_0)}{r^2}$, $t&gt;t_0$ 
- $rz$ is the dimensionless reduced time constant: $rz=\frac{D \tau}{r^2}$
- $\mathrm{J_0Z}(n)$ is the n^th^ zero point of the Bessel function $J_0$
- $t$ is the time (independent variable)
- $t_0$ is the time where the concentration change starts, i.e. the beginning of the diffusion process (parameter)
- $D$ is the diffusion coefficient (parameter)
- $M_0$ is the mass of the plane sheet before the concentration step, i.e. for $t&lt;t_0$ (parameter)
- $\Delta M$ is the mass change due to the concentration step (parameter)
- $\tau$ is the characteristic time constant of the concentration change
- $r$ is the radius of the cylinder (property of the fit function)

The radius of the cylinder $r$ can be changed by double-clicking on the fit function. The default value is $r=1$.

The domain of the independent variable $t$ is $-\infty \leq t \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.Diffusion.MassChangeAfterExponentialEquilibrationForCylinder.Fig1.png){width=15cm}  
^^^ Fig. 1: Mass change of a cylinder after an exponential concentration change with $M_0=1$, $\Delta M = 5$, $t_0=2$, $r=1$, $\tau=3$ and $D=1$ (green curve), $D=0.1$ (orange curve), and $D=0.01$ (cyan curve).


Ref. [1 ]: Crank, "The Mathematics of Diffusion", 2^nd^ edition, 1975, Oxford University Press, p. 75
</value>
  </data>
  <data name="Diffusion.MassChangeAfterExponentialEquilibrationForPlaneSheet" xml:space="preserve">
    <value>##### Mass change of a plane sheet after an exponential equilibration concentration change

This function evaluates the mass change of a plane sheet of the total thickness $l$ after an exponential equilibration concentration change  of the outer concentration in dependence of the time $t$, i.e. the concentration varies with a characteristic time constant $\tau$ according to:

$$
c(t) = \Delta c \left [ 1 - \exp(- (t-t_0)/\tau) \right ], \; t&gt;t_0
$$

The diffusion takes place from both sides of the plane sheet. The lateral dimensions of the sheet are considered infinite, i.e. diffusion from the edges of the sheet is neglected. The mass $M(t)$ is then:

$$
M(t) = M_0 + \Delta M \times \left (1 - \exp(-rv/rz) \, rz^{1/2} \tan(rz^{-1/2}) - 2 \sum_{n=0}^\infty \frac{\exp(-rv (n+1/2)^2 \pi^2)}{(n+1/2)^2 \pi^2 (1-(n+1/2)^2 \pi^2 rz)} \right )
$$

in which:

- $rv$ is the dimensionless reduced variable: $rv=\frac{D (t-t_0)}{l^2}$, $t&gt;t_0$ 
- $rz$ is the dimensionless reduced time constant: $rz=\frac{D \tau}{l^2}$
- $t$ is the time (independent variable)
- $t_0$ is the time where the concentration change starts, i.e. the beginning of the diffusion process (parameter)
- $D$ is the diffusion coefficient (parameter)
- $M_0$ is the mass of the plane sheet before the concentration step, i.e. for $t&lt;t_0$ (parameter)
- $\Delta M$ is the mass change due to the concentration step (parameter)
- $\tau$ is the characteristic time constant of the concentration change
- $l$ is the thickness of the plane sheet (property of the fit function)

The thickness of the plane sheet $l$ can be changed by double-clicking on the fit function. The default value is $l=1$.

The domain of the independent variable $t$ is $-\infty \leq t \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.Diffusion.MassChangeAfterExponentialEquilibrationForPlaneSheet.Fig1.png){width=15cm}  
^^^ Fig. 1: Mass change of a plane sheet after an exponential concentration change with $M_0=1$, $\Delta M = 5$, $t_0=2$, $l=1$, $\tau=3$ and $D=1$ (green curve), $D=0.1$ (orange curve), and $D=0.01$ (cyan curve).


Ref. [1 ]: Crank, "The Mathematics of Diffusion", 2^nd^ edition, 1975, Oxford University Press, p. 53
</value>
  </data>
  <data name="Diffusion.MassChangeAfterExponentialEquilibrationForSphere" xml:space="preserve">
    <value>##### Mass change of a sphere after an exponential equilibration concentration change

This function evaluates the mass change of a sphere with the radius $r$ after an exponential equilibration concentration change  of the outer concentration in dependence of the time $t$, i.e. the concentration varies with a characteristic time constant $\tau$ according to:

$$
c(t) = \Delta c \left [ 1 - \exp(- (t-t_0)/\tau) \right ], \; t&gt;t_0
$$

The mass $M(t)$ is then:

$$
M(t) = M_0 + \Delta M \times \left (1 - 3 \, rz \exp(-rv/rz) \left [ 1- \frac{rz^{-1/2}}{\tan(rz^{-1/2})}  \right ] - 6 \sum_{n=1}^\infty \frac{\exp(-rv  \, n^2 \pi^2}{n^2 \pi^2 (1- n^2 \pi^2 \, rz)} \right )
$$

in which:

- $rv$ is the dimensionless reduced variable: $rv=\frac{D (t-t_0)}{r^2}$, $t&gt;t_0$ 
- $rz$ is the dimensionless reduced time constant: $rz=\frac{D \tau}{r^2}$
- $\mathrm{J_0Z}(n)$ is the n^th^ zero point of the Bessel function $J_0$
- $t$ is the time (independent variable)
- $t_0$ is the time where the concentration change starts, i.e. the beginning of the diffusion process (parameter)
- $D$ is the diffusion coefficient (parameter)
- $M_0$ is the mass of the plane sheet before the concentration step, i.e. for $t&lt;t_0$ (parameter)
- $\Delta M$ is the mass change due to the concentration step (parameter)
- $\tau$ is the characteristic time constant of the concentration change
- $r$ is the radius of the sphere (property of the fit function)

The radius of the sphere $r$ can be changed by double-clicking on the fit function. The default value is $r=1$.

The domain of the independent variable $t$ is $-\infty \leq t \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.Diffusion.MassChangeAfterExponentialEquilibrationForSphere.Fig1.png){width=15cm}  
^^^ Fig. 1: Mass change of a sphere after an exponential concentration change with $M_0=1$, $\Delta M = 5$, $t_0=2$, $r=1$, $\tau=3$ and $D=1$ (green curve), $D=0.1$ (orange curve), and $D=0.01$ (cyan curve).


Ref. [1 ]: Crank, "The Mathematics of Diffusion", 2^nd^ edition, 1975, Oxford University Press, p. 92
</value>
  </data>
  <data name="Diffusion.MassChangeAfterStepForCylinder" xml:space="preserve">
    <value>##### Mass change of a cylinder after a concentration step

This function evaluates the mass change of a cylinder with radius $r$ after a step of the outer concentration in dependence of the time $t$. The length of the cylinder is considered infinite, i.e. diffusion from the end faces of the cylinder is neglected. 

$$
M(t) = M_0 + \Delta M \times \left (1 - 4 \sum_{n=1}^\infty \frac{\exp(-rv  \, \mathrm{J_0Z}(n)^2)}{\mathrm{J_0Z}(n)^2} \right )
$$

in which:

- $rv$ is the dimensionless reduced variable: $rv=\frac{D (t-t_0)}{r^2}$, $t&gt;t_0$ 
- $\mathrm{J_0Z}(n)$ is the n^th^ zero point of the Bessel function $J_0$
- $t$ is the time (independent variable)
- $t_0$ is the time where the concentration step occurs, i.e. the beginning of the diffusion process (parameter)
- $D$ is the diffusion coefficient (parameter)
- $M_0$ is the mass of the plane sheet before the concentration step, i.e. for $t&lt;t_0$ (parameter)
- $\Delta M$ is the mass change due to the concentration step (parameter)
- $r$ is the radius of the cylinder (property of the fit function)

The radius of the cylinder $r$ can be changed by double-clicking on the fit function. The default value is $r=1$.

The domain of the independent variable $t$ is $-\infty \leq t \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.Diffusion.MassChangeAfterStepForCylinder.Fig1.png){width=15cm}  
^^^ Fig. 1: Mass change of a cylinder after a concentration step with $M_0=1$, $\Delta M = 5$, $t_0=2$, $r=1$ and $D=1$ (green curve), $D=0.1$ (orange curve), and $D=0.01$ (cyan curve).


Ref. [1 ]: Crank, "The Mathematics of Diffusion", 2^nd^ edition, 1975, Oxford University Press, p. 73
</value>
  </data>
  <data name="Diffusion.MassChangeAfterStepForPlaneSheet" xml:space="preserve">
    <value>##### Mass change of a plane sheet after a concentration step

This function evaluates the mass change of a plane sheet of the total thickness $l$ after a step of the outer concentration in dependence of the time $t$. The diffusion takes place from both sides of the plane sheet. The lateral dimensions of the sheet are considered infinite, i.e. diffusion from the edges of the sheet is neglected. 

$$
M(t) = M_0 + \Delta M \times \left (1 - 2 \sum_{n=0}^\infty \frac{\exp(-rv (n+1/2)^2 \pi^2)}{(n+1/2)^2 \pi^2} \right )
$$

in which:

- $rv$ is the dimensionless reduced variable: $rv=\frac{D (t-t_0)}{l^2}$, $t&gt;t_0$ 
- $t$ is the time (independent variable)
- $t_0$ is the time where the concentration step occurs, i.e. the beginning of the diffusion process (parameter)
- $D$ is the diffusion coefficient (parameter)
- $M_0$ is the mass of the plane sheet before the concentration step, i.e. for $t&lt;t_0$ (parameter)
- $\Delta M$ is the mass change due to the concentration step (parameter)
- $l$ is the thickness of the plane sheet (property of the fit function)

The thickness of the plane sheet $l$ can be changed by double-clicking on the fit function. The default value is $l=1$.

The domain of the independent variable $t$ is $-\infty \leq t \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.Diffusion.MassChangeAfterStepForPlaneSheet.Fig1.png){width=15cm}  
^^^ Fig. 1: Mass change of a plane sheet after a concentration step with $M_0=1$, $\Delta M = 5$, $t_0=2$, $l=1$ and $D=1$ (green curve), $D=0.1$ (orange curve), and $D=0.01$ (cyan curve).


Ref. [1 ]: Crank, "The Mathematics of Diffusion", 2^nd^ edition, 1975, Oxford University Press, p. 48
</value>
  </data>
  <data name="Diffusion.MassChangeAfterStepForSphere" xml:space="preserve">
    <value>##### Mass change of a sphere after a concentration step

This function evaluates the mass change of a sphere of radius $r$ after a step of the outer concentration in dependence of the time $t$. 

$$
M(t) = M_0 + \Delta M \times \left (1 - 6 \sum_{n=1}^\infty \frac{\exp(-rv \, n^2 \pi^2)}{n^2 \pi^2} \right )
$$

in which:

- $rv$ is the dimensionless reduced variable: $rv=\frac{D (t-t_0)}{r^2}$, $t&gt;t_0$ 
- $t$ is the time (independent variable)
- $t_0$ is the time where the concentration step occurs, i.e. the beginning of the diffusion process (parameter)
- $D$ is the diffusion coefficient (parameter)
- $M_0$ is the mass of the plane sheet before the concentration step, i.e. for $t&lt;t_0$ (parameter)
- $\Delta M$ is the mass change due to the concentration step (parameter)
- $r$ is the radius of the sphere (property of the fit function)

The radius of the sphere $r$ can be changed by double-clicking on the fit function. The default value is $r=1$.

The domain of the independent variable $t$ is $-\infty \leq t \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.Diffusion.MassChangeAfterStepForSphere.Fig1.png){width=15cm}  
^^^ Fig. 1: Mass change of a sphere after a concentration step with $M_0=1$, $\Delta M = 5$, $t_0=2$, $r=1$ and $D=1$ (green curve), $D=0.1$ (orange curve), and $D=0.01$ (cyan curve).


Ref. [1 ]: Crank, "The Mathematics of Diffusion", 2^nd^ edition, 1975, Oxford University Press, p. 91
</value>
  </data>
  <data name="General.ExponentialDecay" xml:space="preserve">
    <value>##### ExponentialDecay

This function evaluates an exponential decay with one or multiple terms according to

$$
y(x) = y_0 + a_0 \exp\left(\frac{-x}{\tau_0}\right ) + ... + a_{n-1} \exp\left(\frac{-x}{\tau_{n-1}} \right )
$$

in which:

- $y_0$ is the value of the base line (value of y for $x\rightarrow \infty$ )
- $a_0$ .. $a_{n-1}$ are the prefactors of the exponential decay terms
- $\tau_0$ ... $\tau_{n-1}$ are the characteristic times
- $n$ is the number of exponential terms

The number of terms $n$ can be changed by double-clicking on the fit function. The default value is $n=1$.

The domain of the function is $-\infty \leq x \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.General.ExponentialDecay.Fig1.png){width=15cm}  
^^^ Fig. 1: Exponential decay with $y_0=1$, $a_0=3$, and $\tau_0=4$.



</value>
  </data>
  <data name="General.ExponentialEquilibration" xml:space="preserve">
    <value>##### ExponentialEquilibration

This function evaluates an exponential equilibration process with one or multiple terms according to

$$
y(x) = \cases{ y_0 \thickspace \thickspace (x \leq x_0) \cr y_0 + a_0 \left [ 1-\exp\left(\frac{-(x-x_0)}{\tau_0}\right ) \right ] + ... + a_{n-1} \left [ 1- \exp\left(\frac{-(x-x_0)}{\tau_{n-1}} \right ) \right ]  \thickspace \thickspace (x &gt; x_0)
}
$$



in which:

- $y_0$ is the starting value (and the value for $x \leq x_0$)
- $x_0$ is the starting point of the equilibration process
- $a_0$ .. $a_{n-1}$ are the prefactors of the exponential equilibration terms
- $\tau_0$ ... $\tau_{n-1}$ are the characteristic times
- $n$ is the number of exponential terms

The number of terms $n$ can be changed by double-clicking on the fit function. The default value is $n=1$.

The domain of the function is $-\infty \leq x \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.General.ExponentialEquilibration.Fig1.png){width=15cm}  
^^^ Fig. 1: Exponential equilibration with $y_0=1$, $a_0=3$, $x_0=2$ and $\tau_0=4$.
</value>
  </data>
  <data name="General.ExponentialGrowth" xml:space="preserve">
    <value>##### Exponential growth

This function evaluates an exponential growth with one or multiple terms according to

$$
y(x) = y_0 + a_0 \exp\left(\frac{x}{\tau_0}\right ) + ... + a_{n-1} \exp\left(\frac{x}{\tau_{n-1}} \right )
$$

in which:

- $y_0$ is the value of the base line (value of y for $x \rightarrow {-\infty}$ )
- $a_0$ .. $a_{n-1}$ are the prefactors of the exponential terms
- $\tau_0$ ... $\tau_{n-1}$ are the characteristic times
- $n$ is the number of exponential terms

The number of terms $n$ can be changed by double-clicking on the fit function. The default value is $n=1$.

The domain of the function is $-\infty \leq x \leq \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.General.ExponentialGrowth.Fig1.png){width=15cm}  
^^^ Fig. 1: Exponential growth with $y_0=100$, $a_0=3$ and $\tau_0=4$.
</value>
  </data>
  <data name="General.ExponentialOfPolynomial" xml:space="preserve">
    <value>##### Exponential of a polynomial

This function evaluates the exponential function of an polynomial with one or multiple terms, and both positive and negative exponents, according to

$$
y(x) = offset + \exp \left ( a_0 + a_1 x^1 + ... + a_n x^n + b_1 x^{-1} + ... + b_m x^{-m} \right )
$$

in which:

- $a_0 ... a_n$ are the polynomial coefficients for positive exponents $ 0...n $
- $b_1$ ... $b_{m}$ are the polynomial coefficients for negative exponents $-1 .. -m$
- $n$ is the order of the polynom for positive exponents
- $m$ is the order of the polynom for negative exponents

The polynomial orders $n$ and $m$ can be changed by double-clicking on the fit function. The default value is $n=2$ and $m=0$. If some of the terms are not needed, set their corresponding coefficients fixed to zero.

The domain of the function is $-\infty \leq x \leq \infty$. If $m \neq 0$, $x=0$ is excluded.

^^^
![](res:Altaxo.Calc.FitFunctions.General.ExponentialOfPolynomial.Fig1.png){width=15cm}  
^^^ Fig. 1: Exponential of a polynomial ($n=3$, $m=0$) with $offset=2$, $a_0=1$, $a_1=0$, $a_2=0$ and $a_3=-0.25$.



</value>
  </data>
  <data name="General.Polynomial" xml:space="preserve">
    <value>##### Polynomial

This function evaluates an polynomial with one or multiple terms, and both positive and negative exponents, according to

$$
y(x) = a_0 + a_1 x^1 + ... + a_n x^n + b_1 x^{-1} + ... + b_m x^{-m}
$$

in which:

- $a_0 ... a_n$ are the polynomial coefficients for positive exponents $ 0...n $
- $b_1$ ... $b_{m}$ are the polynomial coefficients for negative exponents $-1 .. -m$
- $n$ is the order of the polynom for positive exponents
- $m$ is the order of the polynom for negative exponents

The polynomial orders $n$ and $m$ can be changed by double-clicking on the fit function. The default value is $n=2$ and $m=0$. If some of the terms are not needed, set their corresponding coefficients fixed to zero.

The domain of the function is $-\infty \leq x \leq \infty$. If $m \neq 0$, $x=0$ is excluded.

^^^
![](res:Altaxo.Calc.FitFunctions.General.Polynomial.Fig1.png){width=15cm}  
^^^ Fig. 1: Polynomial ($n=3$, $m=0$) with $a_0=1$, $a_1=0$, $a_2=2$ and $a_3=-0.125$.



</value>
  </data>
  <data name="General.PowerLawPrefactor" xml:space="preserve">
    <value>##### Power law (with pre-factors)

This function evaluates a power law with one or multiple terms according to

$$
y(x) = y_0 + a_0 x^{k_0} + ... + a_{n-1} x^{k_{n-1}}
$$

in which:

- $y_0$ is the value of the base line (value of y for $x=0$ )
- $a_0$ .. $a_{n-1}$ are the pre-factors of the terms
- $k_0$ ... $k_{n-1}$ are the exponents
- $n$ is the number of  terms

The number of terms $n$ can be changed by double-clicking on the fit function. The default value is $n=1$. Strictly speaking, the function is a power law only if $y_0=0$ and $n=1$.

The domain of the function is $ 0 \leq x &lt; \infty $ if all $k_0..k_{n-1}$ are positive, or $ 0 &lt; x &lt; \infty $ if some of the exponents are negative.

&gt; **Note:**  
Even if you set the exponents fixed to integer values, the domain of the function is not extended to the full range! If the full range is neccessary, try to use `Polynomial` instead.

^^^
![](res:Altaxo.Calc.FitFunctions.General.PowerLawPrefactor.Fig2.png){width=15cm}  
^^^ Fig. 1: Power law with $y_0=0$, $a_0=3$ and $k_0=2.5$ with linear x- and y-axes.

^^^
![](res:Altaxo.Calc.FitFunctions.General.PowerLawPrefactor.Fig1.png){width=15cm}  
^^^ Fig. 2: Power law with the same parameters $y_0=0$, $a_0=3$ and $k_0=2.5$ in a double-logarithmic plot.
</value>
  </data>
  <data name="General.PowerLawRatio" xml:space="preserve">
    <value>##### Power law (with ratios)

This function evaluates a power law with one or multiple terms according to

$$
y(x) = y_0 +  \left ( \frac{x}{a_0} \right ) ^{k_0} + ... +  \left ( \frac{x}{a_{n-1}} \right )^{k_{n-1}}
$$

in which:

- $y_0$ is the value of the base line (value of y for $x=0$ )
- $a_0$ .. $a_{n-1}$ are the denominators of the terms
- $k_0$ ... $k_{n-1}$ are the exponents
- $n$ is the number of  terms

The number of terms $n$ can be changed by double-clicking on the fit function. The default value is $n=1$. Strictly speaking, the function is a power law only if $y_0=0$ and $n=1$.

The domain of the function is $ 0 \leq x &lt; \infty $ if all $k_0..k_{n-1}$ and all $a_0..a_{n-1}$ are positive, $-\infty &lt; x \leq 0$ if all $k_0..k_{n-1}$ are positive and all $a_0..a_{n-1}$ are negative, and, if some of the exponents are negative, the  value $x=0$ is not included.

^^^
![](res:Altaxo.Calc.FitFunctions.General.PowerLawRatio.Fig2.png){width=15cm}  
^^^ Fig. 1: Power law (ratio) with $y_0=0$, $a_0=3$ and $k_0=-0.5$ with linear x- and y-axes.

^^^
![](res:Altaxo.Calc.FitFunctions.General.PowerLawRatio.Fig1.png){width=15cm}  
^^^ Fig. 2: Power law (ratio) with the same parameters $y_0=0$, $a_0=3$ and $k_0=-0.5$ in a double-logarithmic plot.
</value>
  </data>
  <data name="General.Rational" xml:space="preserve">
    <value>##### Rational

This function evaluates a rational polynom with one or multiple terms in the nominator and in the denominator according to

$$
y(x) = \frac{a_0 + a_1 x + ... + a_{n} x^{n}}{1 + b_1 x + .. + b_{m} x^{m}}
$$

in which:

- $a_0$ .. $a_{n}$ are the coefficients of the nominator polynom
- $b_1$ .. $b_{m}$ are the coefficients of the denominator polynom
- $n$ is the polynomial order of the nominator polynom
- $m$ is the polynomial order of the denominator polynom

In order to avoid covariance between the 0th order coefficients $a_0$ and $b_0$, in this formula $b_0$ is set to $b_0=1$. Please use `RationalInverse` if a free value of $b_0$ is preferred.

The polynomial orders $n$ and $m$ can be changed by double-clicking on the fit function. The default value is $n=1$ and $m=1$.

The domain of the function is $ -\infty &lt; x &lt; \infty $, with some points (poles) excluded, at which the denominator becomes zero.

^^^
![](res:Altaxo.Calc.FitFunctions.General.Rational.Fig1.png){width=15cm}  
^^^ Fig. 1: Rational $\frac{2+x}{1+2x}$, i.e. with $n=m=1$, $a_0=2$, $a_1=1$ and $b_1=2$.

---</value>
  </data>
  <data name="General.RationalInverse" xml:space="preserve">
    <value>##### RationalInverse

This function evaluates a rational polynom with one or multiple terms in the nominator and in the denominator according to

$$
y(x) = \frac{1 + a_1 x + ... + a_{n} x^{n}}{b_0 + b_1 x + .. + b_{m} x^{m}}
$$

in which:

- $a_1$ .. $a_{n}$ are the coefficients of the nominator polynom
- $b_0$ .. $b_{m}$ are the coefficients of the denominator polynom
- $n$ is the polynomial order of the nominator polynom
- $m$ is the polynomial order of the denominator polynom

In order to avoid covariance between the 0^th^ order coefficients $a_0$ and $b_0$, in this formula $a_0$ is set to $a_0=1$. Please use `Rational` if a free value of $a_0$ is preferred.

The polynomial orders $n$ and $m$ can be changed by double-clicking on the fit function. The default value is $n=0$ and $m=1$.

The domain of the function is $ -\infty &lt; x &lt; \infty $, with some points (poles) excluded, at which the denominator becomes zero.

^^^
![](res:Altaxo.Calc.FitFunctions.General.RationalInverse.Fig1.png){width=15cm}  
^^^ Fig. 1: RationalInverse $\frac{1+3x}{-2+x}$, i.e. with $n=m=1$, $a_1=3$, $b_0=-2$ and $b_1=1$.

---</value>
  </data>
  <data name="General.StretchedExponentialDecay" xml:space="preserve">
    <value>##### Stretched exponential decay
(also known as **Kohlrausch decay**)

This function evaluates a stretched exponential decay process starting at $x=x_0$ with one or multiple terms according to

$$
y(x) = \cases{ y_0 + a_0 \exp\left(-\left\[\frac{x-x_0}{\tau_0}\right\]^{\beta_0} \right ) + ... + a_{n-1} \exp\left(-\left[\frac{x-x_0}{\tau_{n-1}}\right]^{\beta_{n-1}} \right )   \thickspace \thickspace (x &gt; x_0) \cr y_0 + \sum_{0}^{n-1} a_i  \thickspace \thickspace (x \leq x_0)}
$$


in which:

- $x_0$ is the starting point of the decay process. If this value is known, you should enter the value and set this parameter to fixed.
- $y_0$ is the value for $x \rightarrow \infty$
- $a_0$ .. $a_{n-1}$ are the pre-factors of the exponential terms
- $\tau_0$ ... $\tau_{n-1}$ are the characteristic times
- $\beta_0$ ... $\beta_{n-1}$ are the exponents, usually in the range $ 0 &lt; \beta \leq 1 $
- $n$ is the number of exponential terms

The number of terms $n$ can be changed by double-clicking on the fit function. The default value is $n=1$.

The domain of the function is $-\infty &lt; x &lt; \infty$. The function values are set to constant for $x&lt;x_0$.

^^^
![](res:Altaxo.Calc.FitFunctions.General.StretchedExponentialDecay.Fig1.png){width=15cm}  
^^^ Fig. 1: Stretched exponential decay with $x_0=0$, $y_0=1$, $a_0=3$, $\tau_0=4$, and $\beta=0.5$ (green) in comparison to a 'normal' exponential decay function with the same parameters (grey). Note that the 'normal' exponential decay has varying function values both for $x&lt;0$ and $x&gt;0$, whereas the stretched exponential decay is constant for $x&lt;x_0$.
---
</value>
  </data>
  <data name="General.StretchedExponentialEquilibration" xml:space="preserve">
    <value>##### Stretched exponential equilibration

This function evaluates a stretched exponential equilibration process with one or multiple terms according to

$$
y(x) = \cases{y_0 + a_0 \left \{ 1-\exp\left(-\left[\frac{x-x_0}{\tau_0}\right]^{\beta_0} \right ) \right \} + ... + a_{n-1} \left [\{ 1- \exp\left(-\left[\frac{x-x_0}{\tau_{n-1}}\right]^{\beta_{n-1}} \right ) \right \}  \thickspace \thickspace (x &gt; x_0) \cr y_0 \thickspace \thickspace (x \leq x_0)}
$$

in which:

- $x_0$ is the starting point of the equilibration process. If this value is known, you should enter the value and set this parameter to fixed.
- $y_0$ is the starting value (and the value for $x \leq x_0$)
- $a_0$ .. $a_{n-1}$ are the pre-factors of the exponential equilibration terms
- $\tau_0$ ... $\tau_{n-1}$ are the characteristic times
- $\beta_0$ ... $\beta_{n-1}$ are the exponents, usually in the range $ 0 &lt; \beta \leq 1 $
- $n$ is the number of exponential terms

The number of terms $n$ can be changed by double-clicking on the fit function. The default value is $n=1$.

The domain of the function is $-\infty &lt; x &lt; \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.General.StretchedExponentialEquilibration.Fig1.png){width=15cm}  
^^^ Fig. 1: Stretched exponential equilibration with  $x_0=2$, $y_0=1$, $a_0=3$, $\tau_0=4$, and $\beta=0.5$ (green) in comparison to a 'normal' exponential equilibration function with the same parameters (grey).
---
</value>
  </data>
  <data name="General.StretchedExponentialGrowth" xml:space="preserve">
    <value>##### Stretched exponential growth

This function evaluates a stretched exponential growth process starting at $x=x_0$ with one or multiple terms according to

$$
y(x) = \cases{y_0 + a_0 \exp\left(\left[\frac{x-x_0}{\tau_0}\right]^{\beta_0} \right ) + ... + a_{n-1} \exp\left(\left[\frac{x-x_0}{\tau_{n-1}}\right]^{\beta_{n-1}} \right ) \thickspace \thickspace (x &gt; x_0)
\cr y_0 + \sum_{0}^{n-1} a_i  \thickspace \thickspace (x \leq x_0)}
$$

in which:

- $x_0$ is the starting point of the growth process. If this value is known, you should enter the value and set this parameter to fixed.
- $y_0$ is an offset value
- $a_0$ .. $a_{n-1}$ are the pre-factors of the exponential terms
- $\tau_0$ ... $\tau_{n-1}$ are the characteristic times
- $\beta_0$ ... $\beta_{n-1}$ are the exponents, usually in the range $ 0 &lt; \beta \leq 1 $
- $n$ is the number of exponential terms

The number of terms $n$ can be changed by double-clicking on the fit function. The default value is $n=1$.

The domain of the function is $-\infty &lt; x &lt; \infty$. The function values are set to constant for $x&lt;x_0$.

^^^
![](res:Altaxo.Calc.FitFunctions.General.StretchedExponentialGrowth.Fig1.png){width=15cm}  
^^^ Fig. 1: Stretched exponential growth with $x_0=0$, $y_0=-2$, $a_0=3$, $\tau_0=4$, and $\beta=0.5$ (green) in comparison to a 'normal' exponential growth function with the same parameters (grey). Note that the 'normal' exponential growth has varying function values both for $x&lt;0$ and $x&gt;0$, whereas the stretched exponential growth is constant for $x&lt;x_0$.
---
</value>
  </data>
  <data name="General.TwoPolynomialSegments" xml:space="preserve">
    <value>##### Two polynomial segments

This function evaluates two polynomial segments that are connected at the point $[x_0, y_0]$, according to:

$$
y(x) = y_0 + \cases{ a_1 (x-x_0)^1 + a_2 (x-x_0)^2 + ... + a_n (x-x_0)^n \thickspace \thickspace (x &lt; x_0) \cr  b_1 (x-x_0)^{1} + b_2 (x-x_0)^{2} + ... + b_m (x-x_0)^{m} \thickspace \thickspace (x \geq x_0) }
$$

in which:

- $x_0$ is the x-coordinate of the point at which the two polynomial segments are joined
- $y_0$ is the y-coordinate of the point at which the two polynomial segments are joined
- $a_1 ... a_n$ are the polynomial coefficients of the left polynomial segment ($x &lt; x_0$)
- $b_1$ ... $b_{m}$ are the polynomial coefficients of the right polynomial segment ($x \geq x_0$)
- $n$ is the order of the left polynomial segment ($0 \leq n &lt; \infty$)
- $m$ is the order of the right polynomial segment ($0 \leq m &lt; \infty$)

The polynomial orders $n$ and $m$ can be changed by double-clicking on the fit function. The default value is $n=1$ and $m=1$, resulting in two straight lines joined at $[x_0, y_0]$. If some of the terms are not needed, set the corresponding coefficients fixed to zero.

The domain of the function is $-\infty &lt; x &lt; \infty$.

^^^
![](res:Altaxo.Calc.FitFunctions.General.TwoPolynomialSegments.Fig1.png){width=15cm}  
^^^ Fig. 1: Two polynomial segments ($n=1$, $m=1$) with $x_0=4$, $y_0=3$, $a_1=-0.5$ and $b_1=1$.



</value>
  </data>
  <data name="Kinetics.ConversionAutocatalytic" xml:space="preserve">
    <value>##### Conversion of an autocatalytic reaction

This fit function represents the solution of the differential equation for the conversion of an autocatalytic reaction (e.g. epoxy curing), namely:

$$
\frac{dc}{dx} = (k_1 + k_2 c^m)(1-c)^n \\ \\ c(t \le t_0)=0
$$

in which 

- $c$ is a value in the range [0, 1], e.g. the chemical conversion,
- $x$ is the independent variable (for a reaction, $x$ represents the time),
- $k_1$ and $k_2$ are a rate parameter,
- $m$ and $n$ are exponents,
- $t_0$ is the point (time) of the start of the reaction, i.e. $c(t_0)=0$.

&gt; **Important**: In this fit function, the **dependent variable $y$ is not the conversion** $c(x)$, but a scaled value of the conversion $y(x)=A_0 c(x)$, in which $A_0$ is an additional parameter!

The values of $y$, $k_1$ and $k_2$ are assumed to be positive. The value of $y$ before the start of reaction ($x \le t_0$) is assumed to be 0.

Since there is no general analytical solution of this differential equation, the solution must be calculated using an ordinary differential equation solver. This could make fits to a large data set somewhat slow.

The domain of the function is $-\infty \leq x \leq \infty$. 

&gt; Tip #1:  
&gt; To fit conversion data that are in the range [0,1], set the parameter $A_0$ fixed to a value of 1.

&gt; Tip #2:  
&gt; To fit conversion data that are in percent, i.e. in a range of [0, 100], set the parameter $A_0$ fixed to a value of 100.

&gt; Note:  
&gt; This kinetic equation assumes that the conversion finally reaches 1 (100%). This assumption may be wrong if the glass temperature of the finally cured material exceeds the curing temperature.


^^^
![](res:Altaxo.Calc.FitFunctions.Kinetics.ConversionAutocatalytic.Fig1.png){width=15cm}  
^^^ Fig. 1: ConversionAutocatalytic (with $t_0=1$, $A_0=1$, $k_1=1$ and $k_2$=1). The values for $m$ and $n$ are indicated in the legend.
---
References:  
- J. M. Kenny, Determination of Autocatalytic Kinetic Model Parameters Describing Thermoset Cure, Journal of Applied Polymer Science, Vol. 51, 761-764 (1994) 



</value>
  </data>
  <data name="Kinetics.ConversionNthOrder" xml:space="preserve">
    <value>##### Conversion of a reaction of n^th^ order

This fit function represents the solution of the differential equation of a conversion kinetics of n^th^ order, namely:

$$
\frac{dc}{dx} = k (1-c)^n \\ \\ c(x \le t_0)=0
$$

in which 

- $c$ is a value in the range [0, 1], e.g. the chemical conversion,
- $x$ is the independent variable (for a kinetics, $x$ represents the time),
- $k$ is a rate parameter,
- $n$ is the order of the kinetic conversion process,
- $t_0$ is the point (time) of the start of the reaction, i.e. $c(t_0)=0$.

&gt; **Important**: In this fit function, the **dependent variable $y$ is not the conversion** $c(x)$, but a scaled value of the conversion $y(x)=A_0 c(x)$, in which $A_0$ is an additional parameter!

The value of $k$ is assumed to be positive.

The solution for $x\ge t_0$ of the differential equation is:


$$
c(x) = \cases { 
                1 - \left \[ 1 -k (1-n)( x - t_0) \right \]^{\frac{1}{1-n}} \thickspace \mathrm{if} \thickspace n \neq 1 \cr
                 1 - \exp(-k (x-t_0)) \thickspace \mathrm{if} \thickspace n=1} 
$$

For $x \le t_0$, $c$ is set to 0. Additionally, in order to be consistent among different $n$, $c$ is set to 1 if $n&lt;1$ and $x&gt;t_0 + \frac{1}{k(1-n)}$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

&gt; Tip #1:  
&gt; To fit conversion data that are in the range [0,1], set the parameter $A_0$ fixed to a value of 1.

&gt; Tip #2:  
&gt; To fit conversion data that are in percent, i.e. in a range of [0, 100], set the parameter $A_0$ fixed to a value of 100.



^^^
![](res:Altaxo.Calc.FitFunctions.Kinetics.ConversionNthOrder.Fig1.png){width=15cm}  
^^^ Fig. 1: ConversionNthOrder fit functions (with $t_0=1$, $A_0=1$, $k=1$). The values for $n$ are indicated in the legend.
---




</value>
  </data>
  <data name="Kinetics.KineticsNthOrder" xml:space="preserve">
    <value>##### Kinetics of n^th^ order

This fit function represents the solution of the differential equation for a kinetics of n^th^ order, namely:

$$
\frac{dy}{dx} = -k y^n \\ \\ y(0)=y_0
$$

in which 

- $y$ is the dependent variable,
- $x$ is the independent variable (for a kinetics, $x$ represents the time),
- $k$ is a rate parameter,
- $n$ is the order of the kinetic process,
- $y_0$ is the value of $y$ at $x=0$.

The values of $y$ and $y_0$ is assumed to be positive.

The solution of this differential equation is:


$$
y(x) = \cases { \left \[  y_0^{1-n} -k x (1-n) \right \]^{\frac{1}{1-n}} \thickspace \mathrm{if} \thickspace n \neq 1 \cr
                 y_0 \exp(-k x) \thickspace \mathrm{if} \thickspace n=1} 
$$

The domain of the function is: 

$$
\cases{-\infty \leq x \leq \infty \thickspace \mathrm{for} \thickspace n = 1 \cr
       \frac{y_0^{1-n}}{k(n-1)} &lt; x \leq \infty \thickspace \mathrm{for} \thickspace n \thinspace \mathrm{sign}(k)&gt; -1 \cr
       -\infty \leq x &lt; \frac{y_0^{1-n}}{k(n-1)} \thickspace \mathrm{for} \thickspace n\thinspace \mathrm{sign}(k) &lt; -1
}
$$



^^^
![](res:Altaxo.Calc.FitFunctions.Kinetics.KineticsNthOrder.Fig1.png){width=15cm}  
^^^ Fig. 1: KineticsNthOrder (with $y_0=1$, $k=1$). The values for $n$ are indicated in the legend.
---




</value>
  </data>
  <data name="Kinetics.RateOfConversionAutocatalytic" xml:space="preserve">
    <value>##### Rate of conversion of an autocatalytic reaction

This fit function represents the solution of the differential equation for the conversion of an autocatalytic reaction (e.g. epoxy curing), namely:

$$
\frac{dc}{dx} = (k_1 + k_2 c^m)(1-c)^n \\ \\ c(t \le t_0)=0
$$

in which 

- $c$ is a value in the range [0, 1], e.g. the chemical conversion,
- $x$ is the independent variable (for a reaction, $x$ represents the time),
- $k_1$ and $k_2$ are a rate parameter,
- $m$ and $n$ are exponents,
- $t_0$ is the point (time) of the start of the reaction, i.e. $c(t_0)=0$.

&gt; **Important**: In this fit function, the **dependent variable is not the conversion** $c(x)$, **but a scaled value of the conversion rate** $y(x)=A_0 \frac{dc(x)}{dx}$, in which $A_0$ is an additional parameter!

The values of $y$, $k_1$ and $k_2$ are assumed to be positive. The value of $c$ before the start of reaction ($x \le t_0$) is assumed to be 0.

Since there is no general analytical solution of this differential equation, the solution must be calculated using an ordinary differential equation solver. This could make fits to a large data set somewhat slow.

The domain of the function is $-\infty \leq x \leq \infty$. 

&gt; Note:  
&gt; This kinetic equation assumes that the conversion finally reaches 1 (100%). This assumption may be wrong if the glass temperature of the finally cured material exceeds the curing temperature.

^^^
![](res:Altaxo.Calc.FitFunctions.Kinetics.RateOfConversionAutocatalytic.Fig1.png){width=15cm}  
^^^ Fig. 1: RateOfConversionAutocatalytic (with $t_0=1$, $A_0=1$, $k_1=1$ and $k_2$=1). The values for $m$ and $n$ are indicated in the legend.
---
References:  
- J. M. Kenny, Determination of Autocatalytic Kinetic Model Parameters Describing Thermoset Cure, Journal of Applied Polymer Science, Vol. 51, 761-764 (1994) 



</value>
  </data>
  <data name="Kinetics.RateOfConversionNthOrder" xml:space="preserve">
    <value>##### Conversion of a reaction of n^th^ order

This fit function represents the solution of the differential equation of a conversion kinetics of n^th^ order, namely:

$$
\frac{dc}{dx} = k (1-c)^n \\ \\ c(x \le t_0)=0
$$

in which 

- $c$ is a value in the range [0, 1], e.g. the chemical conversion,
- $x$ is the independent variable (for a kinetics, $x$ represents the time),
- $k$ is a rate parameter,
- $n$ is the order of the kinetic conversion process,
- $t_0$ is the point (time) of the start of the reaction, i.e. $c(t_0)=0$.

&gt; **Important**: In this fit function, the **dependent variable is not the conversion** $c(x)$, **but a scaled value of the conversion rate** $y(x)=A_0 \frac{dc(x)}{dx}$, in which $A_0$ is an additional parameter!


The value of $k$ is assumed to be positive.

The solution for $x\ge t_0$ of the differential equation is:


$$
c(x) = \cases { 
                1 - \left \[ 1 -k (1-n)( x - t_0) \right \]^{\frac{1}{1-n}} \thickspace \mathrm{if} \thickspace n \neq 1 \cr
                 1 - \exp(-k (x-t_0)) \thickspace \mathrm{if} \thickspace n=1} 
$$

For $x \le t_0$, $c$ is set to 0. Additionally, in order to be consistent among different $n$, $c$ is set to 1 if $n&lt;1$ and $x&gt;t_0 + \frac{1}{k(1-n)}$. 

The domain of the function is $-\infty \leq x \leq \infty$. 


^^^
![](res:Altaxo.Calc.FitFunctions.Kinetics.RateOfConversionNthOrder.Fig1.png){width=15cm}  
^^^ Fig. 1: RateOfConversionNthOrder fit functions (with $t_0=1$, $A_0=1$, $k=1$). The values for $n$ are indicated in the legend.
---




</value>
  </data>
  <data name="Materials.ArrheniusLawRate" xml:space="preserve">
    <value>##### Arrhenius law (rate)

This Arrhenius law describes the temperature dependence of e.g. reaction rates, typical frequencies, e.g. quantities that increase with increasing temperature.  
The function is defined as:
$$
y(T) = y_0 \exp\left(\frac{-E_a}{k T})
$$
in which $y$ is the reaction rate (dependent variable), $T$ is the absolute (!) temperature (independent variable), and $k$ is a constant, usually the Boltzmann constant, but it depends on the options you choose for the fit (see below).

The parameters are: 
- $y_0$ is the reaction rate in the limit $T\rightarrow\infty$
- $E_a$ is the activation energy.

Please note that for large temperature intervals, the y-value can vary over some orders of magnitude. This will lead to a poor fit, because the data points with small values of the reaction rate then contribute too little to the fit. 

In order to get a good fit nevertheless, it is neccessary  that you logarithmize your data points before they get fitted, and choose the `DecadicLogarithm` dependent variable option on this fit.

*Options for the independent variable x*:
- Kelvin: x is $T$ in Kelvin
- AsInverseKelvin: x is $\frac{1}{T}$
- DegreeCelsius: x is in °C
- DegreeFahrenheit: x is in °F
  
  

*Options for the dependent variable y*:
- Original: the original value of $y$ (the rate)
- Inverse:  the inverse of the rate, i.e. $\frac{1}{y}$
- Negative: the negative rate $-y$
- DecadicLogarithm: $\log_{10}(y)$
- NegativeDecadicLogarithm: $-\log_{10}(y)$
- NaturalLogarithm: $\ln(y)$
- NegativeNaturalLogarithm: $-\ln(y)$

  
  
*Option for parameters*:
- ParameterEnergyRepresentation
  - Joule: $E_a$ is in Joule
  - JoulePerMole: $E_a$ is in Joule per mole
  - ElectronVolt: $E_a$ is in eV (electron volt)
  - kWh, calorie, calorie per mole and more..
  
^^^
![](res:Altaxo.Calc.FitFunctions.Materials.ArrheniusLawRate.Fig1.png){width=15cm}  
^^^ Fig. 1: Typical plot of an Arrhenius diagram (reaction rate by the inverse temperature). Here the parameters are $y_0=10^{12} s^{-1}$ and $E_a=80$ kJ/mol. Please note that if you choose the x-axis to be $ 1/T $ instead of T and the y-axis to be logarithmic, as in this example, the curve becomes a straight line. You can even include the "right" temperatures in °C by adding a second axis at the bottom, with inverse tick spacing and the transformation $x'=-273.15+x$.</value>
  </data>
  <data name="Materials.ArrheniusLawTime" xml:space="preserve">
    <value>##### Arrhenius law (time)

This Arrhenius law describes the temperature dependence of e.g. relaxation or retardation times, or viscosities, e.g. quantities that decrease with increasing temperature.  
The function is defined as:
$$
y(T) = y_0 \exp\left(\frac{E_a}{k T})
$$
in which $y$ is the relaxation or retardation time or viscosity (dependent variable), $T$ is the absolute (!) temperature (independent variable), and $k$ is a constant, usually the Boltzmann constant, but it depends on the options you choose for the fit (see below).

The parameters are: 
- $y_0$ is the relaxation or retardation time or viscosity in the limit $T\rightarrow\infty$
- $E_a$ is the activation energy.

Please note that for large temperature intervals, the y-value can vary over some orders of magnitude. This will lead to a poor fit, because the data points with small values of the reaction rate then contribute too little to the fit. 

In order to get a good fit nevertheless, it is neccessary  that you logarithmize your data points before they get fitted, and choose the `DecadicLogarithm` dependent variable option on this fit.

*Options for the independent variable x*:
- Kelvin: x is $T$ in Kelvin
- AsInverseKelvin: x is $\frac{1}{T}$
- DegreeCelsius: x is in °C
- DegreeFahrenheit: x is in °F
  
  

*Options for the dependent variable y*:
- Original: the original value of $y$ (the rate)
- Inverse:  the inverse of the rate, i.e. $\frac{1}{y}$
- Negative: the negative rate $-y$
- DecadicLogarithm: $\log_{10}(y)$
- NegativeDecadicLogarithm: $-\log_{10}(y)$
- NaturalLogarithm: $\ln(y)$
- NegativeNaturalLogarithm: $-\ln(y)$

  
  
*Option for parameters*:
- ParameterEnergyRepresentation
  - Joule: $E_a$ is in Joule
  - JoulePerMole: $E_a$ is in Joule per mole
  - ElectronVolt: $E_a$ is in eV (electron volt)
  - kWh, calorie, calorie per mole and more..
  
^^^
![](res:Altaxo.Calc.FitFunctions.Materials.ArrheniusLawTime.Fig1.png){width=15cm}  
^^^ Fig. 1: Typical plot of an Arrhenius diagram (viscosity by the inverse temperature). Here the parameters are $y_0=10^{-10}$ and $E_a=80$ kJ/mol. Please note that if you choose the x-axis to be $ 1/T $ instead of T and the y-axis to be logarithmic, as in this example, the curve becomes a straight line. You can even include the "right" temperatures in °C by adding a second axis at the bottom, with inverse tick spacing and the transformation $x'=-273.15+x$.
---</value>
  </data>
  <data name="Materials.VogelFulcherLawRate" xml:space="preserve">
    <value>##### Vogel-Fulcher law (rate, mobility)

The Vogel-Fulcher law describes the dependence of reaction rates, mobilities, viscosities and relaxation times on the temperature for materials like glasses and polymers for temperatures in the vicinity of the glass transition temperature and in any case above the so-called Vogel temperature $T_0$.

This variant of the Vogel-Fulcher law is especially suited to describe the temperature dependence of rates, mobilities, diffusion coefficients etc., i.e. **quantities which increase with increasing temperatures**. in glasses at temperatures above $T_0$.

The function is defined as:
$$
y(T) = y_0 \exp\left(-\frac{B}{T-T_0})
$$

in which $y$ is the  rate, mobility, etc. (dependent variable), $T$ is the  temperature (independent variable), $T_0$ is the so-called Vogel temperature, and $B$ is a broadness parameter.

&gt; **Note:**
The function above is designed for reaction rates, mobilities, etc., i.e. for quantities, which increase with increasing temperature. But quantities like viscosity, relaxation times decrease with increasing temperature. To fit those quantities, please use `VogelFulcherLaw (Time)`, or use this function with a negative value for $B$.  


The parameters are: 
- $y_0$ is the reaction rate, mobility, ..., etc. in the limit $T\rightarrow\infty$
- $T_0$ is the Vogel-Temperature. The formula is only valid for temperatures $T&gt;T_0$. At the Vogel temperature, reaction rates, mobilities, etc., converge to zero.
- $B$ changes the slope of the curve.

Please note that for large temperature intervals, the function value can vary over many orders of magnitude. This will lead to a poor fit, because the data points with small values then contribute too little to the fit. 

In order to get a good fit nevertheless, it is necessary  that you logarithmize your data points before they get fitted. In order to do this, choose the `DecadicLogarithm` or `NaturalLogarithm` transformation for both the transformation of your data and for the transformation of the fit output $y$.

*Options for the independent variable $T$*:
- Kelvin: Your x-values are absolute temperatures in Kelvin
- AsInverseKelvin: your x-values are inverse temperatures $\frac{1}{T}$
- DegreeCelsius: your x-values are given as temperatures in °C
- DegreeFahrenheit: your x-values are given as temperatures in °F


*Option for parameters*:
- ParameterEnergyRepresentation
  - Joule: $E_a$ is in Joule
  - JoulePerMole: $E_a$ is in Joule per mole
  - ElectronVolt: $E_a$ is in eV (electron volt)
  - kWh, calorie, calorie per mole and more..
  
^^^
![](res:Altaxo.Calc.FitFunctions.Materials.VogelFulcherLawRate.Fig2.png){width=15cm}  
^^^ Fig. 1: Vogel-Fulcher law (e.g. reaction rate by temperature). Here the parameters are $y_0=10^{10}$, $T_0$=120°C and $B$=1000 K.

  
  
^^^
![](res:Altaxo.Calc.FitFunctions.Materials.VogelFulcherLawRate.Fig1.png){width=15cm}  
^^^ Fig. 2: Vogel-Fulcher law plotted in an Arrhenius diagram (e.g. reaction rate versus inverse temperature). The parameters are $y_0=10^{10}$, $T_0$=120°C and $B$=1000 K.

---</value>
  </data>
  <data name="Materials.VogelFulcherLawTime" xml:space="preserve">
    <value>##### Vogel-Fulcher law (relaxation times, viscosities)

The Vogel-Fulcher law describes the dependence of reaction rates, mobilities, viscosities and relaxation times on the temperature for materials like glasses and polymers for temperatures in the vicinity of the glass transition temperature and in any case above the so-called Vogel temperature $T_0$.

This variant of the Vogel-Fulcher law is especially suited to describe the temperature dependence of relaxation times, viscosities, etc., i.e. **quantities which decrease with increasing temperatures**. in glasses at temperatures above $T_0$.

The function is defined as:
$$
y(T) = y_0 \exp\left(\frac{B}{T-T_0})
$$

in which $y$ is the  relaxation time, viscosity, etc. (dependent variable), $T$ is the  temperature (independent variable), $T_0$ is the so-called Vogel temperature, and $B$ is a broadness parameter.

&gt; **Note:**
The function above is designed for relaxation times, viscosities, etc, i.e. for quantities, which decrease with increasing temperature. But quantities like reaction rates, mobilities, etc., increase with increasing temperature. To fit those quantities, please use `VogelFulcherLawRate`, or use this function with a negative value for $B$. 


The parameters are: 
- $y_0$ is the relaxation time, viscosity, ..., etc. in the limit $T\rightarrow\infty$
- $T_0$ is the Vogel-Temperature. The formula is only valid for temperatures $T&gt;T_0$. At the Vogel temperature, relaxation times, viscosities, etc., converge to infinity.
- $B$ changes the slope of the curve.

Please note that for large temperature intervals, the function value can vary over many orders of magnitude. This will lead to a poor fit, because the data points with small values then contribute too little to the fit. 

In order to get a good fit nevertheless, it is necessary  that you logarithmize your data points before they get fitted. In order to do this, choose the `DecadicLogarithm` or `NaturalLogarithm` transformation for both the transformation of your data and for the transformation of the fit output $y$.

*Options for the independent variable $T$*:
- Kelvin: Your x-values are absolute temperatures in Kelvin
- AsInverseKelvin: your x-values are inverse temperatures $\frac{1}{T}$
- DegreeCelsius: your x-values are given as temperatures in °C
- DegreeFahrenheit: your x-values are given as temperatures in °F


*Option for parameters*:
- ParameterEnergyRepresentation
  - Joule: $E_a$ is in Joule
  - JoulePerMole: $E_a$ is in Joule per mole
  - ElectronVolt: $E_a$ is in eV (electron volt)
  - kWh, calorie, calorie per mole and more..
  
^^^
![](res:Altaxo.Calc.FitFunctions.Materials.VogelFulcherLawTime.Fig2.png){width=15cm}  
^^^ Fig. 1: Vogel-Fulcher law (e.g. relaxation time by temperature). Here the parameters are $y_0=10^{-10}$, $T_0$=120°C and $B$=1000 K.

  
  
^^^
![](res:Altaxo.Calc.FitFunctions.Materials.VogelFulcherLawTime.Fig1.png){width=15cm}  
^^^ Fig. 2: Vogel-Fulcher law plotted in an Arrhenius diagram (e.g. relaxation time versus inverse temperature). The parameters are $y_0=10^{-10}$, $T_0$=120°C and $B$=1000 K.

---</value>
  </data>
  <data name="Peaks.CauchyAmplitude" xml:space="preserve">
    <value>##### CauchyAmplitude

This function evaluates a sum of Cauchy (Lorentzian) terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = \frac{a_0}{1+ \left ( \frac{x-x_{c0}}{w_0} \right )^2 } + ... + \frac{a_{n-1}}{1+ \left ( \frac{x-x_{cn-1}}{w_{n-1}} \right )^2 } + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (heights) of the Cauchy terms

- $x_{c0} ... x_{cn-1}$ are the locations of the Cauchy terms

- $w_0 ... w_{n-1}$ are the half widths of half maximum (HWHM) of the Cauchy terms

- $b_0 ... b_m$ are the coefficients of the baseline polynomial of order  $m$

- $n$ is the number of Cauchy terms ($n \geq 1$)
- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

The number of Cauchy terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=0$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Peaks.CauchyAmplitude.Fig1.png){width=15cm}  
^^^ Fig. 1: CauchyAmplitude ($n=1$, $m=0$) with $a_0=5$, $x_{c0}=7$, $w_0=3$ and $b_0=1$.
---
References:
[Cauchy distribution at Wikipedia](https://en.wikipedia.org/wiki/Cauchy_distribution)




</value>
  </data>
  <data name="Peaks.GaussAmplitude" xml:space="preserve">
    <value>##### GaussAmplitude

This function evaluates a sum of Gaussian terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = a_0 \exp \left ( -\frac{(x-x_{c0})^2}{2 w_0^2} \right ) + ... + a_{n-1} \exp \left ( -\frac{(x-x_{cn-1})^2}{2 w_{n-1}^2} \right ) + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (heights) of the Gaussian terms

- $x_{c0} ... x_{cn-1}$ are the locations of the Gaussians

- $w_0 ... w_{n-1}$ are the widths of the Gaussians

- $b_0 ... b_m$ are the coefficients of the baseline polynomial of order  $m$

- $n$ is the number of Gaussian terms ($n \geq 1$)
- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

The number of Gaussian terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=0$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Peaks.GaussAmplitude.Fig1.png){width=15cm}  
^^^ Fig. 1: GaussAmplitude ($n=1$, $m=0$) with $a_0=5$, $x_{c0}=7$, $w_0=3$ and $b_0=1$.
---



</value>
  </data>
  <data name="Peaks.PearsonIVAmplitude" xml:space="preserve">
    <value>##### PearsonIVAmplitude

This function evaluates a sum of PearsonIV terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = a_0 \times PearsonIV \left ( x-x_{c0}, w_0, m_0, \nu_0 \right ) + ... + a_{n-1} \times PearsonIV \left ( x-x_{c{n-1}}, w_{n-1}, m_{n-1}, \nu_{n-1} \right ) + b_0 + b_1 x^1 + ... + b_q x^q 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (height of the maxima) of the PearsonIV terms

- $x_{c0} ... x_{cn-1}$ are the locations of the PearsonIV terms

- $w_0 ... w_{n-1}$ are the widths of the PearsonIV terms

- $m_0 ... m_{n-1}$ are the exponents of the PearsonIV terms ($m&gt;0$)

- $\nu_0 ... \nu_{n-1}$ are the skewness parameters of the PearsonIV terms

- $b_0 ... b_q$ are the coefficients of the baseline polynomial of order  $q$

- $n$ is the number of PearsonIV terms ($n \geq 1$)
- $q$ is the order of the baseline polynomial (set $q=-1$ to disable the baseline polynomial)


The original PearsonIV function was modified, such as that the location parameters describe the location of the maximal value of the function, and the amplitude parameter is the maximum y-value of the function:

[Original PearsonIV function](https://en.wikipedia.org/wiki/Pearson_distribution):
$$
PearsonIV_{Original}(x) = (1+z^2)^{-m} \exp (- \nu \arctan(z)) ; z = \frac{x-x_c}{w}
$$

Modified version used in Altaxo:

$$
PearsonIV(x) = \left ( \frac{1+z^2}{1+z_0^2} \right )^{-m} \exp (- \nu [\arctan(z)-\arctan(z_0)]) ; z_0 = -\frac{\nu}{2 m}, z = z_0 + \frac{x-x_c}{w} 
$$

The number of PearsonIV terms $n$ and the order of the baseline polynomial $q$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $q=-1$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Peaks.PearsonIVAmplitude.Fig1.png){width=15cm}  
^^^ Fig. 1: PearsonIV ($n=1$, $q=0$) with $a=4$, $x_c=7$, $w=3$, $m=2$, $b_0=1$, and $\nu=0$ (green) or  $\nu=5$ (orange), respectively. Note that in the limit $\nu=0$ the PearsonVII function is returned.
---

Literature:

[1] Description of the Pearson distribution family in [Wikipedia](https://en.wikipedia.org/wiki/Pearson_distribution)


</value>
  </data>
  <data name="Peaks.PearsonIVAmplitudeParametrizationHPW" xml:space="preserve">
    <value>##### PearsonIVAmplitude (Parametrization HPW)

This function evaluates a sum of PearsonIV terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = a_0 \times PearsonIV \left ( x-x_{c0}, w_0, m_0, \nu_0 \right ) + ... + a_{n-1} \times PearsonIV \left ( x-x_{c{n-1}}, w_{n-1}, m_{n-1}, \nu_{n-1} \right ) + b_0 + b_1 x^1 + ... + b_q x^q 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (height of the maxima) of the PearsonIV terms

- $x_{c0} ... x_{cn-1}$ are the locations of the PearsonIV terms

- $w_0 ... w_{n-1}$ are the widths of the PearsonIV terms

- $m_0 ... m_{n-1}$ are the exponents of the PearsonIV terms ($m&gt;0$)

- $\nu_0 ... \nu_{n-1}$ are the skewness parameters of the PearsonIV terms

- $b_0 ... b_q$ are the coefficients of the baseline polynomial of order  $q$

- $n$ is the number of PearsonIV terms ($n \geq 1$)
- $q$ is the order of the baseline polynomial (set $q=-1$ to disable the baselinepolynomial)


The original PearsonIV function was modified, such as that the location parameter $x_c$ describe the location of the maximal value of the function, the amplitude parameter is the maximum y-value of the function, and the width parameter $w$ is the approximate HWHM of the peak:

[Original PearsonIV function](https://en.wikipedia.org/wiki/Pearson_distribution):
$$
PearsonIV_{Original}(x, x_c, w, m, n) = (1+z^2)^{-m} \exp (- n \arctan(z)) ; z = \frac{x-x_c}{w}
$$

Modified version used in Altaxo:

$$
PearsonIV(x, x_c, w, m, \nu) = \left ( \frac{1+z^2}{1+\nu^2} \right )^{-m} \exp (- 2 m \nu [\arctan(z)+\arctan(\nu)]) ; z = \sqrt{(2^{1/m}-1)(1+\nu^2)} \left ( \frac{x-x_c}{w} \right ) - v 
$$

The number of PearsonIV terms $n$ and the order of the baseline polynomial $q$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $q=-1$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Peaks.PearsonIVAmplitudeParametrizationHPW.Fig1.png){width=15cm}  
^^^ Fig. 1: PearsonIVParametrizationHPW ($n=1$, $q=0$) with $a=4$, $x_c=7$, $w=3$, $m=2$, $b_0=1$, and $\nu=0$ (green) or  $\nu=5$ (orange), respectively. Note that in the limit $\nu=0$ the PearsonVII function (but in another parametrization) is returned.
---

Literature:

[1] Description of the Pearson distribution family in [Wikipedia](https://en.wikipedia.org/wiki/Pearson_distribution)


</value>
  </data>
  <data name="Peaks.PearsonVIIAmplitude" xml:space="preserve">
    <value>##### PearsonVIIAmplitude

This function evaluates a sum of PearsonVII terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = a_0 \times PearsonVII \left ( x-x_{c0}, w_0, m_0 \right ) + ... + a_{n-1} \times PearsonVII \left ( x-x_{c{n-1}}, w_{n-1}, m_{n-1} \right ) + b_0 + b_1 x^1 + ... + b_q x^q 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (height of the maxima) of the PearsonVII terms

- $x_{c0} ... x_{cn-1}$ are the locations of the PearsonVII terms

- $w_0 ... w_{n-1}$ are the widths of the PearsonVII terms

- $m_0 ... m_{n-1}$ are the exponents of the PearsonVII terms ($m&gt;0$)

- $b_0 ... b_q$ are the coefficients of the baseline polynomial of order  $q$

- $n$ is the number of PearsonVII terms ($n \geq 1$)
- $q$ is the order of the baseline polynomial (set $q=-1$ to disable the baseline polynomial)


The PearsonVII function is (see [Wikipedia](https://en.wikipedia.org/wiki/Pearson_distribution):
$$
PearsonVII(x) = (1+z^2)^{-m}  ; z = \frac{x-x_c}{w}
$$


The number of PearsonVII terms $n$ and the order of the baseline polynomial $q$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $q=-1$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Peaks.PearsonVIIAmplitude.Fig1.png){width=15cm}  
^^^ Fig. 1: PearsonVII ($n=1$, $q=0$) with $a=4$, $x_c=7$, $w=3$, and $m=2$ (green) or  $m=5$ (orange), respectively. Note that in the limit $m=1$ this is the Cauchy function, and in the limit $m \rightarrow \infty$ a Gaussian.
---

Literature:

[1] Description of the Pearson distribution family in [Wikipedia](https://en.wikipedia.org/wiki/Pearson_distribution)


</value>
  </data>
  <data name="Peaks.PseudoVoigtAmplitude" xml:space="preserve">
    <value>##### PseudoVoigt (Amplitude)

This function evaluates a sum of pseudo Voigt terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = a_0 \times PSVoigt \left ( x-x_{c0}, w_0, \nu_0 \right ) + ... + a_{n-1} \times PSVoigt \left ( x-x_{c{n-1}}, w_{n-1}, \nu_{n-1} \right ) + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $a_0 ... A_{n-1}$ are the heights of the pseudo Voigt terms

- $x_{c0} ... x_{cn-1}$ are the locations of the pseudo Voigt terms

- $w_0 ... w_{n-1}$ are the half-width-half-maximum values (HWHM) of the pseudo Voigt terms

- $\nu_0 ... \nu_{n-1}$ are the mixing parameters between the Lorentzian part and the Gaussian part

- $b_0 ... b_m$ are the coefficients of the baseline polynomial of order  $m$

- $n$ is the number of Voigt terms ($n \geq 1$)
- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

The pseudo Voigt function is an additive combination of a Gaussian function and a Lorentzian function:

Voigt:
$$
PSVoigt(x, x_c, w, \nu) = \nu L(x, x_c, w) + (1-\nu) G(x, x_c, w)
$$

Gauss:

$$
G(x, x_c, w) = \exp \left ( - \ln(2) \frac{(x-x_c)^2}{w^2} \right ) 
$$

Lorentzian:
$$
L(x, x_c, w) = \frac{1}{1+(\frac{x-x_c}{w})^2}
$$

The number of pseudo Voigt terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=-1$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Peaks.PseudoVoigtAmplitude.Fig1.png){width=15cm}  
^^^ Fig. 1: PseudoVoigtAmplitude ($n=1$, $m=0$) with $a_0=5$, $x_{c0}=7$, $w_0=3$, $b_0=1$, and $\nu_0=2$ (green) or  $\nu_0=1$ (orange), respectively. Note that in the limit $\nu_0=0$ the Gauss function is returned, in the limit $\nu_0=1$ the Lorentzian function.
---


</value>
  </data>
  <data name="Peaks.ShiftedLogNormalParametrizationNIST" xml:space="preserve">
    <value>##### Shifted Log-Normal (parametrization: NIST)

This function evaluates a sum of shifted log-normal distribution terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = a_0 \times SLN \left ( x, x_{c0}, w_0, \nu_0 \right ) + ... + a_{n-1} \times SLN \left ( x, x_{c{n-1}}, w_{n-1}, \nu_{n-1} \right ) + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

$$
SLN(x, x_c, w, \rho) = \exp \left ( \frac{-\ln 2}{(\ln \rho)^2} \left [ \ln \left ( \frac{(x-x_c)(\rho^2-1)}{w \rho} + 1 \right ) \right ]^{2} \right ) 
$$

is the shifted log-normal function and for which the parametrization is:

- $a_0 ... a_{n-1}$ are the heights of the shifted log-normal terms

- $x_{c0} ... x_{cn-1}$ are the locations of the maximum of the shifted log-normal terms

- $w_0 ... w_{n-1}$ are the full-width-half-maximum values (FWHM) of the shifted log-normal terms

- $\rho_0 ... \rho_{n-1}$ are skewness parameters of the shifted log-normal terms. The range is $0 &lt; \rho &lt; \infty$. For $\rho&lt;1$, the right slope is steeper than the left slope, for $\rho&gt;1$ the left slope is steeper than the right slope. For $\rho = 1$, the shape is Gaussian and therefore symmetric.

- $b_0 ... b_m$ are the coefficients of the baseline polynomial of order $m$

- $n$ is the number of shifted log-normal terms ($n \geq 1$)
- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

The number of shifted log-normal terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=-1$. 

For x-values for which the shifted log-normal function is undefined, the y-value of that term is set to zero, so that the resulting domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Peaks.ShiftedLogNormalParametrizationNIST.Fig1.png){width=15cm}  
^^^ Fig. 1: Shifted log-normal function ($n=1$, $m=0$) with $a_0=5$, $x_{c0}=7$, $w_0=6$, and $\rho_0=2$ (green) or  $\rho_0=1$ (orange), respectively. Note that for $\rho=1$ a Gaussian shape is returned.
---

&gt; **Note:**  
&gt; This function is used for instance to describe the intensity in dependence of the Raman shift of the Standard Reference Material 2242a from the National Institute of Standards and Technology NIST. In the formula given in the accompanying document, the number of terms is $n=1$, and the order of the baseline polynomial is $m=1$. The parameter $H$ corresponds to parameter $a_0$  here; the parameter m in the document is the linear slope of the background, which is parameter $b_1$ here; and the parameter $b$ in the document is the constant background, which is parameter $b_0$ here. 


</value>
  </data>
  <data name="Probability.CauchyArea" xml:space="preserve">
    <value>##### CauchyArea

This function evaluates a sum of Cauchy (Lorentzian) terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = \frac{A_0}{\pi w_0 \left[ 1 + \left ( \frac{x-x_{c0}}{w_0} \right ) ^2  \right ] } + ... + \frac{A_{n-1}}{\pi w_{n-1} \left [ 1 + \left ( \frac{x-x_{cn-1}}{w_{n-1}} \right ) ^2  \right ] } + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $A_0 ... A_{n-1}$ are the areas under the Cauchy terms

- $x_{c0} ... x_{cn-1}$ are the locations of the Cauchy terms

- $w_0 ... w_{n-1}$ are the half widths of half maximum (HWHM) of the Cauchy terms

- $b_0 ... b_m$ are the coefficients of the baseline polynomial of order  $m$

- $n$ is the number of Cauchy terms ($n \geq 1$)
- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

The number of Cauchy terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=0$. In order to get the probability density function of the Cauchy distribution, set $n=1$,  $m=-1$, and set the parameter $A_0$ fixed to $A_0=1$.


The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Probability.CauchyArea.Fig1.png){width=15cm}  
^^^ Fig. 1: CauchyArea ($n=1$, $m=0$) with $A_0=40$, $x_{c0}=7$, $w_0=3$ and $b_0=1$.
---
References:
[Cauchy distribution at Wikipedia](https://en.wikipedia.org/wiki/Cauchy_distribution)

</value>
  </data>
  <data name="Probability.GaussArea" xml:space="preserve">
    <value>##### GaussArea

This function evaluates a sum of Gaussian terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = \frac{A_0}{w_0 \sqrt{2 \pi}} \exp \left ( -\frac{(x-x_{c0})^2}{2 w_0^2} \right ) + ... + \frac{A_{n-1}}{w_{n-1} \sqrt{2 \pi}} \exp \left ( -\frac{(x-x_{cn-1})^2}{2 w_{n-1}^2} \right ) + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $A_0 ... A_{n-1}$ are the areas under the Gaussian terms

- $x_{c0} ... x_{cn-1}$ are the locations of the Gaussian terms

- $w_0 ... w_{n-1}$ are the widths of the Gaussian terms

- $b_0 ... b_m$ are the coefficients of the baseline polynomial of order  $m$

- $n$ is the number of Gaussian terms ($n \geq 1$)
- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

The number of Gaussian terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=0$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Probability.GaussArea.Fig1.png){width=15cm}  
^^^ Fig. 1: GaussArea ($n=1$, $m=0$) with $A_0=40$, $x_{c0}=7$, $w_0=3$ and $b_0=1$.
---


</value>
  </data>
  <data name="Probability.PearsonIVArea" xml:space="preserve">
    <value>##### PearsonIVArea

This function evaluates a sum of PearsonIV terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = A_0 \times PearsonIV \left ( x-x_{c0}, w_0, m_0, \nu_0 \right ) + ... + A_{n-1} \times PearsonIV \left ( x-x_{c{n-1}}, w_{n-1}, m_{n-1}, \nu_{n-1} \right ) + b_0 + b_1 x^1 + ... + b_q x^q 
$$

in which:

- $A_0 ... A_{n-1}$ are the areas of the PearsonIV terms

- $x_{c0} ... x_{cn-1}$ are the location parameters of the PearsonIV terms

- $w_0 ... w_{n-1}$ are the widths of the PearsonIV terms

- $m_0 ... m_{n-1}$ are the exponents of the PearsonIV terms ($m&gt;1/2$)

- $\nu_0 ... \nu_{n-1}$ are the skewness parameters of the PearsonIV terms

- $b_0 ... b_q$ are the coefficients of the baseline polynomial of order  $q$

- $n$ is the number of PearsonIV terms ($n \geq 1$)
- $q$ is the order of the baseline polynomial (set $q=-1$ to disable the baseline polynomial)


&gt; Please note that the location parameters $x_c$ are **not** the location of the maximum function values of the terms!
&gt; (see figure below)

The [PearsonIV function](https://en.wikipedia.org/wiki/Pearson_distribution) is scaled in a way that its area
under the curve is 1: 

$$
PearsonIV(x) = \frac{ \left| \frac{\Gamma(m + i v/2)}{\Gamma(m)} \right|^2}{w Beta(m-1/2, 1/2)} (1+z^2)^{-m} \exp (- \nu \arctan(z)) ; z = \frac{x-x_c}{w}
$$

The location of the maximum function value is at:

$$
x_{max} = x_c - \frac{w v}{ 2 m}
$$

The number of PearsonIV terms $n$ and the order of the baseline polynomial $q$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $q=-1$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Probability.PearsonIVArea.Fig1.png){width=15cm}  
^^^ Fig. 1: PearsonIVArea ($n=1$, $q=0$) with $A=20$, $x_c=7$, $w=3$, $m=2$, $b_0=1$, and $\nu=0$ (green) or  $\nu=5$ (orange), respectively. Note that despite the fact that $x_c=7$ is equal for both functions, the locations of the maxima are quite different. Only if $\nu=0$, the location of the maximum function value is  $x_c$.
---

Literature:

[1] Description of the Pearson distribution family in [Wikipedia](https://en.wikipedia.org/wiki/Pearson_distribution)


</value>
  </data>
  <data name="Probability.VoigtArea" xml:space="preserve">
    <value>##### VoigtArea

This function evaluates a sum of Voigt terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = A_0 \times Voigt \left ( x-x_{c0}, w_0, \gamma_0 \right ) + ... + A_{n-1} \times Voigt \left ( x-x_{c{n-1}}, w_{n-1}, \gamma_{n-1} \right ) + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $A_0 ... A_{n-1}$ are the areas under the Voigt terms

- $x_{c0} ... x_{cn-1}$ are the locations of the Voigt terms

- $w_0 ... w_{n-1}$ are the widths of the Gaussian part of the Voigt terms

- $\gamma_0 ... \gamma_{n-1}$ are the parameters of the Lorentzian part of the Voigt terms

- $b_0 ... b_m$ are the coefficients of the baseline polynomial of order  $m$

- $n$ is the number of Voigt terms ($n \geq 1$)
- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

The Voigt function is a convolution of a Gaussian function and a Lorentzian function:

Voigt:
$$
Voigt(x) = \int G(\tau)L(x-\tau) d\tau
$$

Gauss:

$$
G(x,w) = \frac{1}{w \sqrt{2 \pi}} \exp \left ( -\frac{x^2}{2 w^2} \right ) 
$$

Lorentzian:
$$
L(x, \gamma) = \frac{\gamma}{\pi(x^2 + \gamma^2)}
$$

The number of Voigt terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=-1$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Probability.VoigtArea.Fig1.png){width=15cm}  
^^^ Fig. 1: VoigtArea ($n=1$, $m=0$) with $A_0=40$, $x_{c0}=7$, $w_0=3$, $b_0=1$, and $\gamma_0=2$ (green) or  $\gamma_0=0$ (orange), respectively. Note that in the limit $\gamma_0=0$ the Gauss function is returned.
---


</value>
  </data>
  <data name="Probability.VoigtAreaParametrizationNu" xml:space="preserve">
    <value>##### VoigtArea (Parametrization Nu)

This function evaluates a sum of Voigt terms, plus a baseline polynomial with one or multiple terms, according to

$$
y(x) = A_0 \times Voigt \left ( x-x_{c0}, w_0, \nu_0 \right ) + ... + A_{n-1} \times Voigt \left ( x-x_{c{n-1}}, w_{n-1}, \nu_{n-1} \right ) + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $A_0 ... A_{n-1}$ are the areas under the Voigt terms

- $x_{c0} ... x_{cn-1}$ are the locations of the Voigt terms

- $w_0 ... w_{n-1}$ are the approximate half-width-half-maximum (HWHM) values of the peaks

- $\nu_0 ... \nu_{n-1}$ are the mixing parameters (range: 0..1) that determine the Lorentzian'ness or Gauss'ness of the terms

- $b_0 ... b_m$ are the coefficients of the background polynomial of order  $m$

- $n$ is the number of Voigt terms ($n \geq 1$)
- $m$ is the order of the baseline polynomial (set $m=-1$ to disable the baseline polynomial)

The original definition of the Voigt function is a convolution of a Gaussian function and a Lorentzian function:

Voigt:
$$
Voigt(x, \sigma, \gamma) = \int G(\tau)L(x-\tau) d\tau
$$

Gauss:

$$
G(x,w) = \frac{1}{w \sqrt{2 \pi}} \exp \left ( -\frac{x^2}{2 \sigma^2} \right ) 
$$

Lorentzian:
$$
L(x, \gamma) = \frac{\gamma}{\pi(x^2 + \gamma^2)}
$$

Here, another parametrization with the two parameters $w$ and $\nu$ is used. The new parameters are related to the original parameters $\sigma, \gamma$ by:

$$
\sigma = w \sqrt{\frac{\nu}{\ln(4)}}; \gamma = w(1-\nu)
$$

Parameter $w$ is the approximate HWHM of the peak, and parameter $\nu$ ($\nu=[0..1]$) determines the ratio between $\sigma$ and $\gamma$, i.e. whether the peak is more Lorentzian like ($\nu=0$) or more Gauss like ($\nu=1$).
This parametrization is preferred over the original Voigt function if fitting with parameter constraints is performed.

The number of Voigt terms $n$ and the order of the baseline polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=-1$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Probability.VoigtAreaParametrizationNu.Fig1.png){width=15cm}  
^^^ Fig. 1: VoigtAreaParametrizationNu ($n=1$, $m=0$) with $A_0=40$, $x_{c0}=7$, $w_0=3$, $b_0=1$, and $\nu_0=0$ (green) or  $\nu_0=1$ (orange), respectively. Note that in the limit $\nu_0=0$ the peak is a Lorentzian, in the limit of $\nu_0=1$ the peak is a Gaussian.
---


</value>
  </data>
  <data name="Relaxation.Modulus.HavriliakNegamiModulusRelaxationFrequency" xml:space="preserve">
    <value>###### Havriliak-Negami modulus relaxation (circular frequency)

This function models the complex dynamic modulus in dependence on the frequency as:


$$
M^*(f) = M'(f) + i M''(f) = M_{\infty} + (M_{0}-M_{\infty})\frac{1}{(1+(i 2\pi  f \tau)^{\alpha})^{\gamma}} 
$$

or with a generalized flow term (both equations are equivalent if $\sigma=0$) :

$$
M^*(f) = M'(f) + i M''(f) = \left\{\frac{1}{M_{\infty} + (M_{0}-M_{\infty})\frac{1}{(1+(i 2 \pi f \tau)^{\alpha})^{\gamma}} } + \frac{i \sigma}{2\pi f} \right \}^{-1}
$$

with the frequency $f$  being the independent variable, and $M'(f)$ and $M''(f)$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*(f)$.

The parameters are:

- $M_0$ : low frequency modulus limit
- $M_{\infty}$ : high frequency modulus limit
- $\tau$ : relaxation time
- $\alpha$, $\gamma$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $)
- $\sigma$ : generalized flow term, for instance fluidity (inverse viscosity), conductivity etc.

&gt; Note:  
&gt; Since in most cases $M_0$ and $M_{\infty}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.HavriliakNegamiModulusRelaxationFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.HavriliakNegamiModulusRelaxationFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$, $\alpha=1$ and $\gamma=1$) without and with flow term. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Relaxation.Modulus.HavriliakNegamiModulusRelaxationOmega" xml:space="preserve">
    <value>###### Havriliak-Negami modulus relaxation (circular frequency)

This function models the complex dynamic modulus in dependence on the circular frequency as:


$$
M^*(\omega) = M'(\omega) + i M''(\omega) = M_{\infty} + (M_{0}-M_{\infty})\frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} 
$$

or with a generalized flow term (both equations are equivalent if $\sigma=0$) :

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left\{\frac{1}{M_{\infty} + (M_{0}-M_{\infty})\frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} } + \frac{i \sigma}{\omega} \right \}^{-1}
$$

with the circular frequency $\omega = 2\pi f$  being the independent variable, and $M'(\omega)$ and $M''(\omega)$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*(\omega)$.

The parameters are:

- $M_0$ : low frequency modulus limit
- $M_{\infty}$ : high frequency modulus limit
- $\tau$ : relaxation time
- $\alpha$, $\gamma$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $)
- $\sigma$ : generalized flow term, for instance fluidity (inverse viscosity), conductivity etc.

&gt; Note:  
&gt; Since in most cases $M_0$ and $M_{\infty}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.HavriliakNegamiModulusRelaxationOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.HavriliakNegamiModulusRelaxationOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$, $\alpha=1$ and $\gamma=1$) without and with flow term. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Relaxation.Modulus.KohlrauschModulusRelaxationFrequency" xml:space="preserve">
    <value>###### Kohlrausch modulus relaxation (frequency)

This function models the complex dynamic modulus in dependence on the  frequency as:

$$
M^*(f) = M'(f) + i M''(f) = M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i 2 \pi f t') \frac{d\Phi}{d t} dt' \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

or with a generalized flow term (both equations are equivalent if $\sigma=0$) :

$$
M^*(f) = M'(f) + i M''(f) = \left\{ \left [ M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i 2 \pi f t') \frac{d\Phi}{d t} dt' \right ]^{-1} - \frac{i }{2 \pi f \eta} \right \}^{-1}
$$

based on the Fourier transform of the derivative of the time-domain Kohlrausch function $\Phi(t)$.

The quantities are described below.
It is a special case of the underlying base function with the options  `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`,  `InvertViscosity=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega$ with one relaxation term and a flow term as:

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left\{ \left [ M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' \right ]^{-1} + Flowterm \right \}^{-1} \\

\Phi_k(t) = \exp\left [ -\left ( \frac{t}{\tau_k}\right )^{\beta} \right ] \\

Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}} 
$$

based on the Fourier transformation of the time derivative of the Kohlrausch function $\Phi(t)$, with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'(\omega)$ and $M''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic modulus $M^*(\omega)$.

Typical use cases are fits to the complex to the complex mechanical modulus $M^*$ (e.g. shear modulus $G^*$ or Young's modulus $Y^*$)

The parameters are:

- $M_{0}$ : low frequency modulus limit
- $M_{\infty}$ : high frequency modulus limit
- $\tau$ : relaxation time
- $\beta$ : shape exponent (usually $ 0&lt;\beta\le 1 $)
- $\sigma$ : fluidity (inverse viscosity)
- $\eta$ : viscosity


The available options are:
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_0$ and $M_{\infty}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.KohlrauschModulusRelaxationFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch fit functions (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.KohlrauschModulusRelaxationFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch fit functions (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\beta=1$) without and with flow term. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)

</value>
  </data>
  <data name="Relaxation.Modulus.KohlrauschModulusRelaxationOmega" xml:space="preserve">
    <value>###### Kohlrausch modulus relaxation (circular frequency)

This function models the complex dynamic modulus in dependence on the circular frequency as:

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

or with a generalized flow term (both equations are equivalent if $\sigma=0$) :

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left\{ \left [ M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' \right ]^{-1} - \frac{i }{\omega \eta} \right \}^{-1}
$$

based on the Fourier transform of the derivative of the time-domain Kohlrausch function $\Phi(t)$.

The quantities are described below.
It is a special case of the underlying base function with the options  `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`,  `InvertViscosity=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega$ with one relaxation term and a flow term as:

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left\{ \left [ M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' \right ]^{-1} + Flowterm \right \}^{-1} \\

\Phi_k(t) = \exp\left [ -\left ( \frac{t}{\tau_k}\right )^{\beta} \right ] \\

Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}} 
$$

based on the Fourier transformation of the time derivative of the Kohlrausch function $\Phi(t)$, with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'(\omega)$ and $M''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic modulus $M^*(\omega)$.

Typical use cases are fits to the complex to the complex mechanical modulus $M^*$ (e.g. shear modulus $G^*$ or Young's modulus $Y^*$)

The parameters are:

- $M_{0}$ : low frequency modulus limit
- $M_{\infty}$ : high frequency modulus limit
- $\tau$ : relaxation time
- $\beta$ : shape exponent (usually $ 0&lt;\beta\le 1 $)
- $\sigma$ : fluidity (inverse viscosity)
- $\eta$ : viscosity


The available options are:
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_0$ and $M_{\infty}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.KohlrauschModulusRelaxationOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch fit functions (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.KohlrauschModulusRelaxationOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch fit functions (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\beta=1$) without and with flow term. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)

</value>
  </data>
  <data name="Relaxation.Modulus.Lg10HavriliakNegamiModulusRelaxationFrequency" xml:space="preserve">
    <value>###### Havriliak-Negami modulus relaxation (frequency)

This function models the complex dynamic modulus in dependence on the frequency as:


$$
M^*(f) = M'(f) + i M''(f) = M_{\infty} + (M_{0}-M_{\infty})\frac{1}{(1+(i 2\pi  f \tau)^{\alpha})^{\gamma}} 
$$

or with a generalized flow term (both equations are equivalent if $\sigma=0$) :

$$
M^*(f) = M'(f) + i M''(f) = \left\{\frac{1}{M_{\infty} + (M_{0}-M_{\infty})\frac{1}{(1+(i 2 \pi f \tau)^{\alpha})^{\gamma}} } + \frac{i \sigma}{2\pi f} \right \}^{-1}
$$

with the frequency $f$  being the independent variable, and $\log_{10}(M'(f))$ and $\log_{10}(M''(f))$ being the dependent variables, namely the decadic logarithm of the real and imaginary part of the complex dynamic modulus $M^*(f)$.

The parameters are:

- $M_0$ : low frequency modulus limit
- $M_{\infty}$ : high frequency modulus limit
- $\tau$ : relaxation time
- $\alpha$, $\gamma$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $)
- $\sigma$ : generalized flow term, for instance fluidity (inverse viscosity), conductivity etc.

&gt; Note:  
&gt; If your data are not logarithmized already, please use a DecadicLogarithmTransformation for your data.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.Lg10HavriliakNegamiModulusRelaxationFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.Lg10HavriliakNegamiModulusRelaxationFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$, $\alpha=1$ and $\gamma=1$) without and with flow term. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Relaxation.Modulus.Lg10HavriliakNegamiModulusRelaxationOmega" xml:space="preserve">
    <value>###### Havriliak-Negami modulus relaxation (circular frequency)

This function models the complex dynamic modulus in dependence on the circular frequency as:


$$
M^*(\omega) = M'(\omega) + i M''(\omega) = M_{\infty} + (M_{0}-M_{\infty})\frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} 
$$

or with a generalized flow term (both equations are equivalent if $\sigma=0$) :

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left\{\frac{1}{M_{\infty} + (M_{0}-M_{\infty})\frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} } + \frac{i \sigma}{\omega} \right \}^{-1}
$$

with the circular frequency $\omega = 2\pi f$  being the independent variable, and $\log_{10}(M'(\omega))$ and $\log_{10}(M''(\omega))$ being the dependent variables, namely the decadic logarithm of the real and imaginary part of the complex dynamic modulus $M^*(\omega)$.

The parameters are:

- $M_0$ : low frequency modulus limit
- $M_{\infty}$ : high frequency modulus limit
- $\tau$ : relaxation time
- $\alpha$, $\gamma$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $)
- $\sigma$ : generalized flow term, for instance fluidity (inverse viscosity), conductivity etc.

&gt; Note:  
&gt; If your data are not logarithmized already, please use a DecadicLogarithmTransformation for your data.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.Lg10HavriliakNegamiModulusRelaxationOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.Lg10HavriliakNegamiModulusRelaxationOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$, $\alpha=1$ and $\gamma=1$) without and with flow term. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Relaxation.Modulus.Lg10KohlrauschModulusRelaxationFrequency" xml:space="preserve">
    <value>###### Kohlrausch modulus relaxation (frequency)

This function models the complex dynamic modulus in dependence on the  frequency as:

$$
M^*(f) = M'(f) + i M''(f) = M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i 2 \pi f t') \frac{d\Phi}{d t} dt' \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

or with a generalized flow term (both equations are equivalent if $\sigma=0$) :

$$
M^*(f) = M'(f) + i M''(f) = \left\{ \left [ M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i 2 \pi f t') \frac{d\Phi}{d t} dt' \right ]^{-1} - \frac{i }{2 \pi f \eta} \right \}^{-1}
$$

based on the Fourier transform of the derivative of the time-domain Kohlrausch function $\Phi(t)$.

Here, the values of the real and imaginary part of the calculated modulus are **logarithmized** for the output:

$$
lgM'(f) = \log_{10}(M'(f)) \\
lgM''(f) = \log_{10}(M''(f)) \\
$$

Should your data are not logarithmized, use a DecadicLogarithmTransformation to logarithmize them, too.

The quantities are described below.
It is a special case of the underlying base function with the options  `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`,  `InvertViscosity=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega$ with one relaxation term and a flow term as:

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left\{ \left [ M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' \right ]^{-1} + Flowterm \right \}^{-1} \\

\Phi_k(t) = \exp\left [ -\left ( \frac{t}{\tau_k}\right )^{\beta} \right ] \\

Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}} 
$$

based on the Fourier transformation of the time derivative of the Kohlrausch function $\Phi(t)$, with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'(\omega)$ and $M''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic modulus $M^*(\omega)$.

Typical use cases are fits to the complex to the complex mechanical modulus $M^*$ (e.g. shear modulus $G^*$ or Young's modulus $Y^*$)

The parameters are:

- $M_{0}$ : low frequency modulus limit
- $M_{\infty}$ : high frequency modulus limit
- $\tau$ : relaxation time
- $\beta$ : shape exponent (usually $ 0&lt;\beta\le 1 $)
- $\sigma$ : fluidity (inverse viscosity)
- $\eta$ : viscosity


The available options are:
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_0$ and $M_{\infty}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.Lg10KohlrauschModulusRelaxationFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch fit functions (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.Lg10KohlrauschModulusRelaxationFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch fit functions (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\beta=1$) without and with flow term. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)

</value>
  </data>
  <data name="Relaxation.Modulus.Lg10KohlrauschModulusRelaxationOmega" xml:space="preserve">
    <value>###### Kohlrausch modulus relaxation (circular frequency)

This function models the complex dynamic modulus in dependence on the circular frequency as:

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

or with a generalized flow term (both equations are equivalent if $\sigma=0$) :

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left\{ \left [ M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' \right ]^{-1} - \frac{i }{\omega \eta} \right \}^{-1}
$$

based on the Fourier transform of the derivative of the time-domain Kohlrausch function $\Phi(t)$.

Here, the values of the real and imaginary part of the calculated modulus are **logarithmized** for the output:

$$
lgM'(\omega) = \log_{10}(M'(\omega)) \\
lgM''(\omega) = \log_{10}(M''(\omega)) \\
$$

Should your data are not logarithmized, use a DecadicLogarithmTransformation to logarithmize them, too.

The quantities are described below.
It is a special case of the underlying base function with the options  `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`,  `InvertViscosity=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega$ with one relaxation term and a flow term as:

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left\{ \left [ M_{\infty} + (M_{0}-M_{\infty})\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' \right ]^{-1} + Flowterm \right \}^{-1} \\

\Phi_k(t) = \exp\left [ -\left ( \frac{t}{\tau_k}\right )^{\beta} \right ] \\

Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}} 
$$

based on the Fourier transformation of the time derivative of the Kohlrausch function $\Phi(t)$, with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'(\omega)$ and $M''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic modulus $M^*(\omega)$.

Typical use cases are fits to the complex to the complex mechanical modulus $M^*$ (e.g. shear modulus $G^*$ or Young's modulus $Y^*$)

The parameters are:

- $M_{0}$ : low frequency modulus limit
- $M_{\infty}$ : high frequency modulus limit
- $\tau$ : relaxation time
- $\beta$ : shape exponent (usually $ 0&lt;\beta\le 1 $)
- $\sigma$ : fluidity (inverse viscosity)
- $\eta$ : viscosity


The available options are:
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_0$ and $M_{\infty}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.Lg10KohlrauschModulusRelaxationOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch fit functions (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Relaxation.Modulus.Lg10KohlrauschModulusRelaxationOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch fit functions (with $M_0=10^6$, $M_{\infty}=10^9$, $\tau=1$ and $\beta=1$) without and with flow term. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)

</value>
  </data>
  <data name="Retardation.Dielectrics.HavriliakNegamiComplexFrequency" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of the relative dielectric permittivity (frequency)

This function models the retardation of the relative dielectric permittivity in dependence on the frequency $f$, including a term for the DC electric conductivity:

$$
\varepsilon^*(f) = \varepsilon'(f) - i \varepsilon''(f) = \varepsilon_{\infty} +  \frac{\Delta \varepsilon}{(1+(i 2 \pi f \tau)^{\alpha})^{\gamma}}   -\frac{i \sigma_{DC}}{2 \pi f \varepsilon_0}
$$

with $\varepsilon^*$ being the complex relative dielectric permittivity of a material (the other quantities are described below).
It is a special case of the underlying base function with the options `NumberOfTerms=1`, `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=true`, `InvertViscosity=true`, `InvertResult=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\frac{\Delta \chi_{k}}{(1+(i \omega \tau_k)^{\alpha_k})^{\gamma_k}} }  + Flowterm \\
Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\alpha_k$, $\gamma_k$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $) of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Dielectrics.HavriliakNegamiComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami (with $\varepsilon_{\infty}=2$, $\Delta \varepsilon=10$, $\tau=1$ and $\sigma=0$). The values for $\alpha$ and $\gamma$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Dielectrics.HavriliakNegamiComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami (with $\varepsilon_{\infty}=2$, $\Delta \varepsilon=10$, $\tau=1$, $\alpha=1$ and $\gamma=1$) without and with DC conductivity. The values for $\sigma_{DC}$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.Dielectrics.HavriliakNegamiComplexOmega" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of the relative dielectric permittivity (circular frequency)

This function models the retardation of the relative dielectric permittivity in dependence on the circular frequency $\omega$, including a term for the DC electric conductivity:

$$
\varepsilon^*(\omega) = \varepsilon'(\omega) - i \varepsilon''(\omega) = \varepsilon_{\infty} +  \frac{\Delta \varepsilon}{(1+(i \omega \tau)^{\alpha})^{\gamma}}   -\frac{i \sigma_{DC}}{\omega \varepsilon_0}
$$

with $\varepsilon^*$ being the complex relative dielectric permittivity of a material (the other quantities are described below).
It is a special case of the underlying base function with the options `NumberOfTerms=1`, `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=true`, `InvertViscosity=true`, `InvertResult=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\frac{\Delta \chi_{k}}{(1+(i \omega \tau_k)^{\alpha_k})^{\gamma_k}} }  + Flowterm \\
Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\alpha_k$, $\gamma_k$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $) of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Dielectrics.HavriliakNegamiComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami (with $\varepsilon_{\infty}=2$, $\Delta \varepsilon=10$, $\tau=1$ and $\sigma=0$). The values for $\alpha$ and $\gamma$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Dielectrics.HavriliakNegamiComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami (with $\varepsilon_{\infty}=2$, $\Delta \varepsilon=10$, $\tau=1$, $\alpha=1$ and $\gamma=1$) without and with DC conductivity. The values for $\sigma_{DC}$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.Dielectrics.KohlrauschComplexFrequency" xml:space="preserve">
    <value>###### Kohlrausch retardation of the relative dielectric permittivity (frequency)

This function models the retardation of the relative dielectric permittivity in dependence on the frequency $f$, including a term for the DC electric conductivity:

$$
\varepsilon^*(f) = \varepsilon'(f) - i \varepsilon''(f) = \varepsilon_{\infty} + \Delta\varepsilon \int_0^{\infty} \exp(- i 2 \pi f t') \frac{d\Phi}{d t} dt' - \frac{i \sigma_{DC}}{2 \pi f \varepsilon_0} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

based on the Fourier transform of the derivative of the time-domain Kohlrausch function $\Phi(t)$:

with $\varepsilon^*$ being the complex relative dielectric permittivity of a material (the other quantities are described below).
It is a special case of the underlying base function with the options `NumberOfTerms=1`, `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=true`, `InvertViscosity=true`, `InvertResult=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\left [ \Delta \chi_{k}\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi_k}{d t} dt' \right ]}   + Flowterm \\

\Phi_k(t) = \exp\left [ -\left ( \frac{t}{\tau_k}\right )^{\beta_k} \right ] \\

Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}} 
$$

based on the Fourier transformation of the time derivative of the Kohlrausch function $\Phi(t)$, with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\beta_k$ : shape exponent (usually $ 0&lt;\beta\le 1 $ of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Dielectrics.KohlrauschComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch susceptibility fit functions (with $\varepsilon_{\infty}=2$, $\Delta \varepsilon=10$, $\tau=1$ and $\sigma_{DC}=0$). The values for $\beta$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Dielectrics.KohlrauschComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch susceptibility fit functions (with $\varepsilon_{\infty}=2$, $\Delta \varepsilon=10$, $\tau=1$ and $\beta=1$) without and with DC conductivity. The values for $\sigma_{DC}$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)
</value>
  </data>
  <data name="Retardation.Dielectrics.KohlrauschComplexOmega" xml:space="preserve">
    <value>###### Kohlrausch retardation of the relative dielectric permittivity (circular frequency)

This function models the retardation of the relative dielectric permittivity in dependence on the circular frequency $\omega$, including a term for the DC electric conductivity:

$$
\varepsilon^*(\omega) = \varepsilon'(\omega) - i \varepsilon''(\omega) = \varepsilon_{\infty} + \Delta\varepsilon \int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' - \frac{i \sigma_{DC}}{\omega\varepsilon_0} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

based on the Fourier transform of the derivative of the time-domain Kohlrausch function $\Phi(t)$:

with $\varepsilon^*$ being the complex relative dielectric permittivity of a material (the other quantities are described below).
It is a special case of the underlying base function with the options `NumberOfTerms=1`, `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=true`, `InvertViscosity=true`, `InvertResult=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\left [ \Delta \chi_{k}\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi_k}{d t} dt' \right ]}   + Flowterm \\

\Phi_k(t) = \exp\left [ -\left ( \frac{t}{\tau_k}\right )^{\beta_k} \right ] \\

Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}} 
$$

based on the Fourier transformation of the time derivative of the Kohlrausch function $\Phi(t)$, with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\beta_k$ : shape exponent (usually $ 0&lt;\beta\le 1 $ of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Dielectrics.KohlrauschComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch susceptibility fit functions (with $\varepsilon_{\infty}=2$, $\Delta \varepsilon=10$, $\tau=1$ and $\sigma_{DC}=0$). The values for $\beta$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Dielectrics.KohlrauschComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch susceptibility fit functions (with $\varepsilon_{\infty}=2$, $\Delta \varepsilon=10$, $\tau=1$ and $\beta=1$) without and with DC conductivity. The values for $\sigma_{DC}$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)
</value>
  </data>
  <data name="Retardation.General.HavriliakNegamiComplexFrequency" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of a general susceptibility (frequency)

This function models the retardation of a general susceptibility (e.g. mechanical complicance) in dependence on the frequency $f$, including a term for the flow:

$$
\chi^*(f) = \chi'(f) - i \chi''(f) = \chi_{\infty} +  \frac{\Delta \chi}{(1+(i 2 \pi f \tau)^{\alpha})^{\gamma}}   -\frac{i }{2 \pi f \eta}
$$

The quantities are described below.
It is a special case of the underlying base function with the options `NumberOfTerms=1`, `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=false`, `InvertViscosity=false`, `InvertResult=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\frac{\Delta \chi_{k}}{(1+(i \omega \tau_k)^{\alpha_k})^{\gamma_k}} }  + Flowterm \\
Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\alpha_k$, $\gamma_k$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $) of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.General.HavriliakNegamiComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami (with $\chi_{\infty}=10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.General.HavriliakNegamiComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami (with $\chi_{\infty}=10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1$, $\alpha=1$ and $\gamma=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.General.HavriliakNegamiComplexOmega" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of a general susceptibility (circular frequency)

This function models the retardation of a general susceptibility (e.g. mechanical complicance) in dependence on the circular frequency $\omega$, including a term for the flow:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \frac{\Delta \chi}{(1+(i \omega \tau)^{\alpha})^{\gamma}}   -\frac{i }{\omega \eta}
$$

The quantities are described below.
It is a special case of the underlying base function with the options `NumberOfTerms=1`, `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=false`, `InvertViscosity=false`, `InvertResult=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\frac{\Delta \chi_{k}}{(1+(i \omega \tau_k)^{\alpha_k})^{\gamma_k}} }  + Flowterm \\
Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\alpha_k$, $\gamma_k$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $) of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.General.HavriliakNegamiComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami (with $\chi_{\infty}=10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.General.HavriliakNegamiComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami (with $\chi_{\infty}=10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1$, $\alpha=1$ and $\gamma=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.General.KohlrauschComplexFrequency" xml:space="preserve">
    <value>###### Kohlrausch retardation of a general susceptibility (frequency)

This function models the retardation of a general susceptibility (e.g. mechanical complicance) in dependence on the frequency $f$, including a term for the flow:


$$
\chi^*(f) = \chi'(f) - i \chi''(f) = \chi_{\infty} + \Delta\chi \int_0^{\infty} \exp(- i 2 \pi f t') \frac{d\Phi}{d t} dt' - \frac{i }{2 \pi f \eta} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

based on the Fourier transform of the derivative of the time-domain Kohlrausch function $\Phi(t)$:

The quantities are described below.
It is a special case of the underlying base function with the options `NumberOfTerms=1`, `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=false`, `InvertViscosity=false`, `InvertResult=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\left [ \Delta \chi_{k}\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi_k}{d t} dt' \right ]}   + Flowterm \\

\Phi_k(t) = \exp\left [ -\left ( \frac{t}{\tau_k}\right )^{\beta_k} \right ] \\

Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}} 
$$

based on the Fourier transformation of the time derivative of the Kohlrausch function $\Phi(t)$, with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\beta_k$ : shape exponent (usually $ 0&lt;\beta\le 1 $ of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.General.KohlrauschComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch susceptibility fit functions (with $\chi_{\infty}=10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.General.KohlrauschComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch susceptibility fit functions (with $\chi_{\infty}=10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1$ and $\beta=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)
</value>
  </data>
  <data name="Retardation.General.KohlrauschComplexOmega" xml:space="preserve">
    <value>###### Kohlrausch retardation of a general susceptibility (circular frequency)

This function models the retardation of a general susceptibility (e.g. mechanical complicance) in dependence on the circular frequency $\omega$, including a term for the flow:


$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} + \Delta\chi \int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' - \frac{i }{\omega\eta} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

based on the Fourier transform of the derivative of the time-domain Kohlrausch function $\Phi(t)$.

The quantities are described below.
It is a special case of the underlying base function with the options `NumberOfTerms=1`, `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=false`, `InvertViscosity=false`, `InvertResult=false` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\left [ \Delta \chi_{k}\int_0^{\infty} \exp(- i \omega t') \frac{d\Phi_k}{d t} dt' \right ]}   + Flowterm \\

\Phi_k(t) = \exp\left [ -\left ( \frac{t}{\tau_k}\right )^{\beta_k} \right ] \\

Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}} 
$$

based on the Fourier transformation of the time derivative of the Kohlrausch function $\Phi(t)$, with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\beta_k$ : shape exponent (usually $ 0&lt;\beta\le 1 $ of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.General.KohlrauschComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch susceptibility fit functions (with $\chi_{\infty}=10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1$ and $\eta=10^{33}$). The values for $beta$ are indicated in the legend.

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.General.KohlrauschComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch susceptibility fit functions (with $\chi_{\infty}=10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1$ and $\beta=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)
</value>
  </data>
  <data name="Retardation.Modulus.HavriliakNegamiComplexFrequency" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of a general modulus (frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the frequency $f$ with a retardation and a flow term:


$$
M^*(f) = M'(f) + i M''(f) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \frac{1}{(1+(i  2 \pi f \tau)^{\alpha})^{\gamma}} - \frac{i }{2 \pi f \eta} \right ]^{-1}
$$

The quantities are described below.
It is a special case of the underlying base function with the options `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `InvertViscosity=false`  and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.

The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega=2 \pi f$ as:

$$
M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} + Flowterm \right ]^{-1} \\
Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'$ and $M''$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*$.

The typical use case is a fit to the complex dynamic mechanical modulus (e.g. shear modulus $G^*$ or Young's modulus $Y^*$).

The parameters are:

- $M_{\infty}$ : high frequency modulus limit
- $M_0$ : low frequency modulus limit
- $\tau$ : retardation time (attention: this is not the same as the relaxation time, e.g. the maximum of $M''$ is considerably shifted with respect to $ 1/\tau $ !)
- $\alpha$, $\gamma$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $)
- $\sigma$ : generalized fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:

- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency $\omega$ is used as the independent variable.

- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.

- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.

- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_{\infty}$ and $M_0$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.HavriliakNegamiComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend. 

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.HavriliakNegamiComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$, $\alpha=1$ and $\gamma=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.Modulus.HavriliakNegamiComplexOmega" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of a general modulus (circular frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the circular frequency $\omega$ with a retardation and a flow term:


$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} - \frac{i }{\omega \eta} \right ]^{-1}
$$

The quantities are described below.
It is a special case of the underlying base function with the options `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `InvertViscosity=false`  and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.

The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega=2 \pi f$ as:

$$
M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} + Flowterm \right ]^{-1} \\
Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'$ and $M''$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*$.

The typical use case is a fit to the complex dynamic mechanical modulus (e.g. shear modulus $G^*$ or Young's modulus $Y^*$).

The parameters are:

- $M_{\infty}$ : high frequency modulus limit
- $M_0$ : low frequency modulus limit
- $\tau$ : retardation time (attention: this is not the same as the relaxation time, e.g. the maximum of $M''$ is considerably shifted with respect to $ 1/\tau $ !)
- $\alpha$, $\gamma$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $)
- $\sigma$ : generalized fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:

- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency $\omega$ is used as the independent variable.

- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.

- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.

- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_{\infty}$ and $M_0$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.HavriliakNegamiComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend. 

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.HavriliakNegamiComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$, $\alpha=1$ and $\gamma=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.Modulus.HavriliakNegamiMultiComplexFrequency" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of a general modulus (frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the frequency $f$ with two retardation terms and a term for the flow:

$$
M^*(f) =  M'(f) + i M''(f) = \left [ \chi_{\infty} +  \frac{\Delta \chi}{(1+(i 2\pi f \tau)^{\alpha})^{\gamma}}  +  \frac{\Delta \chi_1}{(1+(i 2 \pi f \tau_1)^{\alpha_1})^{\gamma_1}} -\frac{i }{2 \pi f \eta} \right ]^{-1}
$$

The quantities are described below.
It is a special case of the underlying base function with the options `NumberOfTerms=2`, `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=false`, `InvertViscosity=false`, `InvertResult=true` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\frac{\Delta \chi_{k}}{(1+(i \omega \tau_k)^{\alpha_k})^{\gamma_k}} }  + Flowterm \\
Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\alpha_k$, $\gamma_k$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $) of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.HavriliakNegamiMultiComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami fit functions (with $\chi_{\infty}=0.5 \times 10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1000$, $\Delta \chi_1=0.5 \times 10^{-9}$, $\tau_1=0.1$, $\alpha_1=1$, $\gamma_1=1$   and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend. Note that here the $\chi$ values are mechanical compliances (in Pa^-1^).

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.HavriliakNegamiMultiComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami fit functions (with $\chi_{\infty}=0.5 \times 10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1000$, $\alpha=1$, $\gamma=1$, $\Delta \chi_1=0.5 \times 10^{-9}$, $\tau_1=0.1$, $\alpha_1=1$ and $\gamma_1=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend. Note that here the $\chi$ values are mechanical compliances (in Pa^-1^).

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.Modulus.HavriliakNegamiMultiComplexOmega" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of a general modulus (circular frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the circular frequency $\omega$ with two retardation terms and a term for the flow:

$$
M^*(\omega) =  M'(\omega) + i M''(\omega) = \left [ \chi_{\infty} +  \frac{\Delta \chi}{(1+(i \omega \tau)^{\alpha})^{\gamma}}  +  \frac{\Delta \chi_1}{(1+(i \omega \tau_1)^{\alpha_1})^{\gamma_1}} -\frac{i }{\omega \eta} \right ]^{-1}
$$

The quantities are described below.
It is a special case of the underlying base function with the options `NumberOfTerms=2`, `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `IsRelativeDielectricPermittivity=false`, `InvertViscosity=false`, `InvertResult=true` and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.


The underlying base function models the generalized complex dynamic susceptibility in dependence on the frequency with one or more retardation terms and a flow term as:

$$
\chi^*(\omega) = \chi'(\omega) - i \chi''(\omega) = \chi_{\infty} +  \sum_{k=0}^{N-1}{\frac{\Delta \chi_{k}}{(1+(i \omega \tau_k)^{\alpha_k})^{\gamma_k}} }  + Flowterm \\
Flowterm = \cases{
-\frac{i \sigma_{DC}}{\omega \varepsilon_0} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=true}  \cr 
-\frac{i }{\omega \varepsilon_0 \rho_{DC}} \thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=true} \thickspace \mathrm{and}  \thickspace \mathrm{InvertViscosity=false}  \cr
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{IsRelativeDielectricPermittivity=false} \thickspace \mathrm{and} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $\chi'(\omega)$ and $\chi''(\omega)$ being the dependent variables, namely the real and negative imaginary part of the complex dynamic susceptibility $\chi^*(\omega)$.

Typical use cases are fits to the complex relative dielectric permittivity $e_r^*$, to the complex mechanical compliance $J^*$, or the specific complex heat capacity $c_p^*$. With the option `InvertResult`=true, fits to the complex mechanical modulus $M^*$ or the dielectric modulus $M_d^*$ are possible, too.

The parameters are:

- $\chi_{\infty}$ : high frequency susceptibility limit
- $\Delta\chi_k$ : retardation amplitude of term k
- $\tau_k$ : retardation time of term k
- $\alpha_k$, $\gamma_k$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $) of term k
- $\sigma_{DC}$ : DC specific electrical conductivity in S/m
- $\rho_{DC}$ : DC specific electrical resistance in Ω·m
- $\sigma$ : generalized conductivity, for instance fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:
- `NumberOfTerms` ($N$): 
Determines the number of retardation terms in the formula above. Must be at least 1.
- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency ($\omega$) is used as the independent variable.
- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.
- `IsRelativeDielectricPermittivity`:  
If true, it is assumed that relative dielectric permittivity data are fitted. Thus, the flow term is modified to use either the DC specific electric conductivity or the DC specific electric resisitivity $\rho_{DC}$ as the parameter for the flow term: $-{i \sigma_{DC}}/{(\omega \varepsilon_0)}$ or $-{i}/{(\omega \varepsilon_0 \rho_{DC})}$ with $\varepsilon_0$ being the vacuum permittivity..
- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e. specific electrical conductivity, fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.
- `InvertResult`:  
If true, the result is inverted, i.e. instead of the general susceptibility $\chi^*=\chi'-i\chi''$ the real and imaginary part of the generalized modulus $M'+iM'' = M^*={1}/{\chi^*}$ is used for the dependent variables. Please note that despite the fact that the output is a modulus, the parameters $\tau_k$ are still retardation times (and not relaxation times)!  
If false, the real and negative imaginary part of the generalized susceptibility are used as the dependent variables. 
- `LogarithmizeResult`:  
If true, the resulting values of $\chi'$ and $\chi''$ (or $M'$ and $M''$ if `InvertResult` is true) are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in some cases $\chi_{\infty}$ and $\chi_0=\chi_{\infty}+\sum{\Delta\chi_k}$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low susceptibility data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.HavriliakNegamiMultiComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami fit functions (with $\chi_{\infty}=0.5 \times 10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1000$, $\Delta \chi_1=0.5 \times 10^{-9}$, $\tau_1=0.1$, $\alpha_1=1$, $\gamma_1=1$   and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend. Note that here the $\chi$ values are mechanical compliances (in Pa^-1^).

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.HavriliakNegamiMultiComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami fit functions (with $\chi_{\infty}=0.5 \times 10^{-9}$, $\Delta \chi=0.999 \times 10^{-6}$, $\tau=1000$, $\alpha=1$, $\gamma=1$, $\Delta \chi_1=0.5 \times 10^{-9}$, $\tau_1=0.1$, $\alpha_1=1$ and $\gamma_1=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend. Note that here the $\chi$ values are mechanical compliances (in Pa^-1^).

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.Modulus.KohlrauschComplexFrequency" xml:space="preserve">
    <value>###### Kohlrausch retardation of a general modulus (frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the frequency $f$ with a retardation and a flow term:


$$
M^*(f) = M'(f) + i M''(f) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \int_0^{\infty} \exp(- i 2 \pi f t') \frac{d\Phi}{d t} dt' - \frac{i }{2 \pi f \eta} \right ]^{-1} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

The quantities are described below.
It is a special case of the underlying base function with the options `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `InvertViscosity=false`  and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.

The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega=2 \pi f$ as:

$$
M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' + Flowterm \right ]^{-1} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ] \\
Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'$ and $M''$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*$. The kernel of this equation is the Fourier transformation of the Kohlrausch function (also known as stretched exponential function, or as Kohlrausch-Williams-Watts (KWW) function).

The typical use case is a fit to the complex dynamic mechanical modulus (e.g. shear modulus $G^*$ or Young's modulus $Y^*$).

The parameters are:

- $M_{\infty}$ : high frequency modulus limit
- $M_0$ : low frequency modulus limit
- $\tau$ : retardation time (attention: this is not the same as the relaxation time, e.g. the maximum of $M''$ is considerably shifted with respect to $ 1/\tau $ !)
- $\beta$ : shape exponent (usually $ 0&lt;\beta\le 1 $). The smaller $\beta$ is, the broader is the resulting frequency spectrum.
- $\sigma$ : generalized fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:

- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency $\omega$ is used as the independent variable.

- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.

- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.

- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_{\infty}$ and $M_0$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.KohlrauschComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend. 

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.KohlrauschComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$, and $\beta=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)
</value>
  </data>
  <data name="Retardation.Modulus.KohlrauschComplexOmega" xml:space="preserve">
    <value>###### Kohlrausch retardation of a general modulus (circular frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the circular frequency $\omega$ with a retardation and a flow term:


$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' - \frac{i }{\omega \eta} \right ]^{-1} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

The quantities are described below.
It is a special case of the underlying base function with the options `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `InvertViscosity=false`  and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.

The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega=2 \pi f$ as:

$$
M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' + Flowterm \right ]^{-1} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ] \\
Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'$ and $M''$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*$. The kernel of this equation is the Fourier transformation of the Kohlrausch function (also known as stretched exponential function, or as Kohlrausch-Williams-Watts (KWW) function).

The typical use case is a fit to the complex dynamic mechanical modulus (e.g. shear modulus $G^*$ or Young's modulus $Y^*$).

The parameters are:

- $M_{\infty}$ : high frequency modulus limit
- $M_0$ : low frequency modulus limit
- $\tau$ : retardation time (attention: this is not the same as the relaxation time, e.g. the maximum of $M''$ is considerably shifted with respect to $ 1/\tau $ !)
- $\beta$ : shape exponent (usually $ 0&lt;\beta\le 1 $). The smaller $\beta$ is, the broader is the resulting frequency spectrum.
- $\sigma$ : generalized fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:

- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency $\omega$ is used as the independent variable.

- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.

- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.

- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_{\infty}$ and $M_0$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.KohlrauschComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend. 

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.KohlrauschComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$, and $\beta=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)
</value>
  </data>
  <data name="Retardation.Modulus.Lg10HavriliakNegamiComplexFrequency" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of a general modulus (frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the frequency $f$ with a retardation and a flow term:


$$
M^*(f) = M'(f) + i M''(f) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \frac{1}{(1+(i  2 \pi f \tau)^{\alpha})^{\gamma}} - \frac{i }{2 \pi f \eta} \right ]^{-1}
$$

Here, the values of the real and imaginary part of the calculated modulus are **logarithmized** for the output:

$$
lgM'(f) = \log_{10}(M'(f)) \\
lgM''(f) = \log_{10}(M''(f)) \\
$$

Should your data are not logarithmized, use a DecadicLogarithmTransformation to logarithmize them, too.

The quantities are described below.
It is a special case of the underlying base function with the options `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `InvertViscosity=false`  and `LogarithmizeResult=true`. These options can be changed by double-clicking on the fit function.

The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega=2 \pi f$ as:

$$
M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} + Flowterm \right ]^{-1} \\
Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'$ and $M''$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*$.

The typical use case is a fit to the complex dynamic mechanical modulus (e.g. shear modulus $G^*$ or Young's modulus $Y^*$).

The parameters are:

- $M_{\infty}$ : high frequency modulus limit
- $M_0$ : low frequency modulus limit
- $\tau$ : retardation time (attention: this is not the same as the relaxation time, e.g. the maximum of $M''$ is considerably shifted with respect to $ 1/\tau $ !)
- $\alpha$, $\gamma$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $)
- $\sigma$ : generalized fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:

- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency $\omega$ is used as the independent variable.

- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.

- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.

- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_{\infty}$ and $M_0$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.Lg10HavriliakNegamiComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend. 

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.Lg10HavriliakNegamiComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$, $\alpha=1$ and $\gamma=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.Modulus.Lg10HavriliakNegamiComplexOmega" xml:space="preserve">
    <value>###### Havriliak-Negami retardation of a general modulus (circular frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the circular frequency $\omega$ with a retardation and a flow term:


$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} - \frac{i }{\omega \eta} \right ]^{-1}
$$

Here, the values of the real and imaginary part of the calculated modulus are **logarithmized** for the output:

$$
lgM'(\omega) = \log_{10}(M'(\omega)) \\
lgM''(\omega) = \log_{10}(M''(\omega)) \\
$$

Should your data are not logarithmized, use a DecadicLogarithmTransformation to logarithmize them, too.

The quantities are described below.
It is a special case of the underlying base function with the options `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `InvertViscosity=false`  and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.

The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega=2 \pi f$ as:

$$
M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \frac{1}{(1+(i \tau \omega)^{\alpha})^{\gamma}} + Flowterm \right ]^{-1} \\
Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'$ and $M''$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*$.

The typical use case is a fit to the complex dynamic mechanical modulus (e.g. shear modulus $G^*$ or Young's modulus $Y^*$).

The parameters are:

- $M_{\infty}$ : high frequency modulus limit
- $M_0$ : low frequency modulus limit
- $\tau$ : retardation time (attention: this is not the same as the relaxation time, e.g. the maximum of $M''$ is considerably shifted with respect to $ 1/\tau $ !)
- $\alpha$, $\gamma$ : shape exponents (usually $ 0&lt;\alpha\le 1 $ and $ 0&lt;\gamma\le 1 $)
- $\sigma$ : generalized fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:

- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency $\omega$ is used as the independent variable.

- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.

- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.

- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_{\infty}$ and $M_0$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.Lg10HavriliakNegamiComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Havriliak-Negami fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$ and $\eta=10^{33}$). The values for $\alpha$ and $\gamma$ are indicated in the legend. 

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.Lg10HavriliakNegamiComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Havriliak-Negami fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$, $\alpha=1$ and $\gamma=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Havriliak, S., Negami, S., "A complex plane representation of dielectric and mechanical relaxation processes in some polymers", Polymer 8: 161–210, doi:10.1016/0032-3861(67)90021-3
</value>
  </data>
  <data name="Retardation.Modulus.Lg10KohlrauschComplexFrequency" xml:space="preserve">
    <value>###### Kohlrausch retardation of a general modulus (frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the frequency $f$ with a retardation and a flow term:


$$
M^*(f) = M'(f) + i M''(f) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \int_0^{\infty} \exp(- i 2 \pi f t') \frac{d\Phi}{d t} dt' - \frac{i }{2 \pi f \eta} \right ]^{-1} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

Here, the values of the real and imaginary part of the calculated modulus are **logarithmized** for the output:

$$
lgM'(f) = \log_{10}(M'(f)) \\
lgM''(f) = \log_{10}(M''(f)) \\
$$

Should your data are not logarithmized, use a DecadicLogarithmTransformation to logarithmize them, too.

The quantities are described below.
It is a special case of the underlying base function with the options `UseFrequencyInsteadOfOmega=true`, `UseFlowTerm=true`, `InvertViscosity=false`  and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.

The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega=2 \pi f$ as:

$$
M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' + Flowterm \right ]^{-1} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ] \\
Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'$ and $M''$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*$. The kernel of this equation is the Fourier transformation of the Kohlrausch function (also known as stretched exponential function, or as Kohlrausch-Williams-Watts (KWW) function).

The typical use case is a fit to the complex dynamic mechanical modulus (e.g. shear modulus $G^*$ or Young's modulus $Y^*$).

The parameters are:

- $M_{\infty}$ : high frequency modulus limit
- $M_0$ : low frequency modulus limit
- $\tau$ : retardation time (attention: this is not the same as the relaxation time, e.g. the maximum of $M''$ is considerably shifted with respect to $ 1/\tau $ !)
- $\beta$ : shape exponent (usually $ 0&lt;\beta\le 1 $). The smaller $\beta$ is, the broader is the resulting frequency spectrum.
- $\sigma$ : generalized fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:

- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency $\omega$ is used as the independent variable.

- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.

- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.

- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_{\infty}$ and $M_0$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.Lg10KohlrauschComplexFrequency.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend. 

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.Lg10KohlrauschComplexFrequency.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$, and $\beta=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)
</value>
  </data>
  <data name="Retardation.Modulus.Lg10KohlrauschComplexOmega" xml:space="preserve">
    <value>###### Kohlrausch retardation of a general modulus (circular frequency)

This function models the retardation of a general modulus (e.g. mechanical modulus) in dependence on the circular frequency $\omega$ with a retardation and a flow term:

$$
M^*(\omega) = M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' - \frac{i }{\omega \eta} \right ]^{-1} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ]
$$

Here, the values of the real and imaginary part of the calculated modulus are **logarithmized** for the output:

$$
lgM'(\omega) = \log_{10}(M'(\omega)) \\
lgM''(\omega) = \log_{10}(M''(\omega)) \\
$$

Should your data are not logarithmized, use a DecadicLogarithmTransformation to logarithmize them, too.

The quantities are described below.
It is a special case of the underlying base function with the options `UseFrequencyInsteadOfOmega=false`, `UseFlowTerm=true`, `InvertViscosity=false`  and `LogarithmizeResult=false`. These options can be changed by double-clicking on the fit function.

The underlying base function models the generalized complex dynamic modulus in dependence on the circular frequency $\omega=2 \pi f$ as:

$$
M'(\omega) + i M''(\omega) = \left [\frac{1}{M_{\infty}} + \left ( \frac{1}{M_{0}}-\frac{1}{M_{\infty}} \right ) \int_0^{\infty} \exp(- i \omega t') \frac{d\Phi}{d t} dt' + Flowterm \right ]^{-1} \\
\Phi(t) = \exp\left [ -\left ( \frac{t}{\tau}\right )^{\beta} \right ] \\
Flowterm = \cases{
-\frac{i \sigma}{\omega} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=true} \cr -\frac{i}{\omega\eta} \thickspace\thickspace\mathrm{for} \thickspace \mathrm{InvertViscosity=false}}
$$

with the circular frequency $\omega$ being the independent variable (or, depending on an option, the frequency $f$, $\omega=2\pi f$), and $M'$ and $M''$ being the dependent variables, namely the real and imaginary part of the complex dynamic modulus $M^*$. The kernel of this equation is the Fourier transformation of the Kohlrausch function (also known as stretched exponential function, or as Kohlrausch-Williams-Watts (KWW) function).

The typical use case is a fit to the complex dynamic mechanical modulus (e.g. shear modulus $G^*$ or Young's modulus $Y^*$).

The parameters are:

- $M_{\infty}$ : high frequency modulus limit
- $M_0$ : low frequency modulus limit
- $\tau$ : retardation time (attention: this is not the same as the relaxation time, e.g. the maximum of $M''$ is considerably shifted with respect to $ 1/\tau $ !)
- $\beta$ : shape exponent (usually $ 0&lt;\beta\le 1 $). The smaller $\beta$ is, the broader is the resulting frequency spectrum.
- $\sigma$ : generalized fluidity (inverse viscosity)
- $\eta$ : generalized viscosity


The available options are:

- `UseFrequencyInsteadOfOmega`:  
If true, the frequency $f$ is used as the independent variable, thus $\omega$ in the formula above is replaced by $ 2\pi f $.   
If false, the circular frequency $\omega$ is used as the independent variable.

- `UseFlowTerm`:  
If true, the flow term in above formula is used.   
If false, the flow term is not used, and the parameter corresponding with the flow term will not show in the fit.

- `InvertViscosity`:  
If true, the parameter in the flow term is an inverted viscosity (i.e.  fluidity). Thus the flow term generally is $-{i \sigma}/{\omega}$.  
If false, the parameter in the flow term is a viscosity, and the flow term generally is $-{i}/{(\omega\eta)}$.

- `LogarithmizeResult`:  
If true, the resulting values of $M'$ and $M''$ are logarithmized (decadic logarithm).  
If false, the original values are used.

&gt; Note:  
&gt; Since in most cases $M_{\infty}$ and $M_0$ differ by several orders of magnitude, your fit function will also cover several orders of magnitude. This will result in a poor fit of the low modulus data. To avoid this behavior, you should either use a NaturalLogarithmTransformation for both your data and for the fit function's dependent variables, or use the option in this fit function to logarithmize the results and then use a DecadicLogarithmTransformation to transform your data.  


^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.Lg10KohlrauschComplexOmega.Fig2.png){width=15cm}  
^^^ Fig. 1: Kohlrausch fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$ and $\eta=10^{33}$). The values for $\beta$ are indicated in the legend. 

^^^
![](res:Altaxo.Calc.FitFunctions.Retardation.Modulus.Lg10KohlrauschComplexOmega.Fig1.png){width=15cm}  
^^^ Fig. 2: Comparison of Kohlrausch fit functions (with $M_0=10^{6}$, $M_{\infty}=10^{9}$, $\tau=1$, and $\beta=1$) with different viscosities $\eta$. The values for $\eta$ are indicated in the legend.

---
References:  
- Kohlrausch, R., "Theorie des elektrischen Rückstandes in der Leidner Flasche", Annalen der Physik und Chemie. 91 (1) (1854): 56–82, 179–213, [doi:10.1002/andp.18541670103](https://doi.org/10.1002/andp.18541670103)
- Williams, G., Watts, D. C., "Non-Symmetrical Dielectric Relaxation Behavior Arising from a Simple Empirical Decay Function", Transactions of the Faraday Society 66 (1970) 80–85. [doi:10.1039/tf9706600080](https://doi.org/10.1039/tf9706600080)
</value>
  </data>
  <data name="Transitions.GeneralEffectiveMedium" xml:space="preserve">
    <value>##### General effective medium transition

This transition models e.g. the DC electrical conductivity of conductive particles embedded in a matrix, but is also suitable for other percolation problems.

The function, which evaluates the property $y$ of a compound in dependence of a filler concentration $p$ ($ 0 \le p \le 1 $) is implicitly given by the following equation:

$$
  (1-p) \frac{y_{0}^{1/s} - y^{1/s}}{y_{0}^{1/s} + A y^{1/s}} +
  p \frac{y_{1}^{1/t} - y^{1/t}}{y_{1}^{1/t} + A y^{1/t}} = 0 \\ \\
  A = (1-p_c)/p_c)
$$

in which:
- $p$ : volume concentration of the filler particles ($ 0 \le p \le 1 $)
- $p_c$ : critical percolation threshold (location of the transition ($ 0 &lt; p_c &lt; 1 $))
- $s, t$ : exponents ($s&gt;0$, $t&gt;0$)
- $y_{0}$ : property of the matrix material (e.g. electrical conductivity of the matrix)
- $y_{1}$ : property of the filler particles (e.g. electrical conductivity of the filler)
- $y$ : resulting property of the compound (e.g. electrical conductivity of the matrix with filler particles)

The equation has the following properties, which match the percolation theory for concentrations below and above the percolation threshold:

- $y = y_0$ for $p=0$ 
- $y \approx y_0 \left ( \frac{p_c-p}{p_c} \right )^{-s}$ for $p &lt; p_c$
- $y \approx y_1 \left ( \frac{p-p_c}{1-p_c} \right )^{t}$ for $p &gt; p_c$
- $y = y_1$ for $p=1$

In contrast to the separate percolation equations below and above the percolation threshold, the general effective medium transition avoids the divergence near the percolation threshold, and provides a smooth transition between the two equations.

^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.GeneralEffectiveMedium.Fig1.png){width=15cm}  
^^^ Fig. 1: GeneralEffectiveMedium transition with $y_0=10^{-14}$, $y_1=10^{-2}$, $p_c=0.2$, $s=0.87$ and $t=2$.
---
References:
- McLachlan, D. and G. Sauti. “The AC and DC conductivity of nanocomposites.” Journal of Nanomaterials 2007 (2007): 15, [doi:10.1155/2007/30389](https://doi.org/10.1155/2007/30389)
</value>
  </data>
  <data name="Transitions.GeneralizedLogisticDecreasing" xml:space="preserve">
    <value>##### GeneralizedLogisticDecreasing

This function evaluates a sum of generalized logistic terms (decreasing steps), plus a background polynomial with one or multiple terms, according to

$$
y(x) = \frac{a_0}{ \left [ 1+ \exp \left\(\frac{x-x_{c0}}{w_0} \right\)^{\gamma_0} \right ]^{\delta_0 / \gamma_0} } + ... + \frac{a_{n-1}}{ \left [ 1+ \exp \left ( \frac{x-x_{cn-1}}{w_{n-1}} \right )^{\gamma_{n-1}} \right ]^{\delta_{n-1} / \gamma_{n-1}} } + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (step heights) of the logistic step terms

- $x_{c0} ... x_{cn-1}$ are the locations of the logistic step terms

- $w_0 ... w_{n-1}$ are the widths of the logistic step terms

- $\gamma_0 ... \gamma_{n-1}$ are exponents that control the slope (steepness) on the left sides of the steps

- $\delta_0 ... \delta_{n-1}$ are exponents that control the slope (steepness) on the right sides of the steps

- $b_0 ... b_m$ are the coefficients of the background polynomial of order  $m$

- $n$ is the number of logistic step terms ($n \geq 1$)
- $m$ is the order of the background polynomial (set $m=-1$ to disable the background polynomial)

The number of logistic step terms $n$ and the order of the background polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=0$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.GeneralizedLogisticDecreasing.Fig1.png){width=15cm}  
^^^ Fig. 1: GeneralizedLogisticDecreasing ($n=1$, $m=0$) with $a_0=5$, $x_{c0}=7$, $w_0=3$ and $b_0=1$. The values of $\gamma_0$ and $\delta_0$ are indicated in the legend.
---
References:
[Sigmoid function at Wikipedia](https://en.wikipedia.org/wiki/Sigmoid_function)




</value>
  </data>
  <data name="Transitions.GeneralizedLogisticIncreasing" xml:space="preserve">
    <value>##### GeneralizedLogisticIncreasing

This function evaluates a sum of generalized logistic terms (increasing steps), plus a background polynomial with one or multiple terms, according to

$$
y(x) = \frac{a_0}{ \left [ 1+ \exp \left ( - \frac{x-x_{c0}}{w_0} \right )^{\gamma_0} \right ]^{\delta_0 / \gamma_0} } + ... + \frac{a_{n-1}}{ \left [ 1+ \exp \left ( - \frac{x-x_{cn-1}}{w_{n-1}} \right )^{\gamma_{n-1}} \right ]^{\delta_{n-1} / \gamma_{n-1}} } + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (step heights) of the logistic step terms

- $x_{c0} ... x_{cn-1}$ are the locations of the logistic step terms

- $w_0 ... w_{n-1}$ are the widths of the logistic step terms

- $\gamma_0 ... \gamma_{n-1}$ are exponents that control the slope (steepness) on the right sides of the steps

- $\delta_0 ... \delta_{n-1}$ are exponents that control the slope (steepness) on the left sides of the steps

- $b_0 ... b_m$ are the coefficients of the background polynomial of order  $m$

- $n$ is the number of logistic step terms ($n \geq 1$)
- $m$ is the order of the background polynomial (set $m=-1$ to disable the background polynomial)

The number of logistic step terms $n$ and the order of the background polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=0$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.GeneralizedLogisticIncreasing.Fig1.png){width=15cm}  
^^^ Fig. 1: GeneralizedLogisticIncreasing ($n=1$, $m=0$) with $a_0=5$, $x_{c0}=7$, $w_0=3$ and $b_0=1$. The values of $\gamma_0$ and $\delta_0$ are indicated in the legend.
---
References:
[Sigmoid function at Wikipedia](https://en.wikipedia.org/wiki/Sigmoid_function)




</value>
  </data>
  <data name="Transitions.Lg10GeneralEffectiveMedium" xml:space="preserve">
    <value>##### General effective medium transition (logarithmized)

This transition models e.g. the DC electrical conductivity of conductive particles embedded in a matrix, but is also suitable for other percolation problems.

The function, which evaluates the property $y$ of a compound in dependence of a filler concentration $p$ ($ 0 \le p \le 1 $) is implicitly given by the following equation:

$$
  (1-p) \frac{y_{0}^{1/s} - y^{1/s}}{y_{0}^{1/s} + A y^{1/s}} +
  p \frac{y_{1}^{1/t} - y^{1/t}}{y_{1}^{1/t} + A y^{1/t}} = 0 \\ \\
  A = (1-p_c)/p_c)
$$

in which:
- $p$ : volume concentration of the filler particles ($ 0 \le p \le 1 $)
- $p_c$ : critical percolation threshold (location of the transition ($ 0 &lt; p_c &lt; 1 $))
- $s, t$ : exponents ($s&gt;0$, $t&gt;0$)
- $y_{0}$ : property of the matrix material (e.g. electrical conductivity of the matrix)
- $y_{1}$ : property of the filler particles (e.g. electrical conductivity of the filler)
- $y$ : resulting property of the compound (e.g. electrical conductivity of the matrix with filler particles)

**Instead of returning $y$ as described above, the function will return the decadic logarithm $\log_{10}(y)$. Furthermore, instead of $y_0$ and $y_1$, the logarithmized parameters $\lg_{10}(y_0)$ and $\lg_{10}(y_1)$ are used!**

The equation has the following properties, which match the percolation theory for concentrations below and above the percolation threshold:

- $y = y_0$ for $p=0$ 
- $y \approx y_0 \left ( \frac{p_c-p}{p_c} \right )^{-s}$ for $p &lt; p_c$
- $y \approx y_1 \left ( \frac{p-p_c}{1-p_c} \right )^{t}$ for $p &gt; p_c$
- $y = y_1$ for $p=1$

In contrast to the separate percolation equations below and above the percolation threshold, the general effective medium transition avoids the divergence near the percolation threshold, and provides a smooth transition between the two equations.


^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.Lg10GeneralEffectiveMedium.Fig1.png){width=15cm}  
^^^ Fig. 1: Lg10GeneralEffectiveMedium transition with the parameters $lg_{10}(y_0)=-14$, $lg_{10}(y_1)=-2$, $p_c=0.2$, $s=0.87$ and $t=2$.
---
References:
- McLachlan, D. and G. Sauti. “The AC and DC conductivity of nanocomposites.” Journal of Nanomaterials 2007 (2007): 15, [doi:10.1155/2007/30389](https://doi.org/10.1155/2007/30389)
</value>
  </data>
  <data name="Transitions.LinearFermiDiracTransition" xml:space="preserve">
    <value>##### Linear Fermi-Dirac transition

This fit function implements the linearly scaled Fermi-Dirac transition:

$$
y(p) = y_1 + (y_0 -y_1) \times f(p)
$$

which assumes a value of $y_0$ for $p=0$ and $y_1$ for $p=1$.

The core $f(p)$ of the Fermi-Dirac transition is the following function, defined in the interval $[0, 1]$, which assumes the values $f(p=0)=1$ and $f(p=1)=0$:

$$
  f(p) = \frac{\exp((1-p_c)/w)) - \exp((p-p_c)/w)}{\exp((1-p_c)/w) - \exp((0-p_c)/w)} \times
  \frac{1 + \exp((0-p_c)/w)}{1 + \exp((p-p_c)/w)}
$$

in which:

- $p_c$ : location of the transition (0..1)
- $w$ : width parameter


The domain of the function is $ 0 \leq x \leq 1 $. 

^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.LinearFermiDiracTransition.Fig1.png){width=15cm}  
^^^ Fig. 1: LinearFermiDiracTransition with $y_0=2$, $y_1=10$, $p_c=0.3$ and $w=0.01$.
---
References:




</value>
  </data>
  <data name="Transitions.LogarithmicFermiDiracTransition" xml:space="preserve">
    <value>##### Logarithmic Fermi-Dirac transition

This fit function implements the linearly scaled Fermi-Dirac transition:

$$
y(p) = y_0^{f(p)} \times y_1^{1-f(p)}
$$

which assumes a value of $y_0$ for $p=0$ and $y_1$ for $p=1$. It is used e.g. to model the  behavior of electrical conductivity in dependence on the concentration $p$ and the critical concentration $p_c$ (percolation behavior).


The core $f(p)$ of the Fermi-Dirac transition is the following function, defined in the interval $[0, 1]$, which assumes the values $f(p=0)=1$ and $f(p=1)=0$:

$$
  f(p) = \frac{\exp((1-p_c)/w)) - \exp((p-p_c)/w)}{\exp((1-p_c)/w) - \exp((0-p_c)/w)} \times
  \frac{1 + \exp((0-p_c)/w)}{1 + \exp((p-p_c)/w)}
$$

in which:

- $p_c$ : location of the transition (0..1)
- $w$ : width parameter


The domain of the function is $ 0 \leq p \leq 1 $. 

^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.LogarithmicFermiDiracTransition.Fig1.png){width=15cm}  
^^^ Fig. 1: LogarithmicFermiDiracTransition with $y_0=10^{-14}$, $y_1=10^{-2}$, $p_c=0.2$ and $w=0.02$. This could e.g. be a typical curve for the electrical conductivity of a carbon black filled composite in dependence on the carbon black volume concentration.
---
References:




</value>
  </data>
  <data name="Transitions.LogisticDecreasing" xml:space="preserve">
    <value>##### LogisticDecreasing

This function evaluates a sum of logistic terms (decreasing steps), plus a background polynomial with one or multiple terms, according to

$$
y(x) = \frac{a_0}{1+ \exp \left ( \frac{x-x_{c0}}{w_0} \right ) } + ... + \frac{a_{n-1}}{1+ \exp \left ( \frac{x-x_{cn-1}}{w_{n-1}} \right ) } + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (step heights) of the logistic step terms

- $x_{c0} ... x_{cn-1}$ are the locations of the logistic step terms

- $w_0 ... w_{n-1}$ are the widths of the logistic step terms

- $b_0 ... b_m$ are the coefficients of the background polynomial of order  $m$

- $n$ is the number of logistic step terms ($n \geq 1$)
- $m$ is the order of the background polynomial (set $m=-1$ to disable the background polynomial)

The number of logistic step terms $n$ and the order of the background polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=0$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.LogisticDecreasing.Fig1.png){width=15cm}  
^^^ Fig. 1: LogisticDecreasing ($n=1$, $m=0$) with $a_0=5$, $x_{c0}=7$, $w_0=3$ and $b_0=1$.
---
References:
[Sigmoid function at Wikipedia](https://en.wikipedia.org/wiki/Sigmoid_function)




</value>
  </data>
  <data name="Transitions.LogisticIncreasing" xml:space="preserve">
    <value>##### LogisticIncreasing

This function evaluates a sum of logistic terms (increasing steps), plus a background polynomial with one or multiple terms, according to

$$
y(x) = \frac{a_0}{1+ \exp \left ( - \frac{x-x_{c0}}{w_0} \right ) } + ... + \frac{a_{n-1}}{1+ \exp \left ( - \frac{x-x_{cn-1}}{w_{n-1}} \right ) } + b_0 + b_1 x^1 + ... + b_m x^m 
$$

in which:

- $a_0 ... a_{n-1}$ are the amplitudes (step heights) of the logistic step terms

- $x_{c0} ... x_{cn-1}$ are the locations of the logistic step terms

- $w_0 ... w_{n-1}$ are the widths of the logistic step terms

- $b_0 ... b_m$ are the coefficients of the background polynomial of order  $m$

- $n$ is the number of logistic step terms ($n \geq 1$)
- $m$ is the order of the background polynomial (set $m=-1$ to disable the background polynomial)

The number of logistic step terms $n$ and the order of the background polynomial $m$ can be changed by double-clicking on the fit function. The default values are $n=1$ and $m=0$. 

The domain of the function is $-\infty \leq x \leq \infty$. 

^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.LogisticIncreasing.Fig1.png){width=15cm}  
^^^ Fig. 1: LogisticIncreasing ($n=1$, $m=0$) with $a_0=5$, $x_{c0}=7$, $w_0=3$ and $b_0=1$.
---
References:
[Sigmoid function at Wikipedia](https://en.wikipedia.org/wiki/Sigmoid_function)




</value>
  </data>
  <data name="Transitions.SmoothedPercolation" xml:space="preserve">
    <value>##### Smoothed percolation

The base of this function are the two percolation equations valid below and above the percolation threshold $p_c$ :

- $y \approx  y_0 \left ( \frac{p_c-p}{p_c} \right )^{-s}$ for $p &lt; p_c$ (left side equation)}

- $y \approx y_1 \left ( \frac{p-p_c}{1-p_c} \right )^{t}$ for $p &gt; p_c$ (right side equation)

in which:
- $p_c$ : critical percolation threshold (location of the transition (0..1))
- $p$ : volume concentration of the filler particles (0..1)
- $s, t$ : exponents ($s&gt;0$, $t&gt;0$)
- $y_{0}$ : property of the matrix (e.g. electrical conductivity of the matrix, $y_0&gt;0)$)
- $y_{1}$ : property of the filler particles (e.g. electrical conductivity of the filler, $y_1&gt;0$)
- $y$ : resulting property of the compound (e.g. electrical conductivity of the matrix with filler particles)


Because both equations diverge at $p=p_c$, we need to smooth that location.
For this we use somewhat stricter boundaries:

- Calculate the approximate logarithmic step height of the transition by
$$
\ln(y_h/y_l) = \ln(y_1/y_0) - s - t
$$

- Find a $p_1 &lt; p_c$ such that the quotient of the function values of right side and left side approximately match this step height:

$$
 \ln \left ( \frac{ y_1 \left ( \frac{p_2-p_c}{1-p_c} \right )^{t} }{ y_0 \left ( \frac{p_c-p_1}{p_c} \right )^{-s}} \right ) \approx \ln(y_h/y_l)
$$

in which $p_2 = p_c + (p_c-p_1)\frac{t}{s}$ (obviously: $p_2&gt;p_c$).


The value of $p_1$ is then used as the upper boundary of the left side percolation equation:

$y \approx y_0 \left ( \frac{p_c-p}{p_c} \right )^{-s}$ for $p &lt; p_1$


and the value of $p_2$ is used as the lower boundary of the right side percolation equation:

$y \approx y_1 \left ( \frac{p-p_c}{1-p_c} \right )^{t}$ for $p &gt; p_2$

In the interval between $p_1$ and $p_2$, the function values are approximated by a logarithmic function:

$\ln(y) = \ln(y_1) + (\ln(y_2)-\ln(y_1))\frac{p-p_1}{p_2-p_1}$

in which 

- $y_1$ value of $y$ as evaluated by the left side equation at $p=p_1$
- $y_2$ value of $y$ as evaluated by the right side equation at $p=p_2$

^^^
![](res:Altaxo.Calc.FitFunctions.Transitions.SmoothedPercolation.Fig1.png){width=15cm}  
^^^ Fig. 1: SmoothedPercolation transition with $y_0=10^{-14}$, $y_1=10^{-2}$, $p_c=0.2$, $s=0.87$ and $t=2$.
---
</value>
  </data>
  <data name="Viscosity.BinghamPlasticModel" xml:space="preserve">
    <value>##### Bingham plastic model

This model describes the dependence of the viscosity $\eta$ on the shear rate $\dot{\gamma}$ according to the following  equation:

$$
\eta(\dot{\gamma}) = \frac{\tau_0}{\dot{\gamma}} + \eta_p
$$

in which:
- $\tau_0$: yield stress
- $\eta_p$: viscosity (limes for high shear rates) 

^^^
![](res:Altaxo.Calc.FitFunctions.Viscosity.BinghamPlasticModel.Fig1.png){width=15cm}  
^^^ Fig. 1: Bingham plastic model with $\tau_0=10^{4}$ and $\eta_p=1$.
---
References:
- Bingham, E.C. (1916). "An Investigation of the Laws of Plastic Flow". Bulletin of the Bureau of Standards. 13 (2): 309–353. doi:10.6028/bulletin.304. hdl:2027/mdp.39015086559054



</value>
  </data>
  <data name="Viscosity.CarreauYasudaModel" xml:space="preserve">
    <value>##### Carreau-Yasuda model

This model describes the dependence of the viscosity $\eta$ on the shear rate $\dot{\gamma}$ according to the following  equation:

$$
\eta(\dot{\gamma}) = \eta_{\infty} + (\eta_0 - \eta_{\infty})\left ( 1+(\lambda \dot{\gamma})^a \right )^{\frac{n-1}{a}}
$$

in which:
- $\eta_0$ : zero shear viscosity
- $\eta_{\infty}$ : terminal viscosity at very high shear rates ($\eta_{\infty} &lt; \eta_0$)
- $\lambda$: parameter (inverse characteristic viscosity)
- $a$, $n$: exponents ($a&gt;0$, $n&lt;1$)

In the special case $n=1-a$ this model is equivalent to the Cross model.

^^^
![](res:Altaxo.Calc.FitFunctions.Viscosity.CarreauYasudaModel.Fig1.png){width=15cm}  
^^^ Fig. 1: Carreau-Yasuda model with $\eta_0=10^{4}$, $\eta_{\infty}=1$, $\lambda=0.01$, $a=2$ and $n=0.3$.
---
References:
- Yasuda K, Armstrong RC, Cohen RE (1981) Shear flow properties of concentrated solutions of linear and star branched polystyrenes. Rheol Acta 20:163–178
</value>
  </data>
  <data name="Viscosity.CrossModel" xml:space="preserve">
    <value>##### Cross model

This model describes the dependence of the viscosity $\eta$ on the shear rate $\dot{\gamma}$ according to the following  equation:

$$
\eta(\dot{\gamma}) = \eta_{\infty} + \frac{\eta_0 - \eta_{\infty}}{1+(\lambda \dot{\gamma})^a}
$$

in which:
- $\eta_0$ : zero shear viscosity
- $\eta_{\infty}$ : terminal viscosity at very high shear rates ($\eta_{\infty} &lt; \eta_0$)
- $\lambda, a$ : parameters, $\lambda&gt;0$, $a&gt;0$

^^^
![](res:Altaxo.Calc.FitFunctions.Viscosity.CrossModel.Fig1.png){width=15cm}  
^^^ Fig. 1: Cross model with $\eta_0=10^{4}$, $\eta_{\infty}=1$, $\lambda=0.01$ and $a=2$.
---
References:
- Cross MM (1965) Rheology of non-Newtonian fluids—a new flow equation for pseudoplastic systems. J Colloid Sci 20:417–437
- Cross MM (1979) Relation between viscoelasticity and shear-thinning behaviour in liquids. Rheol Acta 18:609–614

</value>
  </data>
  <data name="Viscosity.HerschelBulkleyModel" xml:space="preserve">
    <value>##### Herschel-Bulkley model

This model describes the dependence of the viscosity $\eta$ on the shear rate $\dot{\gamma}$ according to the following  equation:

$$
\eta(\dot{\gamma}) = \frac{\tau_0}{\dot{\gamma}} + K \dot{\gamma}^{(n-1)}
$$

in which:
- $\tau_0$: yield stress
- $K$: pre-factor
- $n$: exponent ($n&lt;1$)

&gt; Note: With $n=1$ and $K=\eta_p$ this model is equivalent to the Bingham plastic model.

^^^
![](res:Altaxo.Calc.FitFunctions.Viscosity.HerschelBulkleyModel.Fig1.png){width=15cm}  
^^^ Fig. 1: Herschel-Bulkley model with $\tau_0=10^{4}$, $K=10^{4}$  and $n=0.5$.
---
References:
- Herschel, W.H.; Bulkley, R. (1926), "Konsistenzmessungen von Gummi-Benzollösungen", Kolloid Zeitschrift, 39 (4): 291–300, doi:10.1007/BF01432034, S2CID 97549389



</value>
  </data>
  <data name="Viscosity.PowerLawModel" xml:space="preserve">
    <value>##### Power law model

This model describes the dependence of the viscosity $\eta$ on the shear rate $\dot{\gamma}$ according to the following  equation:

$$
\eta(\dot{\gamma}) = K \dot{\gamma}^{(n-1)}
$$

in which:
- $K$ : pre-factor
- $n$: exponent ($n&lt;1$)

^^^
![](res:Altaxo.Calc.FitFunctions.Viscosity.PowerLawModel.Fig1.png){width=15cm}  
^^^ Fig. 1: Power law model with $K=10^{4}$ and $n=0.5$.
---
References:
- Markus Reiner et al., "Viskosimetrische Untersuchungen an Lösungen hochmolekularer Naturstoffe", Kolloid Zeitschrift (1933) 65 (1) 44-62



</value>
  </data>
</root>