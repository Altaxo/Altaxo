<local:ColorComboBoxBase
    x:Class="Altaxo.Gui.Common.Drawing.BrushComboBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:axog="clr-namespace:Altaxo.Graph;assembly=AltaxoBase"
    xmlns:axogc="clr-namespace:Altaxo.Gui.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Altaxo.Gui.Common.Drawing"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="24"
    d:DesignWidth="100"
    mc:Ignorable="d">
    <UserControl.Resources>
        <axogc:NamedColorToWpfBrushConverter x:Key="Nc2WpfCC" />
        <axogc:NamedColorToColorSetNameConverter x:Key="Nc2ColorSetName" />
        <axogc:BrushXToImageSourceConverter
            x:Key="Bx2WpfImgSrc"
            Width="16"
            Height="16" />
        <axogc:BrushXToImageSourceConverter
            x:Key="Bx2WpfImgSrc_16x12"
            Width="16"
            Height="12" />
        <axogc:BrushXToBrushNameConverter x:Key="Bx2BName" />

        <!--  Checkerboard brush for the background of brush items  -->
        <DrawingBrush
            x:Key="CheckerboardBrush"
            AlignmentX="Left"
            AlignmentY="Top"
            Stretch="None"
            TileMode="Tile"
            Viewport="0,0,10,10"
            ViewportUnits="Absolute">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="White">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,10,10" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="Black">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,5,5" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="Black">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="5,5,5,5" />
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <!--  Shown as the content of the button that opens the TreeView dropdown  -->
        <Path
            x:Key="ColorGroupButtonContent"
            Margin="0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Fill="Black">
            <Path.Data>
                <Geometry>M 0 0 L 3.5 4 L 7 0 Z M 0 10 L 3.5 14 L 7 10 Z</Geometry>
            </Path.Data>
        </Path>

        <!--  Item template for color items in the TreeView  -->
        <DataTemplate x:Key="NamedColorTemplate">
            <StackPanel Margin="2" Orientation="Horizontal">
                <Border
                    Background="{StaticResource CheckerboardBrush}"
                    BorderBrush="Black"
                    BorderThickness="1"
                    SnapsToDevicePixels="True">
                    <Rectangle
                        Width="16"
                        Height="16"
                        Fill="{Binding Tag, Converter={StaticResource Nc2WpfCC}}" />
                </Border>
                <TextBlock
                    Margin="4,0,4,0"
                    VerticalAlignment="Center"
                    Text="{Binding Text}" />
            </StackPanel>
        </DataTemplate>

        <!--  Item template for brush items in the ComboBox  -->
        <DataTemplate x:Key="NamedColorTemplateForComboBox">
            <StackPanel Margin="2" Orientation="Horizontal">
                <Border
                    Background="{StaticResource CheckerboardBrush}"
                    BorderBrush="Black"
                    BorderThickness="1"
                    SnapsToDevicePixels="True">
                    <Image Source="{Binding Path=., Converter={StaticResource Bx2WpfImgSrc}}" />
                </Border>
                <TextBlock
                    Margin="4,0,4,0"
                    VerticalAlignment="Center"
                    Text="{Binding ., Converter={StaticResource Bx2BName}}" />
            </StackPanel>
        </DataTemplate>

        <!--  Template for the separators in the ComboBox  -->
        <DataTemplate x:Key="NamedColorTemplateForSeparator">
            <StackPanel Orientation="Vertical">
                <Separator />
                <TextBlock FontStyle="Italic" Text="{Binding Tag}" />
                <Separator />
            </StackPanel>
        </DataTemplate>

        <!--  Template of the currently selected item, shown directly in the ComboBox if it is closed.  -->
        <DataTemplate x:Key="NamedColorTemplateForComboBoxFront">
            <StackPanel Orientation="Vertical">
                <TextBlock
                    FontSize="8"
                    FontStyle="Italic"
                    Text="{Binding Path=Color, Converter={StaticResource Nc2ColorSetName}}" />
                <StackPanel Margin="2" Orientation="Horizontal">
                    <Border
                        VerticalAlignment="Center"
                        Background="{StaticResource CheckerboardBrush}"
                        BorderBrush="Black"
                        BorderThickness="1"
                        SnapsToDevicePixels="True">
                        <Image Source="{Binding Path=., Converter={StaticResource Bx2WpfImgSrc_16x12}}" />
                    </Border>
                    <TextBlock
                        Margin="4,0,4,0"
                        VerticalAlignment="Center"
                        Text="{Binding ., Converter={StaticResource Bx2BName}}" />
                </StackPanel>
            </StackPanel>
        </DataTemplate>

        <!--
            Selects on of three templates for the ComboBox items, depending whether the ComboBox item is shown
            in the popup or if it is shown directly in the ComboBox, or if it is a separator item.
        -->
        <DataTemplate x:Key="CombinedTemplate">
            <ContentPresenter
                x:Name="Presenter"
                Content="{Binding}"
                ContentTemplate="{StaticResource NamedColorTemplateForComboBox}" />
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, ComboBoxItem, 1}}" Value="{x:Null}">
                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource NamedColorTemplateForComboBoxFront}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Name}" Value="ThisIsASeparatorForTheComboBox">
                    <Setter TargetName="Presenter" Property="ContentTemplate" Value="{StaticResource NamedColorTemplateForSeparator}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!--  Data template for a tree node that contains a ColorSet  -->
        <HierarchicalDataTemplate x:Key="ColorSetTemplate" ItemsSource="{Binding Nodes}">
            <TextBlock Text="{Binding Text}" />
        </HierarchicalDataTemplate>

        <!--  Data template for a tree node that contains neither a ColorSet nor a Color.  -->
        <HierarchicalDataTemplate x:Key="TreeOtherTemplate" ItemsSource="{Binding Nodes}">
            <TextBlock Text="{Binding Text}" />
        </HierarchicalDataTemplate>
    </UserControl.Resources>

    <!--  Context menu of this user control.  -->
    <UserControl.ContextMenu>
        <ContextMenu x:Name="_contextMenu">
            <MenuItem Click="EhShowCustomPenDialog" Header="Custom pen.." Visibility="Collapsed" x:Name="_guiMenuShowCustomPen" />
            <MenuItem Click="EhShowCustomBrushDialog" Header="Custom brush.." />
            <MenuItem Click="EhShowCustomColorDialog" Header="Custom color.." />
            <MenuItem Click="EhShowColorSetManagerDialog" Header="New color set .." />
            <Separator />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="100% opacity"
                Tag="100" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="90% opacity"
                Tag="90" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="80% opacity"
                Tag="80" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="70% opacity"
                Tag="70" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="60% opacity"
                Tag="60" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="50% opacity"
                Tag="50" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="40% opacity"
                Tag="40" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="30% opacity"
                Tag="30" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="20% opacity"
                Tag="20" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="10% opacity"
                Tag="10" />
            <MenuItem
                Click="EhChooseOpacityFromContextMenu"
                Header="0% opacity"
                Tag="0" />
        </ContextMenu>
    </UserControl.ContextMenu>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ComboBox
            x:Name="_guiComboBox"
            DropDownClosed="EhComboBox_DropDownClosed"
            DropDownOpened="EhComboBox_DropDownOpened"
            ItemTemplate="{StaticResource CombinedTemplate}"
            SelectionChanged="EhComboBox_SelectionChanged" />
        <ToggleButton
            Grid.Column="1"
            Content="{StaticResource ColorGroupButtonContent}"
            IsChecked="{Binding IsTreeDropDownOpen, RelativeSource={RelativeSource AncestorType=local:BrushComboBox}, Mode=TwoWay}" />
        <Popup
            x:Name="_treePopup"
            MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=local:BrushComboBox}}"
            AllowsTransparency="true"
            Focusable="false"
            IsOpen="{Binding IsTreeDropDownOpen, RelativeSource={RelativeSource AncestorType=local:BrushComboBox}}"
            Placement="Bottom"
            PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
            <Border
                x:Name="DropDownBorder"
                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                BorderThickness="1">
                <TreeView
                    x:Name="_treeView"
                    ItemTemplateSelector="{Binding TreeViewItemTemplateSelector, RelativeSource={RelativeSource AncestorType=local:BrushComboBox}}"
                    KeyDown="EhTreeViewKeyDown"
                    MouseDoubleClick="EhTreeViewMouseDoubleClick">
                    <ItemsControl.ItemContainerStyle>
                        <!--  This Style binds a TreeViewItem to a TreeViewItemViewModel.  -->
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </TreeView>
            </Border>
        </Popup>
    </Grid>
</local:ColorComboBoxBase>
