<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- *********************** Styles for the QuantityWithUnitTextBox ************************************** -->
	<Style TargetType="{x:Type axogc:QuantityWithUnitTextBox}" xmlns:axogc="clr-namespace:Altaxo.Gui.Common" BasedOn="{StaticResource {x:Type TextBox}}" >
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip"
													Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
			</Trigger>
		</Style.Triggers>
		<Style.Setters>
			<Setter Property="ContextMenu">
				<Setter.Value>
					<ContextMenu>
						<MenuItem Header="Copy" Command="Copy"/>
						<MenuItem Header="Cut" Command="Cut"/>
						<MenuItem Header="Paste" Command="Paste"/>
						<MenuItem Header="Convert to.." Tag="TagConvertTo"/>
						<!--MenuItem Header="Change unit.." Tag="TagChangeUnitTo"/-->
						<MenuItem Header="Set number of digits displayed.." Tag="TagSetDigits"/>
					</ContextMenu>
				</Setter.Value>
			</Setter>
		</Style.Setters>
		
	</Style>

	<!-- *********************** Styles for the ThicknessImageComboBox ************************************** -->
	<Style TargetType="{x:Type axogcd:LengthImageComboBox}" xmlns:axogcd="clr-namespace:Altaxo.Gui.Common.Drawing" BasedOn="{StaticResource {x:Type ComboBox}}" >
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="true">
				<Setter Property="ToolTip"
													Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
			</Trigger>
		</Style.Triggers>
		<Style.Setters>
			<Setter Property="ContextMenu">
				<Setter.Value>
					<ContextMenu>
						<MenuItem Header="Copy" Command="Copy"/>
						<MenuItem Header="Cut" Command="Cut"/>
						<MenuItem Header="Paste" Command="Paste"/>
						<MenuItem Header="Convert to.." Tag="TagConvertTo"/>
						<MenuItem Header="Set number of digits displayed.." Tag="TagSetDigits"/>
					</ContextMenu>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>

	<!-- *********************** Styles for the MultiSelctTreeView ************************************** -->
	<Style TargetType="{x:Type axogc:MultiSelectTreeView}" xmlns:axogc="clr-namespace:Altaxo.Gui.Common" >
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="Border.BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
		<Setter Property="Border.BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type axogc:MultiSelectTreeView}">
					<Border SnapsToDevicePixels="true" 
						        x:Name="Border" 
						        BorderBrush="{TemplateBinding Border.BorderBrush}" 
						        BorderThickness="{TemplateBinding Border.BorderThickness}">
						<ScrollViewer Focusable="false" 
							              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
							              Background="{TemplateBinding Background}" 
							              Padding="{TemplateBinding Padding}" 
							              CanContentScroll="false"
							              HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- *********************** Styles for NumericUpDownBase ************************************** -->

	<Style TargetType="{x:Type axogc:NumericUpDownBase}" xmlns:axogc="clr-namespace:Altaxo.Gui.Common">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type axogc:NumericUpDownBase}">
					<Border BorderThickness="1" BorderBrush="Gray" Margin="0" Grid.RowSpan="2" Grid.ColumnSpan="2">
						<Grid Margin="0">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto" MinWidth="16"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>

							<TextBox Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" TextAlignment="Right" x:Name="_textBox">
								<!-- Note that the Binding for TextBox.Text is located in the OnApplyTemplate function (it was neccessary because the converter and the validation rule needs a reference to the control) -->
								<TextBox.Style>
									<Style TargetType="{x:Type TextBox}">
										<Style.Triggers>
											<Trigger Property="Validation.HasError" Value="true">
												<Setter Property="ToolTip"
													Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
											</Trigger>
										</Style.Triggers>
									</Style>
								</TextBox.Style>
							</TextBox>

							<RepeatButton Command="{x:Static axogc:NumericUpDownBase.IncreaseCommand}"  Grid.Column="1" Grid.Row="0">
								<Path HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="Black">
									<Path.Data>
										<Geometry>M 0 4 L 3.5 0 L 7 4 Z</Geometry>
									</Path.Data>
								</Path>
							</RepeatButton>
							
							<RepeatButton Command="{x:Static axogc:NumericUpDownBase.DecreaseCommand}"  Grid.Column="1" Grid.Row="1">
								<Path HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="Black">
									<Path.Data>
										<Geometry>M 0 0 L 3.5 4 L 7 0 Z</Geometry>
									</Path.Data>
								</Path>
							</RepeatButton>

							<RepeatButton Command="{x:Static axogc:NumericUpDownBase.GotoMaximumCommand}"  Grid.Column="2" Grid.Row="0">
								<RepeatButton.Visibility>
									<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsGotoMinimumAndMaximumVisible">
										<Binding.Converter>
											<BooleanToVisibilityConverter/>
										</Binding.Converter>
									</Binding>
								</RepeatButton.Visibility>
								<Path HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="Black">
									<Path.Data>
										<Geometry>M 0 5 L 4 1 L 0 1 L 0 0 L 8 0 L 8 1 L 4 1 L 8 5 Z</Geometry>
									</Path.Data>
								</Path>
							</RepeatButton>

							<RepeatButton Command="{x:Static axogc:NumericUpDownBase.GotoMinimumCommand}"  Grid.Column="2" Grid.Row="1">
								<RepeatButton.Visibility>
									<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsGotoMinimumAndMaximumVisible">
										<Binding.Converter>
											<BooleanToVisibilityConverter/>
										</Binding.Converter>
									</Binding>
								</RepeatButton.Visibility>
								<Path HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" Fill="Black">
									<Path.Data>
										<Geometry>M 0 0 L 4 4 L 0 4 L 0 5 L 8 5 L 8 4 L 4 4 L 8 0 Z</Geometry>
									</Path.Data>
								</Path>
							</RepeatButton>

						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>