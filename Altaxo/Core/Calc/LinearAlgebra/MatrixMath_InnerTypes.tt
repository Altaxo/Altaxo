<#@ template language="C#" #>
<#@ output extension="generated.cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ include file="MatrixMath_Header.ttinclude" #>

// ******************************************* Unary functions not returning a vector, valid for all non-null vector types  ********************

<# 


    var types = new object[][]
    {      // scalar,   ROMatrixType         rwMatrixType    rwVectorType
		       // ---------------------------------------------------------------------------------------------------------------------------
      new object[]{ "Double", "IROMatrix<double>", "IMatrix<double>", new Func<string,string,string,string>((m,i, j) => string.Format("{0}[{0}][{1}]", m, i, j)) },
    };

    foreach (var entry in types)
    {
      var scalT =  entry[0]; // scalar type
			var roMatT = entry[1]; // read-only matrix type
			var rwMatT = entry[2]; // read-write matrix type
			var m = (Func<string,string,string, string>)entry[3];
			

// ----------- Begin of code after next line --------------------------------------------------------------------
#>
// ******************************************** Definitions for <#= scalT #> *******************************************

		static void Test(double[][] arr)
		{
			// <#= m("M","A","B") #>;
		}

<# 
// ----------- End of code before previous line --------------------------------------------------------------------
    }
#>
<#@ include file="MatrixMath_Footer.ttinclude" #>
