<UserControl x:Class="Altaxo.Gui.Pads.ProjectBrowser.ProjectBrowseControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
						 xmlns:axogc="clr-namespace:Altaxo.Gui.Common;assembly=AltaxoBase.Presentation"
						 xmlns:loc="clr-namespace:Altaxo.Gui.Pads.ProjectBrowser"
 						 xmlns:axocoll="clr-namespace:Altaxo.Collections;assembly=AltaxoBase"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">

	<UserControl.CommandBindings>
		<CommandBinding Command="Delete"
                  Executed="EhDeleteCommandExecuted"
                  CanExecute="EhDeleteCommandCanExecute" />
	</UserControl.CommandBindings>
	<UserControl.Resources>
		<axogc:ConverterStringFuncToValidationRule x:Key="FuncToValidationConverter" />

		<!-- Style used for the renaming feature, it sets a tooltip with the error message if the validation fails -->
		<Style x:Key="editTextBoxStyle" TargetType="{x:Type TextBox}">
			<Style.Triggers>
				<Trigger Property="Validation.HasError" Value="true">
					<Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self},	Path=(Validation.Errors)[0].ErrorContent}" />
				</Trigger>
			</Style.Triggers>
			<Style.Setters>
				<Setter Property="HorizontalContentAlignment" Value="Left" />
				<Setter Property="Padding" Value="0,0,32,0" />
			</Style.Setters>
		</Style>
		<loc:IndexToImageConverter x:Key="IndexToImageConverter" />
	</UserControl.Resources>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition Height="Auto" />
			<RowDefinition />
		</Grid.RowDefinitions>
		<TreeView Grid.Row="0" Name="_treeView" TreeViewItem.Selected="EhTreeNodeAfterSelect">
			<ItemsControl.ItemContainerStyle>
				<Style TargetType="{x:Type TreeViewItem}">
					<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
					<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
					<Setter Property="ContextMenu" Value="{Binding ContextMenu}" />
					<Style.Triggers>
						<DataTrigger Binding="{Binding IsSelected}" Value="True">
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ItemsControl.ItemContainerStyle>

			<ItemsControl.Resources>
				<HierarchicalDataTemplate DataType="{x:Type axocoll:NGTreeNode}" ItemsSource="{Binding Nodes}">
					<StackPanel Orientation="Horizontal">
						<Image Width="16" Height="16" Margin="0,0,2,0" Source="{Binding ImageIndex, Converter={StaticResource IndexToImageConverter}}" />
						<axogc:TextBlockForEditing Grid.Column="1" Text="{Binding Path=Text}" IsEditingEnabled="{Binding IsRenamingEnabled}" TextBoxValidationRule="{Binding Path=RenamingValidationFunction, Converter={StaticResource FuncToValidationConverter}}" TextBoxStyle="{StaticResource editTextBoxStyle}" />
					</StackPanel>
				</HierarchicalDataTemplate>
			</ItemsControl.Resources>
		</TreeView>
		<GridSplitter Grid.Row ="1" Background="Blue" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="true" ResizeDirection="Rows" />
		<Grid Grid.Row="2" VerticalAlignment="Top" Height="18">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Button Grid.Column="0" Height="16" Margin="1" Focusable="False" ToolTip="Navigate backward" Background="Blue" Click="EhNavigateBackward">
				<Path Margin="1,0,0,0" Fill="White">
					<Path.Data>
						<Geometry>F1 M 0,4L 4,0L 4,3L 8,3L 8,5L 4,5L 4,8L 0,4 Z</Geometry>
					</Path.Data>
				</Path>
			</Button>
			<Button Grid.Column="1" Height="16" Margin="1" Focusable="False" ToolTip="Navigate forward" Background="Blue" Click="EhNavigateForward">
				<Path Margin="1,0,0,0" Fill="White">
					<Path.Data>
						<Geometry>F1 M 8,4L 4,0L 4,3L 0,3L 0,5L 4,5L 4,8L 8,4 Z</Geometry>
					</Path.Data>
				</Path>
			</Button>
			<TextBlock x:Name="_guiCurrentFolderName" Grid.Column="2" Margin="4,0,4,0" TextTrimming="CharacterEllipsis" axogc:TextBlockUtilities.AutoTooltip="True" />
			<Button Grid.Column="3" Height="16" Width="16" Margin="1" Background="Yellow" Focusable="False" Click="EhListView_OneFolderUp" ToolTip="Navigate one folder up" Padding="0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
				<Path Margin="1,0,0,0" Fill="Black">
					<Path.Data>
						<Geometry>F1 M 8,6L 4,6L 4,3L 6,3L 3,0 0,3L 2,3L 2,8L 8,8L 8,6 Z</Geometry>
					</Path.Data>
				</Path>
			</Button>
		</Grid>
		<ListView Grid.Row="2" Margin="0,18,0,0" Name="_listView" SelectionChanged="EhListViewSelectionChanged" MouseDoubleClick="EhListViewItemDoubleClick" PreviewMouseDown="EhListViewPreviewMouseDown">
			<ListView.CommandBindings>
				<CommandBinding Command="Delete" CanExecute="EhListViewDeleteCommandCanExecute" Executed="EhListViewDeleteCommandExecuted" />
				<CommandBinding Command="SelectAll" CanExecute="EhListViewSelectAllCommandCanExecute" Executed="EhListViewSelectAllCommandExecuted" />
				<CommandBinding Command="Copy" CanExecute="EhListViewCopyCommandCanExecute" Executed="EhListViewCopyCommandExecuted" />
				<CommandBinding Command="Paste" CanExecute="EhListViewPasteCommandCanExecute" Executed="EhListViewPasteCommandExecuted" />
			</ListView.CommandBindings>
			<ListView.Resources>

				<DataTemplate x:Key="ColumnWithIconTemplate">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Image Grid.Column="0"  Source="{Binding Path=ImageIndex, Converter={StaticResource IndexToImageConverter}}" />
						<axogc:TextBlockForEditing Grid.Column="1" Margin="4,0" Text="{Binding Path=Text}"  TextBoxValidationRule="{Binding Path=RenamingValidationFunction, Converter={StaticResource FuncToValidationConverter}}" TextBoxStyle="{StaticResource editTextBoxStyle}" />
					</Grid>
				</DataTemplate>

				<!-- all the following style is only for one purpose, to set the Focusable property of the internal scroll viewer to true
				without setting Focusable=true, it is not possible to paste items in the list view if the list view is empty (contains no items) -->
				<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ScrollViewer">
								<Grid Background="{TemplateBinding Background}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>

									<DockPanel Margin="{TemplateBinding Padding}">
										<ScrollViewer DockPanel.Dock="Top"
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Hidden"
                          Focusable="True">
											<GridViewHeaderRowPresenter Margin="2,0,2,0"
                                          Columns="{Binding Path=TemplatedParent.View.Columns,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContainerStyle="{Binding
                Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplate="{Binding
                Path=TemplatedParent.View.ColumnHeaderTemplate,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderTemplateSelector="{Binding
                Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          AllowsColumnReorder="{Binding
                Path=TemplatedParent.View.AllowsColumnReorder,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderContextMenu="{Binding
                Path=TemplatedParent.View.ColumnHeaderContextMenu,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          ColumnHeaderToolTip="{Binding
                Path=TemplatedParent.View.ColumnHeaderToolTip,
                RelativeSource={RelativeSource TemplatedParent}}"
                                          SnapsToDevicePixels="{TemplateBinding
                SnapsToDevicePixels}" />
										</ScrollViewer>

										<ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Local"
                                    CanContentScroll="True"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False" />
									</DockPanel>

									<ScrollBar Name="PART_HorizontalScrollBar"
                     Orientation="Horizontal"
                     Grid.Row="1"
                     Maximum="{TemplateBinding ScrollableWidth}"
                     ViewportSize="{TemplateBinding ViewportWidth}"
                     Value="{TemplateBinding HorizontalOffset}"
                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

									<ScrollBar Name="PART_VerticalScrollBar"
                     Grid.Column="1"
                     Maximum="{TemplateBinding ScrollableHeight}"
                     ViewportSize="{TemplateBinding ViewportHeight}"
                     Value="{TemplateBinding VerticalOffset}"
                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListView.Resources>
			<ListView.View>
				<GridView>
					<GridViewColumn CellTemplate="{StaticResource ColumnWithIconTemplate}" x:Name="_listViewCol0" Width="200">
						<GridViewColumnHeader x:Name="_listViewColHeader_Name" Content="Name" Click="EhListView_ColumnHeaderClicked_Name" Tag="Text" />
					</GridViewColumn>
					<GridViewColumn x:Name="_listViewCol1" Width="50" DisplayMemberBinding="{Binding Path=Text1}">
						<GridViewColumnHeader x:Name="_listViewColHeader_CreationDate" Content="Created" Click="EhListView_ColumnHeaderClicked_CreationDate" Tag="CreationDate" />
					</GridViewColumn>
				</GridView>
			</ListView.View>
		</ListView>
	</Grid>
</UserControl>