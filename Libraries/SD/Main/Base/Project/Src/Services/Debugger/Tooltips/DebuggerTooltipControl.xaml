<UserControl x:Class="ICSharpCode.SharpDevelop.Debugging.DebuggerTooltipControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:debugging="clr-namespace:ICSharpCode.SharpDevelop.Debugging"
>
<UserControl.Resources>
	<ResourceDictionary>
		<ResourceDictionary.MergedDictionaries>
			<ResourceDictionary Source="VisualizerPicker.xaml" />
		</ResourceDictionary.MergedDictionaries>
		
	  <!-- TODO move styles to ResourceDictionary -->
      <Style x:Key="ExpandCollapseToggleStyle"
           TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable"
              Value="False"/>
            <Setter Property="Width"
              Value="19"/>
            <Setter Property="Height"
              Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Width="19"
                    Height="13"
                    Background="Transparent">
                            <Border Width="9"
                      Height="9"
                      BorderThickness="1"
                      BorderBrush="#FF7898B5"
                      CornerRadius="1"
                      SnapsToDevicePixels="true">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0"
                                       EndPoint="1,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStop Color="White"
                                    Offset=".2"/>
                                            <GradientStop Color="#FFC0B7A6"
                                    Offset="1"/>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Path x:Name="ExpandPath"
                      Margin="1,1,1,1"
                      Fill="Black"
                      Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                       Value="True">
                                <Setter Property="Data"
                        TargetName="ExpandPath"
                        Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		 <Style x:Key="upDownBorderStyle" TargetType="{x:Type Border}">
    	    <Setter Property="BorderBrush" Value="Gray" />
    		<Setter Property="HorizontalAlignment" Value="Stretch" />
    		<Setter Property="Margin" Value="0" />
		 	<Setter Property="Padding" Value="0" />
    		<Setter Property="Background" Value="#FFECF7FC" />
			<Setter Property="Height" Value="14" />
    	    <Style.Triggers>
		 	   <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False">
              		<Setter Property="Background" Value="#FFE0E0E0"></Setter>
 		 	   </DataTrigger>
    	    </Style.Triggers>
		 </Style>
		 <Style x:Key="upButtonStyle" TargetType="{x:Type RepeatButton}">
    	 	<Setter Property="Template">
           	<Setter.Value>
 	              	<ControlTemplate TargetType="{x:Type RepeatButton}">
           			<Border Style="{StaticResource upDownBorderStyle}" BorderThickness="1 1 1 0">
							<ContentPresenter HorizontalAlignment="Center"></ContentPresenter>
            			</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		 </Style>
		 <Style x:Key="downButtonStyle" TargetType="{x:Type RepeatButton}">
    	 	<Setter Property="Template">
           	<Setter.Value>
 	              	<ControlTemplate TargetType="{x:Type RepeatButton}">
           			<Border Style="{StaticResource upDownBorderStyle}" BorderThickness="1 0 1 1">
							<ContentPresenter HorizontalAlignment="Center"></ContentPresenter>
            			</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		 </Style>
		</ResourceDictionary>
	</UserControl.Resources>
        <StackPanel Orientation="Vertical">
        	 <RepeatButton Name="btnUp" Focusable="False" Style="{StaticResource upButtonStyle}" Content="^" Click="BtnUp_Click"></RepeatButton>
            <DataGrid VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled" 
                              GridLinesVisibility="None" 
                              RowHeight="18" MaxHeight="202" 
                              SelectionMode="Single" 
                              SelectionUnit="FullRow" 
                              ItemsSource="{Binding}" 
                              Name="dataGrid" 
                              AutoGenerateColumns="False" 
                              CanUserAddRows="False" HeadersVisibility="None"
                              BorderBrush="Gray"
								 BorderThickness="1">
                <DataGrid.Background>
                	  
                	  <!-- Control backgound -->
                	<LinearGradientBrush StartPoint="0,-0.03" EndPoint="0,1">
                		<GradientStop Color="White"/>
                		<GradientStop Color="#FFFAFCFE" Offset="0.983"/>
                		<GradientStop Color="#FFECF7FC" Offset="0.07"/>
                		<GradientStop Color="#FFEEF7FA" Offset="0.436"/>
                	</LinearGradientBrush>
                </DataGrid.Background>
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <Setter Property="Background" Value="Transparent"></Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFE2F6FE" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Setter Property="Focusable" Value="false" />	   <!-- Focusable=true blocks shortcuts if cell is focused -->
                        <Setter Property="BorderThickness" Value="0" />
                			 <Style.Triggers>  
    	                    	<Trigger Property="IsSelected" Value="True">	<!-- disable selection highlight -->
    	                     	   <Setter Property="Foreground" Value="Black" />
                                <Setter Property="Background" Value="{x:Null}" />
    	                     	</Trigger>
							</Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn>									<!-- "Plus" expander -->
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid Background="White">
                                    <StackPanel VerticalAlignment="Center">
                                        <ToggleButton x:Name="btnExpander" Style="{StaticResource ExpandCollapseToggleStyle}" Click="btnExpander_Click" Padding="0" Margin="0" />
                                    </StackPanel>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=HasChildNodes}" Value="False">
                                        <Setter TargetName="btnExpander"
                                                    Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>	
                	  																<!-- Icon -->
					  <DataGridTemplateColumn>
                	  		<DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                	  				<Image Source="{Binding ImageSource}"></Image>
							   </DataTemplate>
                          </DataGridTemplateColumn.CellTemplate>
                 	  </DataGridTemplateColumn>
                    <DataGridTemplateColumn MinWidth="20" Header="Name">		<!-- Name -->
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border BorderBrush="#FFDDDDDD"  BorderThickness="0 0 1 0">
                                    <TextBlock Margin="6 0" Text="{Binding Path=Name, Mode=OneWay}" VerticalAlignment="Top"></TextBlock>
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                	   																<!-- Visualizer picker  -->
					  <DataGridTemplateColumn>
                	  		<DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                	  			  <debugging:VisualizerPicker Focusable="False" x:Name="visPicker" ItemsSource="{Binding Path=VisualizerCommands, Mode=OneWay}" Margin="4 0 0 0"></debugging:VisualizerPicker>
                	  			  <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding Path=HasVisualizerCommands}" Value="False">
                                        <Setter TargetName="visPicker" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                </DataTemplate.Triggers>
							   </DataTemplate>
                          </DataGridTemplateColumn.CellTemplate>
                 	  </DataGridTemplateColumn>	
                																	
                	  <DataGridTemplateColumn MinWidth="20" Header="Text">	    <!-- Text (value) -->
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                        			<TextBlock Margin="4 0" Text="{Binding Path=Text, Mode=OneWay}" VerticalAlignment="Top"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        	 <RepeatButton Name="btnDown" Focusable="False" Style="{StaticResource downButtonStyle}" Content="v" Click="BtnDown_Click"></RepeatButton>
        </StackPanel>
</UserControl>